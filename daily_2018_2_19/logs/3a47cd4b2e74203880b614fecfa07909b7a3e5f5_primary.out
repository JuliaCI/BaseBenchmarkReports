cset: moving following pidspec: 23010
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.47288126 seconds)
loading group "string"... done (took 0.473360525 seconds)
loading group "linalg"... done (took 9.353589091 seconds)
loading group "parallel"... done (took 0.166618442 seconds)
loading group "find"... done (took 3.421751482 seconds)
loading group "tuple"... done (took 2.086560701 seconds)
loading group "dates"... done (took 1.399693042 seconds)
loading group "micro"... done (took 0.196304012 seconds)
loading group "io"... done (took 0.509292357 seconds)
loading group "scalar"... done (took 56.928075954 seconds)
loading group "sparse"... done (took 14.089630972 seconds)
loading group "broadcast"... done (took 1.318199399 seconds)
loading group "union"... done (took 10.503350441 seconds)
loading group "simd"... done (took 3.606982635 seconds)
loading group "random"... done (took 13.404317781 seconds)
loading group "problem"... done (took 2.192666385 seconds)
loading group "array"... done (took 24.490334479 seconds)
loading group "misc"... done (took 1.142151079 seconds)
loading group "sort"... done (took 3.810545578 seconds)
loading group "collection"... done (took 22.087425871 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.710720516 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118705896 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199782219 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.199536231 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.273351663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165354174 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154915581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.127218255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.63886852 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205134846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136196638 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.361701957 seconds)
done (took 6.064224025 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.302301603 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061386791 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191341508 seconds)
  done (took 0.959908024 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076471505 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158496925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107127604 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092966501 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093288783 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107532871 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093028084 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107523393 seconds)
  done (took 1.462350963 seconds)
done (took 3.506182098 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499059984 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.959369438 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.54079746 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188926464 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.364538363 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306048071 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265557449 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.230928745 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089750158 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085259291 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.197396759 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.447730696 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.397818873 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.001609379 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068425097 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093903007 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15825745 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.831888148 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080104486 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111109957 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.518832216 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.219989551 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116182816 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106590175 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184417731 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126207807 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140659087 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102439203 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.773879391 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138989377 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209831158 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082845148 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137926056 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.168657004 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.218067456 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109660799 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.744916206 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199999882 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095919557 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099584809 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.749855241 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123924042 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.209232188 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105220739 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068456996 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164827594 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113161731 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078156267 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093353059 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.098836361 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17163249 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.500254787 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106674009 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.197141023 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09279266 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.762228485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097843424 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275638753 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125600619 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093310928 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090502925 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08857664 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167390016 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095710643 seconds)
  done (took 20.822362072 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.191898149 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208447518 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098387137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144674557 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144173688 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079989024 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088102076 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094612256 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.113875472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19633654 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.124467015 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215833467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076397174 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107758993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.168318682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251878486 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110230177 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121657597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090440475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094484207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144117531 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096926664 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095326694 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111048319 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169493013 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204035247 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108847666 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12201141 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089471501 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097080432 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143194975 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14861103 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09188392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089726273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173787123 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122732217 seconds)
  done (took 5.454405598 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233849599 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104136137 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104300861 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264822822 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170680877 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150480736 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.177953631 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178696207 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302466662 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.249221722 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178167161 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113116605 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118526667 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078845938 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080496134 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077981824 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.835591884 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.174325289 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142739754 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189005022 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112227405 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081178656 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725202552 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102189948 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085530862 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110754539 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06518831 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223929172 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097534218 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.483481412 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082213168 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114280093 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114271506 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20842042 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.176269362 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100431264 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122304311 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139193699 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093536674 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083348846 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21054688 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11620784 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078490944 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079159549 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130602113 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115882751 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106276809 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104969598 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133775561 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086254816 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109623838 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.101601863 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193504883 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.163360298 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102731053 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279961971 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106857982 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099383123 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109303671 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.807010863 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134710863 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083089842 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094965806 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095115093 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079115197 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.82944112 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104043574 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.46804189 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083991831 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159655903 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096462417 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11569916 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085850192 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084168956 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12395199 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084481233 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07882587 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103040426 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080071178 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087035963 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.130741329 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084663488 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097604962 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146808398 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096236471 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120993522 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108868376 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104043911 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085196449 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125917848 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081641446 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087144823 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.205245699 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114122988 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112635388 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111582653 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127897364 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102477995 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.271208218 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08401577 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121389688 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103623734 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127019777 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098715149 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08060017 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101594725 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079887891 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08087785 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159478909 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086562977 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079826623 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105361647 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084258457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09230354 seconds)
  done (took 28.196788923 seconds)
done (took 55.175575355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.425650465 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081756534 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101506304 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083269631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08117112 seconds)
  done (took 1.552254844 seconds)
done (took 2.308456702 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.183659847 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.266569231 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19795411 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106123063 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.149695339 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.168354902 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152378942 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.16733762 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148296337 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.168305816 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168414234 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104367172 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172484918 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183681437 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099952185 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205881339 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.101066484 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.148824711 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085231891 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191324759 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.083537421 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103791741 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087488256 seconds)
  done (took 4.223823165 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104810567 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0992643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102743327 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119692549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087300433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102187137 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11903195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109393948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101291657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113180916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087231927 seconds)
  done (took 1.905038468 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102358988 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099048838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093042471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116587936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086820614 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098572138 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116212692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107688779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099751061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112410808 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08747089 seconds)
  done (took 1.877001171 seconds)
done (took 8.759011519 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.201455903 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.944420939 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182095584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247970553 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33425314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299995312 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613573954 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205376466 seconds)
  done (took 15.92028396 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.115160776 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098149367 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.11392788 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.180517005 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116843538 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092314465 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0913872 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11236752 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092980849 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09185618 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112984729 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096484728 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092147447 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096600666 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112687602 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097865823 seconds)
  done (took 2.539867091 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135625301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117870624 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117575184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098626072 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095198441 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117880324 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101358527 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097639983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114928857 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095742184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102146852 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115759316 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09891848 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093612983 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116536627 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118782201 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095367717 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116025827 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117561241 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099383906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116492659 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097830657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098076111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.117456084 seconds)
  done (took 3.442726256 seconds)
done (took 22.664739554 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144410106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085242166 seconds)
  done (took 0.994500048 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169616937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184533398 seconds)
  done (took 1.125300939 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113819779 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091449976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138321973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103727543 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092536794 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108101834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116518957 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091788003 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.109000745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091765361 seconds)
  done (took 1.831910475 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097061038 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096790245 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124039028 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159841322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117149199 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094330673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096903741 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113160773 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09837432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09182071 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114700255 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109114817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096732191 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128690195 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095758417 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09761754 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117043751 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094867221 seconds)
  done (took 2.718207882 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093323648 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093532973 seconds)
  done (took 0.961130362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095148329 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090319645 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092606992 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11110469 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090834963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090074245 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10942002 seconds)
  done (took 1.453369434 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.526481462 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238602324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376819943 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073106941 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125637305 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.325538499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103895071 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073326573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092615528 seconds)
  done (took 2.745362161 seconds)
done (took 12.600855383 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093879775 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.210913924 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611111235 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13091648 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090748248 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147161523 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346760848 seconds)
done (took 2.412373506 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342590594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.180170294 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085693044 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092948313 seconds)
  done (took 1.479080713 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084751761 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098559699 seconds)
  done (took 0.968077539 seconds)
done (took 3.230653468 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092285839 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089148775 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111777796 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.109215186 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090198333 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089712479 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109921018 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090970102 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08948741 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088859879 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.1105604 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090665535 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088895316 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106933577 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.215118027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089197946 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088595555 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106846531 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088781797 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089367597 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106526795 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091083971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089419057 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08919072 seconds)
  done (took 3.230716854 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115094558 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091521117 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111278558 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094655073 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095899072 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112522484 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094388747 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092657888 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112497459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092602387 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094532764 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094397682 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109100734 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095369739 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092356038 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111720759 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095218216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091570403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11011381 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094790473 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093870776 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110062599 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095623416 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094179843 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111872058 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094530302 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091636593 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110310894 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096177656 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094188968 seconds)
  done (took 3.782668391 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099670478 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086813386 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090086175 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115524928 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087514503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090632682 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105795775 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092371379 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093133594 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090509519 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11065805 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091398072 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089800074 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109748136 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092064447 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093318872 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098575625 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.109454507 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091029847 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091783771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110788418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09108009 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089857088 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091491505 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108977461 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088822367 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091799965 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107440204 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092386262 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091092203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093239497 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112130887 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090842303 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100599126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112370565 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090767336 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096287688 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088075146 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.110997234 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088083419 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086874697 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108234868 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090828114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095535592 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090132068 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.11025805 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091048428 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092374059 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109589038 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093960999 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088833761 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090381631 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.112122176 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093136835 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092761559 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105631948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091068232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087066321 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091918526 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.10972697 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087444134 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08801649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113295896 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092102134 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104349124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11505495 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091633473 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092398327 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091621865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.114681209 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09377806 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102116444 seconds)
  done (took 7.785359261 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11651321 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09976507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110200762 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093404462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091095095 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090828036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114742184 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091980745 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092166271 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115531192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092146455 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092248899 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110255343 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09342889 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092290053 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091436107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1154607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091864605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091058938 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110037166 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0917695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096500219 seconds)
  done (took 2.979544112 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218794525 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117722152 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141359477 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122277494 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109380489 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121477318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096468081 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097875199 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112956734 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102049185 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102135321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113302637 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110657981 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101162677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119324505 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102758522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097191583 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120308694 seconds)
  done (took 2.902822498 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107175269 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092925444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155566958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094333789 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093266418 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112135548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098804379 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113073604 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111920628 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093719231 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100348629 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111128369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093859514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093452555 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094383684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111452931 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094441988 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093127115 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119964018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098924697 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097912223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118643703 seconds)
  done (took 3.095420484 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109613757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092305877 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127984277 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097000013 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093921183 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092930464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116709761 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093394017 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09848681 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112322852 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094283887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093622165 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125633693 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094042595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100982091 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111775204 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093637777 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093802579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111007592 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094108173 seconds)
  done (took 2.844585935 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188710416 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128298446 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109155888 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117011673 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127816016 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109480075 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136009152 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109510352 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109473573 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138042721 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109783861 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109505721 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136078064 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114013526 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126367073 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118687057 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117107036 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139450512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108987323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110831715 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139178385 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109525439 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135596076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109148843 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108327003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129137577 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109539388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113877071 seconds)
  done (took 4.220783141 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09572376 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091707991 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091219986 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110100173 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09238382 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091053129 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092328518 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109872694 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092152692 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093118543 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110186619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092838323 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093076081 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092171647 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110510812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092411652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091976457 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091833183 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111774225 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092239526 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092341689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10973585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091666948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091450814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091264282 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110850899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093530125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092601518 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109049039 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092294301 seconds)
  done (took 3.71835103 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10649168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101640946 seconds)
  done (took 1.013002936 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102487539 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105910875 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091212621 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113009349 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098590496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093421485 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118993236 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099328633 seconds)
  done (took 1.630010552 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.187147605 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210723229 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.11765532 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10542598 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209996623 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189498783 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130510529 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097137424 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111712866 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086297992 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203050459 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084749769 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091573319 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109559808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09261431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098119666 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113655659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102470765 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100060518 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114487978 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098003527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097477449 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113139336 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103604451 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088804126 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113756246 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095855815 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103832339 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109364089 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094883146 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092293823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112331649 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097670166 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097911904 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093684216 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.208183818 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120565842 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090129932 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093903305 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118657284 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124351583 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0940534 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113444181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092234786 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095956255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116379275 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100246245 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094187782 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085239335 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107639146 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094104279 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088254649 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.112957517 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094557711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092938354 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118387524 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09515916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090027576 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107591833 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089510233 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092595451 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108087645 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095373802 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097272537 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112817642 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09502822 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092604589 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094293691 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.115208412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095013281 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091454381 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127195611 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094863643 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097774535 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118611499 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09647053 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090454713 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120308652 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09297406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094466196 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.117316051 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121227461 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094700205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107333757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088876524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100008052 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094766052 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115986571 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087171125 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100918241 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11604663 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096480823 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086441082 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110689997 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08975245 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096675458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.1053921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094263311 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095001177 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098255571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120021426 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092146832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094022339 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118057974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100185367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091328543 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164528956 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08959015 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108563768 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095542898 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099906633 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086664146 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11358502 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092717518 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090165077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.1087063 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098579089 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093319881 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115204201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098120141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095420722 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114121251 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095857379 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093479825 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089746978 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.117690089 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101608402 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095888288 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.116524167 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095564868 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095680881 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113224057 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098952487 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090596589 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120195027 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091751234 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094287993 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095749125 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119178149 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094728471 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088829473 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112261453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094300444 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0924094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116624737 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094121082 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090447734 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105912558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094989602 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088925707 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.115270048 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104368014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089466409 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096279027 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109909926 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102814959 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090363402 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120722436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096396752 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099317629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12004901 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086669763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09149539 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116566923 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096996088 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089505357 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094954086 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114439231 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10115159 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086508723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118336253 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086464368 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091386044 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119917583 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096117997 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098083652 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089478897 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152073664 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105252006 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098800801 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112860511 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092988365 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097331289 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113311071 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098527904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101068962 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119435703 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092483151 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092897348 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119915814 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09147161 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096325186 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11143481 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095646836 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086265405 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096250842 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107534723 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099180662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096635623 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119081111 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099950146 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097222166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11211323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103670591 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090634964 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118332588 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.088007841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098772532 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103413301 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121043515 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100913037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095273359 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112354511 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096281853 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102493918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116729772 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093940943 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09609324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10765287 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088861348 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099915412 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09675666 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110461911 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094837033 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095774251 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116492623 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093224375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088349898 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118544016 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099352279 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090284159 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11456017 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094790336 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091880814 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121396063 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087716882 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089927999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095117709 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120395601 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094752987 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094057397 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117178219 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100837556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097460467 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116737096 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09246068 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102577274 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091028256 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.114449625 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091293623 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096742826 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108072116 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096678277 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09463684 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110472361 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091129081 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096600349 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120866824 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099346987 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09196925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098034438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120614913 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101101203 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091678492 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.121855245 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09114538 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087049649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111364843 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087919267 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09712461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110265652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100473152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092875864 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093270708 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118163207 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095741155 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090798259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120992739 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105206166 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088191387 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.118793361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092686404 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094187905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.112577364 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09228783 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096978148 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116502794 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100142413 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096535162 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110749378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095431352 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101259116 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09110299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121493115 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100801956 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100792192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110175855 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099302211 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092501948 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119258536 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089012692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093943453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113431135 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094042624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091508981 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11216058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091644363 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087920322 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090381017 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121308562 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092697212 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100610907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114285743 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093119961 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091143189 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111008614 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101142924 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093879333 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120834422 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097032101 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088035751 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097457202 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120839283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095041911 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100847738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109675875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098897787 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101228366 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118323605 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096829791 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103500667 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101706374 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121304803 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10086578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08783138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113246455 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098374601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094695943 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118179966 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096145043 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089591927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116151247 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102370243 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095894224 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111925806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088940967 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096077857 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100777469 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120496011 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097702383 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098218286 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116905272 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090844047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098910713 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099384305 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11631861 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101127878 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094010833 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119844447 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092211928 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101326874 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116688397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089222385 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087976199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11200011 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102965721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089769647 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09889739 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.12040941 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09115643 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093426471 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120328568 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092113662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098250084 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120041358 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09391018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104682074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095680641 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114118101 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10024285 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099979018 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109489552 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092595178 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094181372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122591226 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09307104 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099789161 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114541436 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101378327 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099109195 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099631426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122087227 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101652066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088199221 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123009844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099131037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097568395 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112751323 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093400436 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089430788 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114109477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102116373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092276476 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102509199 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120743246 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092885731 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092898814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122425124 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095069343 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101784389 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112315191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097150902 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088962074 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11746291 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095137044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10181299 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110663184 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090956128 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100586037 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100135816 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120635645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097079393 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100970397 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109420836 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088287407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098422973 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112253055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106345251 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098077607 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092522026 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115426534 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098207798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096391468 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124205817 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089234404 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091856804 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117937898 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097893821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09368895 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110177201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101093368 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093035249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094986076 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115311175 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089557108 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093084354 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124387829 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093136211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091529712 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112788261 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102651128 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094486531 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113003167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091361633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101435325 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118605835 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103008177 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092701444 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115005351 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093347216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097670584 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101670074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114801822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094735765 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093394457 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122083927 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100752577 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088072948 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113227711 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106153727 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100580159 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116833205 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099044725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093427309 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102215935 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124464969 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098521837 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08995099 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111701099 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093748525 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08955725 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119248163 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100144629 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09410272 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114183116 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10195804 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098955921 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09757173 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.12099674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090491923 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10275235 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113561385 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099090202 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089313622 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110600348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099755067 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100609375 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093294785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117552875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097257734 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098000576 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111991853 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093637301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099266198 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121582123 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103579207 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094202872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09270668 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120837475 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106658622 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096533192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11619472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102390085 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103187273 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117302239 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095602073 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101664579 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124830737 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099211664 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103073045 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115031742 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094714378 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102311505 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103847317 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126898857 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094744958 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088573463 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122704549 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093004215 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090047896 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12167331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103943488 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103143125 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116787437 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094266781 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105647452 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122385701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097802799 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094757163 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114815859 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101069453 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093525027 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098992084 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115008117 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102787859 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10418374 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12607363 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106793704 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090995249 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122132972 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097935247 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104349255 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.11961958 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09085334 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090042008 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0987915 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126131932 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103882386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099729203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.121244964 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101214585 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096234812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11846608 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094128348 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104061124 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101463009 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.120398873 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097871556 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094231661 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118647265 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098736738 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102701684 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124702316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097884522 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105627208 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122077025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09640695 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093493251 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096604119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.122068794 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097927629 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101017094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115933133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091372302 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102407968 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124905613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096687626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105254778 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103439297 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.117090996 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098335108 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106075283 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122582833 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098866398 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097772297 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.121666928 seconds)
  done (took 62.554668014 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150675796 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105315738 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121483809 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100988184 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115949652 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123082202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09885087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100613685 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121785669 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108185149 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100204201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119718691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114162261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11962339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137878142 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11041213 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100709126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121782065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099495418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099791368 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135212043 seconds)
  done (took 3.261856794 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119489248 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111964034 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132509627 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112771816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10515626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130873098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108864936 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130621776 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113372601 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106402524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133890896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110012936 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107948268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130620825 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108071996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129486954 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111918713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107081358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133536555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110607544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108117308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.132161509 seconds)
  done (took 3.451919803 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131255324 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10218428 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09842794 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12030738 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102158239 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099764084 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123055934 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10103735 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108002905 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094807731 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110894691 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094627879 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098717521 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121045824 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092994662 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.0988118 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129394501 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102469231 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104411672 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099566164 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11197976 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100243135 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100464852 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111702196 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106343443 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104544081 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120664512 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103058042 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089903225 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102853322 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121584324 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092850745 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090990117 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110339101 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091450824 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102535371 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103058479 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121969642 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099837725 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090544744 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121590567 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104246438 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09075536 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100415239 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121457562 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093748181 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103328543 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120195732 seconds)
  done (took 5.927464351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132599493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159033922 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103321655 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128129759 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136424811 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108571472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103527707 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130523473 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102375468 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125619831 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114796456 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113966728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12818016 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106136858 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103286633 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127885462 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105848805 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104117515 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129324778 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103243419 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109003752 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127026697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113329502 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112787212 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12855057 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102764584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103840377 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127836683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111439171 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108809822 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129384423 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107063131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135347493 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103301464 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103470315 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123930692 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114602123 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103972842 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126329595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.356454593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103751337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127857469 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105950365 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115157154 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126674262 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106315673 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104102558 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122970897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112612757 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103555948 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.132356182 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113596277 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106389678 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.128015147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105777241 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112903897 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.126801957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103778052 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106278939 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.134766519 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1036638 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105037152 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136222759 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104954382 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130927755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115265105 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105195528 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127660309 seconds)
  done (took 9.140238578 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137834996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10726829 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137774611 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11690302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106763688 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129702819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107335177 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106676464 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131155037 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113455648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107427928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239273981 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128438277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112234944 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106941255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131607997 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106640274 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107027271 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132543145 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108166209 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106621499 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136807616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107156208 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137351196 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118006852 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104516682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12972936 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10784365 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115092188 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129306917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117375083 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129299417 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107297195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116908078 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140198232 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108500154 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102146184 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129556681 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107769644 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108108377 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.127587315 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11600843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10947694 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.127864369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108804963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106397318 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137519939 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116985666 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1328223 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113743018 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10729502 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136399324 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107957653 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107228571 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135753655 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121423919 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136780087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115098569 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107881378 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.137600678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115107217 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142680573 seconds)
  done (took 8.375134336 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105092247 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099774269 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099305948 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121655229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10010986 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100462473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098964652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121939101 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100396389 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100024933 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121040877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100288929 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099675825 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100020966 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122101297 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099433501 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100965017 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099253495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12093748 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100312021 seconds)
  done (took 2.986865556 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115352489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115970555 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12471011 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108466204 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102733491 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129641219 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102889276 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102609463 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101729037 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125616309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109444196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109792421 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125650959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107550389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109018297 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.131489612 seconds)
  done (took 2.701119345 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122387405 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117490438 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202874578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103368408 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127433906 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108966328 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103384291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127557477 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102429901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107713047 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104617828 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.129747638 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103190898 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102632197 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126031102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105816441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101224022 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127686103 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10298066 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207846441 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105460895 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104122165 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127122796 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106963653 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10417399 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131446203 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109548101 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103216099 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125661303 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104385221 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104555163 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108944915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.125828318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106565248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10355348 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.127431343 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103733583 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102364728 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127576304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103928263 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104750512 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126816835 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102817887 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104174651 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100793778 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125496524 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101465658 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108873498 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126858199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104262184 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10310888 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129820688 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107398533 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110677611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131163614 seconds)
  done (took 7.240980264 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117999233 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104668929 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137741119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102024906 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103715914 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104728077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126980525 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106226031 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104148222 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123184081 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104221776 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104864727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126855532 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105060281 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104746948 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103130148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.125215277 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104540395 seconds)
  done (took 2.890249646 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115459303 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102323903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106795975 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127585797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102074044 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103103772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123112133 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101783544 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101467729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102481393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126500046 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102642733 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102694303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126412524 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103763875 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102768494 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124590014 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1028059 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102723317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100674975 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12627689 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101729628 seconds)
  done (took 3.294968587 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.119093559 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.232495896 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108975291 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.239459851 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.124710886 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099850543 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109638761 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.123722539 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114864867 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099310962 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121730567 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099187502 seconds)
  done (took 2.479749163 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135260694 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139956062 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127762009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105005838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11321553 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130794158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109015272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107135742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138371063 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118513425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129511885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115886447 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11603441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138557928 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111802617 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112271393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130213114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107948926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103993536 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144052587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107905735 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139217757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108049514 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108540457 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129424081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114950897 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115942263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140968138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108184576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138605166 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112758438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107554323 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137151778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119810148 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103883627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138044928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108093131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144098331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112351821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114576906 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126346362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112761639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13744676 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112991853 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115528457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13082561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113247941 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107767896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129734776 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128623119 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136028647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116118622 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112390062 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137617676 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114998897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151219607 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12021641 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137524764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11266325 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118928204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138061013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112689087 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137473574 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120046981 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11179267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137983018 seconds)
  done (took 8.969446223 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147674034 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104618655 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13082075 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119778377 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115487488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130679074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108000406 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107452946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130954969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105446319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173929138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109289783 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115861986 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1383926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109306162 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130744535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109830033 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115868112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127397322 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129811971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108350821 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139793849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117008274 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139043241 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119630888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112460925 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131940491 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108588968 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107547643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131064991 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113199088 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130234835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116874266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105655209 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138398764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108182829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10859486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137183825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109403993 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111804922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138856222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123404595 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132173087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109617967 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12004079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131873643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108461155 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10515104 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130757527 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105106558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119745695 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14193477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119066387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139756613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107803807 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111826369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131053459 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10813648 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108525272 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135917767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117702341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131182582 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130814939 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108371549 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132172308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118070578 seconds)
  done (took 8.916615685 seconds)
done (took 170.179462712 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180721332 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215923898 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199080251 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162840574 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093303383 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.162860243 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127091384 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202025393 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093583665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094526865 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117547443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097480347 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.203615598 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094300676 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118407689 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09714403 seconds)
  done (took 3.147826976 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201005545 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343072962 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133957072 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098790283 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102056846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099321422 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123114103 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101725442 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098353782 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128786914 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099196112 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094964877 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12749126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095785578 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099612463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121991596 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105992367 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099222682 seconds)
  done (took 3.175412215 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12359432 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152203024 seconds)
  done (took 1.180361155 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134467365 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213521334 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296259233 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170975339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121366587 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141925048 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148181012 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134829195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190483667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136487243 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11239031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097915181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149210766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104245932 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115855272 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122118001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128274211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114055962 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136402228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102298117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122286117 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.126226848 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105264145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136573035 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18006641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133438841 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103408415 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102441164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123081068 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11378668 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106101976 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139430537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112342676 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179633926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102123816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17698616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106151153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122425295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115341524 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100409223 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126388889 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103658196 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11281284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120804429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102288878 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106358692 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126722055 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102323747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106679919 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130930852 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10873075 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105373809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17385849 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129430556 seconds)
  done (took 7.939700326 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.917081345 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148146378 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099315549 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.068959602 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144251896 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113130095 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.908526984 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148685076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250153815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.905903272 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116293168 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106459425 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265872497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259511229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.267550288 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360133662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.761758726 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112535303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130859791 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16779603 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104971529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139527844 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115748025 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456404715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100721372 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100790207 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128063112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108404496 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178036769 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100652992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104038528 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197624614 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293364458 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213638644 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099805367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121976825 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098966128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187744315 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272173467 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223249173 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166759613 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120782139 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100311717 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104673525 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138086569 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096768272 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181664602 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191063133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168704045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129095307 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107938715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10782199 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126097558 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179413714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097953229 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361001775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364227636 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121774058 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10644708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112001803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264006115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124433501 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240437679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123052186 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217750544 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123208823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805712944 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1632672 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122128942 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105107689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10480738 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12858957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104650941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183023225 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409783929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127950386 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105320573 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099677746 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2297881 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099426721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123772273 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157356494 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124797885 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107424084 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129753903 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107409151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190628306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247547073 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129617797 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105850656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104587303 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111068001 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100976553 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231794245 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231269762 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179521688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228016781 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105710109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182311794 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16336702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127823153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189647065 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106197739 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111867323 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125644994 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228690388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135995424 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126336621 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104712106 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106028905 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161051868 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103507403 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130392497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165963975 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493907622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187528284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097702189 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128466917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107454251 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181397417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106683302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266832832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106683264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188110739 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127972604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098389508 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106566243 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182911191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108015594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129766789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104290197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108850362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.281128792 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22340243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131330987 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249429287 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172289319 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127759966 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172647015 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130201462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16308157 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133506948 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104057338 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101369231 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837858451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111527613 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106099855 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127766278 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18182736 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100620117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126329319 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10018006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098642192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78858025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127431888 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099124093 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102375454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127290786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105925632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106571574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127207404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159631629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.274357293 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109568862 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10567647 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124057292 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156837698 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125473715 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100065056 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101140605 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124276175 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107541501 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106111755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125294647 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166380499 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180661229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233802677 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568198223 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12327449 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100573394 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246013813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101006102 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353095886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106612072 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238465089 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184042108 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09817759 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361899554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185371493 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206663346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105716737 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193135921 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099096842 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106199671 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181002755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100316465 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131508687 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181146935 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109664801 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107758872 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26474165 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125066077 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224000159 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.123134446 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192005261 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102545639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106527616 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32837548 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124903946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1134394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180996145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105800761 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10080434 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.97008272 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125553454 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109882483 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10534493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258257667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.15962236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129635618 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10907464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109746884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180705369 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229510594 seconds)
  done (took 46.750518951 seconds)
done (took 63.093009492 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.225406425 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166750793 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.35499889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148093562 seconds)
  done (took 1.913962247 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263653596 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167041503 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.242166546 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097644973 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249784864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097697287 seconds)
  done (took 2.048843828 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175085245 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166088638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143222024 seconds)
  done (took 1.419044461 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209670575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208317103 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347964267 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.235562001 seconds)
  done (took 2.021953073 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.275933123 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117987353 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12582602 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.232239665 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.241223282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207048304 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124133178 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17501078 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130102263 seconds)
  done (took 2.608348567 seconds)
done (took 10.940443631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.294512813 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.301870893 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.399447052 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.436130442 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.393140508 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.233499461 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.253029558 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.141310474 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119020845 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.346158489 seconds)
    (11/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.25947174 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.416614472 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.207057056 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.250215251 seconds)
    (15/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.418553263 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.191559716 seconds)
    (17/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093129989 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137002995 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126118368 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107129088 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.334899704 seconds)
    (22/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110884643 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.424160274 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118758451 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.300065687 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196039114 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.198407155 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124944651 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.256684714 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20221839 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110354465 seconds)
    (32/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.193989614 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103390669 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173180101 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13806884 seconds)
    (36/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.134882308 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101775713 seconds)
    (38/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.16417569 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086104355 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100321757 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133854883 seconds)
    (42/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.203323978 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.189450664 seconds)
    (44/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109922229 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.208034046 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198504032 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.147359705 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102569063 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110418225 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.110830813 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156986138 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082015692 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118378254 seconds)
    (54/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.154101412 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118466541 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085480153 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.109972108 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.212380968 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.151257412 seconds)
    (60/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111155295 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106978086 seconds)
    (62/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134636904 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107600332 seconds)
    (64/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171835211 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085562114 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128275581 seconds)
    (67/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083101463 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174557053 seconds)
    (69/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176083072 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122355583 seconds)
    (71/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173913574 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.111372012 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106299986 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124624521 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133473068 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082279379 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.08184068 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.147116049 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131895308 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104423302 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103683632 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078144651 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123945258 seconds)
    (84/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11053988 seconds)
    (85/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.148546633 seconds)
    (86/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.167168892 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081881116 seconds)
    (88/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079123685 seconds)
    (89/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125866274 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084914768 seconds)
    (91/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.235350607 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085041437 seconds)
    (93/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.201721567 seconds)
    (94/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080066098 seconds)
    (95/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.145048756 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080081432 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15780622 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082960105 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102924673 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080041022 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077722742 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.143011056 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102683882 seconds)
    (104/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14587462 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.142475436 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.138867556 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110071312 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129610911 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107276671 seconds)
    (110/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.141744714 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206151418 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104514016 seconds)
    (113/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110482393 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08187647 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103866571 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103224064 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109496339 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156568921 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079166642 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086981468 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.133399113 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081237762 seconds)
    (123/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202903191 seconds)
    (124/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085281243 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113012403 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106256671 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080429045 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122797962 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122740077 seconds)
    (130/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126427462 seconds)
    (131/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085438574 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087964914 seconds)
    (133/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148353271 seconds)
    (134/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.104853756 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111850591 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12891626 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082559837 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136966493 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086289181 seconds)
    (140/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086885708 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109693023 seconds)
    (142/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.104119025 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102435484 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087243084 seconds)
    (145/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104086233 seconds)
    (146/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.107138766 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11425199 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.084185442 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107168198 seconds)
    (150/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157305507 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104478028 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081929609 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084019684 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.1117009 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082509324 seconds)
    (156/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09008547 seconds)
    (157/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147919873 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082024919 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136918195 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102325426 seconds)
    (161/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08616612 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127765482 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103240487 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111147287 seconds)
    (165/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080443062 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.104103852 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1262924 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081318459 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085295523 seconds)
    (170/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085398101 seconds)
    (171/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.12734505 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.138747105 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079956229 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111522097 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.105735041 seconds)
    (176/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142483001 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103549236 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08561907 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129025695 seconds)
    (180/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081032113 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111995877 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147657579 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10312116 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104925959 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086419374 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.105823211 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08326498 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087718671 seconds)
    (189/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113097509 seconds)
    (190/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137770101 seconds)
    (191/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083644575 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087665044 seconds)
  done (took 27.58489937 seconds)
done (took 28.524189184 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232181372 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132625665 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111459052 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110790552 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235367772 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118490097 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154182495 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11265995 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120911436 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137205124 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101743014 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124402506 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135808396 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.218657542 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.143184442 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102922399 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10295056 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147991264 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126360126 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127590378 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237218043 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13094852 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123169486 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103089675 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235554971 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103536786 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136037585 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114539107 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125293942 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138367341 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112859596 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10294044 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126562768 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152599131 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103454792 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112350259 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12734144 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087116202 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111423483 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.1355096 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125531834 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11227655 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112169698 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.128808149 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113945994 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110879533 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127038893 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116602838 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101700983 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137922425 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106043494 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128080347 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136397207 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101507153 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100746654 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127945309 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124179715 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102818659 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125045104 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126360397 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103576462 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101886706 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140249274 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101813859 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110926886 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127035411 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112911259 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112923812 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109985467 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129373239 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102520433 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111126046 seconds)
done (took 10.124697665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.11408261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148508802 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.24880485 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.252259825 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15613826 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118851367 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116484118 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152156182 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116867212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120159072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.165311759 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135926743 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.255562889 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118231255 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144960682 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114009083 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113554242 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138421657 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.24985507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128650299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12471357 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.146139302 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129417732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12007207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133825022 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139304293 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134871951 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118115548 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107409804 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115303059 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151593118 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107151252 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134044419 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12668443 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123751724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140586292 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120331147 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114263538 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133080151 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107490773 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112580224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148031841 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10720945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118813541 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139491144 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123645667 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11400216 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143204585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109719757 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114592127 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107689673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155928312 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119000305 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.150137244 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120183864 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119392446 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.145222317 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12042821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111038024 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142330261 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107493273 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107436506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108315952 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152907872 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110116414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144249502 seconds)
  done (took 9.856459549 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132376991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135866527 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143176942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118246254 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112834817 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127743132 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100556156 seconds)
  done (took 1.850301449 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109077069 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.269227248 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259240511 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.259548921 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.25035395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.26743206 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125831877 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102819258 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166823038 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113566563 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268661067 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322953046 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139622485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119341614 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264076517 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10219427 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261157285 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102693432 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144094485 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263493498 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120346668 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133217316 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.14351161 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104130382 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264934477 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104891621 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.336711411 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121801953 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113139164 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115522147 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1458105 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178893054 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262083413 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.146199034 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111520297 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259340937 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.25223182 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117395901 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.331861796 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108073661 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248150888 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11790233 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118795063 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145627042 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119991203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247770165 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121239226 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146850556 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116929026 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273372811 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114000004 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263973534 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141405231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117737082 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113593771 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14608315 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126086628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119040647 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.27266735 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14811921 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.230112639 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259901449 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254523489 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.26117117 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158107996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26641115 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211556409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14527883 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11141452 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119018619 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.261676264 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.146601603 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.1169527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.252394033 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120260855 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.264972207 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263717857 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114358979 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.146024791 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107675299 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115888715 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131810973 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254099913 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118090451 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115817664 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150168265 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117330909 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117893081 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136431262 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12673539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117403066 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.14227377 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12394551 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117794981 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147028506 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.266708097 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115024013 seconds)
  done (took 17.821587905 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113070531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105224958 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10873985 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13202477 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106138755 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104795707 seconds)
  done (took 1.685568392 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148811479 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118650114 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153056062 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119703976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168372473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251687076 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261306208 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140281998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138521563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130560267 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254403928 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256475112 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25634236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122241513 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260168133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120029578 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26211296 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116238929 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.157058794 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116962518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117282056 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149561374 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116324821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245256691 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119644418 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148931064 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113043001 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126675088 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155432169 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113958976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122201984 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14528987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111748009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111892605 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258025896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.13885888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114651763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12155857 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1494412 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120668297 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259404412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116165017 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123478997 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.15046567 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112702267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138315307 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122535597 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11111642 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259926471 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120764687 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149588639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119547338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119202007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150615196 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111648416 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111777419 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149426743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26199439 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122496625 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110037612 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147707392 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121914753 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112210816 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.15261712 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120677806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119800858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136680049 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120752908 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116628842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147017214 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12296233 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11980769 seconds)
  done (took 11.828505259 seconds)
done (took 44.02076601 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.524430603 seconds)
  done (took 2.534522041 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.099241756 seconds)
  done (took 2.111496175 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.266658782 seconds)
  done (took 19.31196568 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.429475446 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.347104321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.037383784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150301974 seconds)
  done (took 2.978245791 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.100606221 seconds)
  done (took 2.136024577 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.348373465 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246388178 seconds)
  done (took 1.619820609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737596612 seconds)
  done (took 1.770692777 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.782831141 seconds)
  done (took 2.805561707 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.274545083 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244392127 seconds)
  done (took 1.554105886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.677260797 seconds)
  done (took 1.707718469 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.108616478 seconds)
  done (took 20.146892888 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258312625 seconds)
  done (took 1.297991547 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296986437 seconds)
  done (took 1.336593135 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.675611783 seconds)
  done (took 4.717113014 seconds)
done (took 67.055046357 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125988283 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122084121 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120796192 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145608067 seconds)
  done (took 1.544945277 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130029939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118091727 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.143565736 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14307585 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123267701 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11767726 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143566035 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121387119 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116057512 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147968607 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118270478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117889291 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146329191 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117997391 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116437383 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.119932309 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.148988326 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117782607 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120760829 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144435568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120405214 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119331039 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147992663 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122419212 seconds)
  done (took 4.123125411 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120663396 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10910024 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110677803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13527718 seconds)
  done (took 1.51897995 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134374019 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130329943 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154569219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12610232 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1320312 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154226036 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117831848 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.1172574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143988808 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127004591 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133085083 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157374991 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130671766 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121271744 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15527882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113745377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119763301 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15721162 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126783479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126810674 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145991499 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124172055 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123713218 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154213158 seconds)
  done (took 4.267092426 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201630209 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129967371 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173670862 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165646426 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175451602 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117015522 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145301828 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151025896 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124220342 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117695842 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145751519 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165764161 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.122711134 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14827523 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118568187 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.123865496 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.153763056 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123411834 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188247403 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123413386 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124229105 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.155875362 seconds)
  done (took 4.243050881 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128209503 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109602141 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.1071191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133037822 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122314583 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110989138 seconds)
  done (took 1.758080776 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11499191 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104143192 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103135972 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130000253 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108519405 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103929224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102703114 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130442029 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103616429 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104676741 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129488261 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103314177 seconds)
  done (took 2.389874199 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211470498 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14685208 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24875232 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384146237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190511548 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160069603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307370608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188361631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17859163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165032959 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182196325 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190431494 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153898106 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217811102 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140386595 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187729836 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173800813 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239463797 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142176711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241744068 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183357237 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176624375 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219644912 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147179014 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169630398 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162402622 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.147073898 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128859225 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19426587 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163694083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203067497 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150665827 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168656715 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213375654 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233299671 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204907577 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265603094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133045237 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199562237 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.220198123 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258043157 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142857268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217565888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152217572 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156997825 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191221642 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177663405 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184189251 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161449468 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145243793 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211800922 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206832622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170720677 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163573757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300844539 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160986887 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14250898 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205591043 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1868833 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23135718 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209169649 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122955063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201785591 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218448769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215884531 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170534412 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164767726 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152310121 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164872298 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234247032 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210762183 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158712665 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219781676 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130632424 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202067939 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165073256 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182698124 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236824048 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170823038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148308998 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152691345 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132564325 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154888621 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188582067 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149579732 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216128059 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160599076 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.18461218 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207612682 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152024784 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190713994 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158918711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190177902 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146582006 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13208348 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143163781 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184937011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158823516 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157506884 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151981315 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141373016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.156570147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150117498 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.151934676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169807711 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134523073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186819157 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198572444 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131567989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209595196 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147389137 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189469258 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168424363 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222435643 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130016755 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160273584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220564169 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19962932 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136331298 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19740109 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224673323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150919678 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133519004 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19514257 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221741735 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14419582 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229422605 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137824508 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163963043 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140024255 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203007185 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1598463 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.18886076 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127757863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193731742 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187358543 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155708948 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139252836 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213292932 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132355045 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123614836 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164957618 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136560519 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170541932 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151690911 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13943137 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182866741 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19450936 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164956733 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186724257 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134083339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202800488 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1314316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19583584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148244652 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118379063 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201026251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226249038 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129765043 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207674664 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161411727 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210277432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173439119 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157159816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181474975 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15744434 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122182334 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192573389 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169046281 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191550264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186646399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207616174 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192989133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163207312 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177954609 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195792724 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185222608 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18552219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140484869 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200891798 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168959027 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150509582 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123875381 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126034628 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165475813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131256182 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135889942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208965768 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19251711 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17640371 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194789044 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137920994 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219694901 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123567479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188403901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174468479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169639264 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188679638 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22047259 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209371347 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140023494 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190229255 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120300525 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125231285 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161538096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15928779 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166466145 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13551873 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168539718 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19067421 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196182699 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147799131 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219665771 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193179304 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200610324 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150307679 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161513564 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193621418 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168458285 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211938203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133093617 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158304607 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221212912 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169045278 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190092921 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197049111 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178504409 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22067578 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193113371 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131200462 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143582866 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190012928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137656899 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189257345 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144261635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158951299 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147739007 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136304678 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171285182 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21547251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145435368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203743501 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154048017 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202242285 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12485403 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169803258 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173864601 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174593449 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106895025 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165564068 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220065746 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178895932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150480346 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199054098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130331482 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344383909 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181276244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201801496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135575592 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166571923 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17375175 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186030743 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158421698 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212281339 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141592912 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236968776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168855083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168260852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129837476 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175131782 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149252121 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168688299 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153977785 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191496149 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142333033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216695743 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135304181 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200009972 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175023431 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174764168 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149609713 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16689265 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225931151 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19770566 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201391326 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166044704 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189539326 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183198513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122244276 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15700195 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132269544 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213706734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129341573 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207429051 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.164260891 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211295748 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203956736 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159932678 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170024129 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126862811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194563068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149458787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211465184 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134462803 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165175506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184634572 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157425406 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129742855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188461799 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288064711 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17548889 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166399514 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105951594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314766076 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129336351 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160457373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157940824 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199493798 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130973784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.212355432 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177306816 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167513818 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158258146 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134928096 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204798213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209955412 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165989096 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204811312 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173877872 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16088915 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185503606 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170696923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174796025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146354982 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186142831 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194951454 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204917954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131567732 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199738041 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169507798 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201018428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171541698 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167917436 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1816121 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157664094 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166406377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16844293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123678341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159165203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194580179 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158137307 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173545405 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202931373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131127637 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125727818 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176727488 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166465134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169587875 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129789692 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214375029 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129169591 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214224923 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242780676 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129637324 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168833513 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171199505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128832576 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168076176 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143173362 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130731941 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201496544 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178024605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157927285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173419409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196434549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162529642 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183637481 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141562855 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.294439285 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127637969 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221909264 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149000195 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2258246 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147874694 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207510373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167043308 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180581141 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166225051 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176071101 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219063402 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196577831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196323487 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131828678 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143284677 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167186917 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134544567 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180259683 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169401789 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139620407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166923244 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165374962 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174954163 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145762072 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171678706 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199695345 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180412835 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218538889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186011944 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166491838 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175873934 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206135069 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128747868 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194915691 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17133125 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173539979 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152743448 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164400684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137014221 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246546665 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125970823 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15889365 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204505651 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167644258 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203011967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135229274 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208338204 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140752662 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206091442 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126518449 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181261911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170665736 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164621921 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127408404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19959473 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16082739 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194719124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143246763 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176633215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221296368 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123073671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163535846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286621467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189280354 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222155246 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134268835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136067941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176227182 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158854855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19931473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173887678 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159877138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130293445 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143939418 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188557275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138978352 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198489874 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18088289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187537757 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184043332 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164460485 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253654483 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173669357 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170408512 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14669737 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129044585 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140204751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165007516 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142053948 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21025382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24803595 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162533044 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17640455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136547083 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125924441 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159838823 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15938853 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179017838 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168630286 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17711816 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104603263 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139426127 seconds)
  done (took 85.226365058 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178982644 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171827417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.182465064 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243342583 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216007711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308093261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250170798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260002597 seconds)
  done (took 2.946994326 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126173014 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160497023 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143318316 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14500169 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109804168 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.496020092 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16223151 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122140041 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160997912 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153426324 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137934844 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576417629 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11643333 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14621733 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122569653 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13835311 seconds)
  done (took 4.140772746 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.179271028 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.086919261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.186209874 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.311222058 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237279828 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215627671 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.817474433 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201788702 seconds)
  done (took 13.36550962 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175298618 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169585527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462648826 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.325049723 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215015276 seconds)
  done (took 2.487870092 seconds)
done (took 129.044617995 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131152549 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125289443 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123693495 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158431139 seconds)
  done (took 1.663421535 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.203443988 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092321206 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094669305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121642719 seconds)
  done (took 1.649557474 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376142666 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09323244 seconds)
  done (took 1.641688496 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151852782 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134774395 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166450658 seconds)
  done (took 1.604452907 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1395291 seconds)
  done (took 1.280076722 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124347027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116268954 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27828929 seconds)
  done (took 1.664675487 seconds)
done (took 10.645831394 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127389226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932368371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434811318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135992459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713241639 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429556002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.426482301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176931859 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173316505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138207727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133092919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692363395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.439861514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882374683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394788335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910081527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695834856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113309591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146765482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113794204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.405466773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136936415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11332484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112670327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692048375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451398397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111416973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.891752683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141302291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115104281 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400020482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142800672 seconds)
  done (took 21.05589741 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119198752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169621573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148744651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113583656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116274351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142117367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123825527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123539745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203994839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110789725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163676599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112646061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11767702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112040001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166100649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111382819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113761488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144249166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1195699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113190495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163875756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110926152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112863523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143648527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112705583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134432404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142363131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124419753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110617131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145268804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11693294 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112167078 seconds)
  done (took 5.322761338 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16689548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17885705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150639304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150574253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18985356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114060976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200684701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179011848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206648683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113342632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133117347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141380923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154604912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113592088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167048572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113366281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115199531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143495293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121197175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115084788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16395917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111358879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114649849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144573894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112992535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13602208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141013993 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125554554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111639322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145607461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118532668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112170364 seconds)
  done (took 5.658277392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132935002 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127875707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135433289 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167131902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123016204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125870446 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158641197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122432352 seconds)
  done (took 2.248696115 seconds)
done (took 35.435773305 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141718431 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128432469 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133211803 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158356625 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277392483 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119790762 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130889198 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.150629395 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128138035 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133692639 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111130755 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.154006173 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133167339 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123973827 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275853988 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.158049568 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.248885059 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.2777021 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.154280106 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128234027 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121118862 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281500949 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12302428 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.154076259 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275203669 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116392225 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266847255 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123814883 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121795034 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143953685 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.278810771 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124388112 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120157967 seconds)
  done (took 6.657105926 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232824686 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155604818 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122039583 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12075469 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121208043 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151551724 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231037407 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154056174 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121441567 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12009209 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151308321 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213794417 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158500166 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117870818 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123607409 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112249825 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264551586 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123843029 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145997296 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095961707 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116724536 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119717721 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.279082393 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115957616 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.153952809 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121661756 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.1235749 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157011489 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123305453 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122127913 seconds)
  done (took 5.635731634 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131803872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133652982 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138111657 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219096255 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150940539 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164196185 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138866406 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132961653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174981536 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115524553 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129246389 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18217282 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131357498 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125749865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143820522 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132541684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129981629 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144713113 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124598576 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131472438 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135160229 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162069378 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137885344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121753269 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.145504265 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12196488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123734318 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156307411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123489447 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129061754 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.147074652 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118996847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116034677 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179736817 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115655072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12755137 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167630858 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128168505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12753463 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178032254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118728361 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115292376 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.17255798 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169691697 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115268983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15901722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116951756 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129150172 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141509262 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133669521 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157853089 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144469499 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137527338 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112016142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14149189 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12407039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115034114 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117560743 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.160636245 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117136315 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133846145 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.153488843 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12653022 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11525172 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155108482 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114626653 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113197027 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118253597 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172159025 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12269984 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150852214 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.146576975 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126806835 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126208888 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156755215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127600272 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112398203 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156586387 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125984359 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119264656 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12638123 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149861423 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11706529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129681354 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166442769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128530623 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125807254 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158410658 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118566434 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115235723 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163345735 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116234431 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118056134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158898421 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116170423 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117817632 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125666067 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158233108 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112395403 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138801616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14998818 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114446601 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138810193 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149327898 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120530034 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122885081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187690775 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116649824 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127241166 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157374236 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114858408 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12109359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116448498 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.144178265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129572623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129508078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.154321633 seconds)
  done (took 17.143474471 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.382457323 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.36564202 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21311859 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410026327 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125772964 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283915114 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395328094 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.367599262 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114234247 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147282212 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206365011 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.331981466 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114462549 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177187398 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370098802 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.446544612 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144025418 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18564787 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15144942 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127819746 seconds)
  done (took 6.231384548 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140737174 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148897135 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167708554 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143034615 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126150752 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162480117 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115520199 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1369036 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157924961 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124569837 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117433715 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16136404 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12954498 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131203965 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159123122 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150278534 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12398342 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150404824 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137892255 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118430077 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102458007 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.172277793 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123535235 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167336101 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133620128 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12559059 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144299816 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120619477 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121528716 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122750985 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150280492 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132517299 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120914128 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136216274 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128093878 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130686286 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15148667 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118978158 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120874662 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116891641 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.15965602 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128090252 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122234011 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128792326 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133950347 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112547832 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129032829 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157864347 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107650881 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135031433 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125456649 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.160056957 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122890658 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135556148 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.153835796 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131349717 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124321623 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160841539 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120128319 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113345746 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143530336 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119344014 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123099139 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159185914 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128271918 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13584866 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161165192 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116247124 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11892444 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117036329 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.14825368 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129823903 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164787704 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125271563 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12357475 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125517623 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153816945 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09663691 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125252101 seconds)
  done (took 11.817802627 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145797611 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125981829 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132312361 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180623505 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127872838 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120972808 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156560989 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135043249 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129510079 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164713625 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130292905 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127554506 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168579998 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125943481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124295384 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161013633 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128975586 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152716326 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160573193 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142697376 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128930292 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15226304 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128399838 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125819419 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174749242 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127204481 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14089639 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15976257 seconds)
  done (took 5.178330545 seconds)
done (took 53.820770207 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.312994584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.518857731 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.284596676 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.288744392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.316422111 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.32740875 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.282724211 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29048211 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.814963948 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.255448161 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.288380145 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.286033023 seconds)
done (took 29.457241697 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.434036902 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.430123522 seconds)
    (2/2) benchmarking "String"...
    done (took 1.602775362 seconds)
  done (took 4.218222875 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.27834355 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.27698546 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520070162 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.27724674 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.278755388 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.276178143 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.297003367 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.292735569 seconds)
  done (took 16.39393226 seconds)
done (took 26.507732903 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296694925 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.551000488 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.529692427 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.268945357 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.277490315 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.275200775 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.275947617 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.33600613 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.279847926 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.259760555 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.717172362 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.558836378 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.289017006 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.685664787 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.27343563 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.291530092 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.293627379 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.594861212 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.282345959 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.316058694 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.270426906 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.263341377 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.294544102 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.288151449 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.290971807 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.27741323 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.315243819 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.277419478 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.553693385 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.288347172 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.298417276 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.294558971 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.30749455 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.281857705 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.29987824 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.285586394 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.555313395 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.292852058 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.273706895 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.282399079 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.55766695 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.303739124 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.280349229 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.282277168 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.272502444 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.281510832 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.258678128 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.399224561 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.318555759 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.281403294 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.340133138 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.672986093 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.281882615 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.307809771 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.294177842 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.597926687 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.316113157 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.389155963 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.342969327 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.311363194 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.280586592 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.281981375 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.321211843 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.286818135 seconds)
  done (took 149.381218964 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.283255982 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.282674936 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.285297337 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.28877894 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.285783692 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.284681 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.284249016 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.28175786 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.284876339 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.315649256 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.285281144 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.284650074 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.285617249 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.295339088 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294252464 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.306778527 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.28628735 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.303138185 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.290770275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.287554714 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.291276535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.286607538 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.304090414 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.287538407 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.29436252 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.381967756 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.298113242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.304564395 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.297690703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.284376504 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.291571691 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.291474387 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.285802336 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.167221961 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.295043921 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.327047537 seconds)
  done (took 83.665104174 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.286596292 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.287362515 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.284735856 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286416457 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.32349217 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.285025842 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.931879284 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91078878 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349854701 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.39046971 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.872355961 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618210811 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.28834812 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381225642 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.295414762 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.287950089 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.384865219 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.308907615 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285859553 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286407306 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.934940821 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.30304143 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276393286 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.467455927 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.298654797 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324738688 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.684830965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.285419519 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325104474 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.629308434 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.337306446 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285132632 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700280558 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.902832033 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.28816392 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.288046128 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403999855 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287217008 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325079248 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.290183841 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.582211774 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286568861 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.29023787 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.291358428 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993674294 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28993831 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.935650732 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.293278361 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.346968014 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.290087772 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290287285 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.282979618 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.148393125 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.291116807 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.287715577 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.29305806 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.29065495 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290722195 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.327099348 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.349391767 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.257221837 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.292136856 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.296072406 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32941947 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.289981454 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.867602775 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285890416 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.088517747 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.34373522 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.409489191 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939286771 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290508718 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389586516 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408720439 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287671852 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.291043927 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.292000438 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.289511561 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.405206074 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.288055991 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.017453985 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.473121742 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.306044792 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.885231258 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.395054751 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.287605936 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.707439988 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.292786805 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.292576716 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.111509044 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39182112 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.29036728 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.291004632 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292880653 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.022361066 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918962825 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.603591785 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.295674717 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.922390877 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.296754912 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.210448692 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.902962521 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.016303361 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.295381671 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408184203 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.476764046 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309357459 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.293483263 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.885686731 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.294101307 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.354773741 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.297338104 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.294885156 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.697285492 seconds)
  done (took 389.798236697 seconds)
done (took 624.027161062 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.274241405 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.270881905 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272996885 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.287418878 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271337572 seconds)
  done (took 12.564035908 seconds)
done (took 13.757838423 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.515935763 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500400004 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501415801 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360274687 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.519228998 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.521460049 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.423051592 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.366721891 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.498948739 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.52328828 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513922267 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329240723 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521479253 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487588081 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311079013 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415334923 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.441681758 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.439067727 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.383263835 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414903983 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.548991067 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330218306 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.328413885 seconds)
  done (took 34.385641079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.635718179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.30225434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359634998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.586096906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337854877 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.594977349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.628677414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302611877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499118615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339276269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318554092 seconds)
  done (took 19.096807413 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598693134 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.305652186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379959371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605483534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340183228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607141638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.650397326 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.303497433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472703312 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322338747 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317753725 seconds)
  done (took 19.094383799 seconds)
done (took 73.773347885 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.339195838 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409267042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.335929586 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.317903757 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.315144973 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.314931249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.318426387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.318381663 seconds)
  done (took 11.85851034 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.316237724 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.315736535 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.317119932 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.316678725 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.317482268 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.318239733 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.315454751 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.314788556 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.315499574 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.316834485 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.319734639 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.317914022 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.318335453 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.315369665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.317016287 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.31859016 seconds)
  done (took 22.263739822 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.318319958 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.315582269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.316382452 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.315485088 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.316855237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.317021491 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.316685002 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.316510161 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.314486723 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.316631848 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.317082133 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.315783784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.314311073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.313685909 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.315953896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.316690959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.314039094 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.314206188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.319465888 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.315551465 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.314966314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.315331684 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.314805481 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.316692422 seconds)
  done (took 32.776743291 seconds)
done (took 68.095315958 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.301688856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.311295295 seconds)
  done (took 5.805673444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.37874879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.378794644 seconds)
  done (took 3.952370724 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.319511014 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.316745378 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.316293473 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.317457458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.315703117 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.316598425 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.317678453 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.318532229 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.319047265 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.317613297 seconds)
  done (took 14.367128925 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.316180979 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.316390627 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.318126001 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320567769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.318399732 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.318028624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.318375955 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.31826244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.319254579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.319781844 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.316076105 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.31595614 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.319209044 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.31958798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.318176654 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.316931808 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.316710987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.320332152 seconds)
  done (took 24.919748719 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.334539917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344760897 seconds)
  done (took 3.875513683 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.446462098 seconds)
    (2/7) benchmarking "second"...
    done (took 1.360986787 seconds)
    (3/7) benchmarking "month"...
    done (took 1.423658628 seconds)
    (4/7) benchmarking "year"...
    done (took 1.413804791 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.362955953 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.340157475 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.362110264 seconds)
  done (took 10.906140552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.308423118 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.616425725 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.79960422 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.468190996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.29444018 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.32442036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.295772077 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.323073837 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329619479 seconds)
  done (took 14.955851931 seconds)
done (took 79.981919925 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.308297125 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.337103872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.338361713 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.317380082 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.659782799 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.366683377 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.308284016 seconds)
done (took 16.840530236 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.284448915 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.294153085 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.293419908 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323165934 seconds)
  done (took 10.393146706 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.311281898 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629260384 seconds)
  done (took 5.139066548 seconds)
done (took 16.736230381 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323958029 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.324701134 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.325297681 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.323072165 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.321854821 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.323847024 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.327342321 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.324501577 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.325527594 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323830722 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.324735011 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.324288316 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321318456 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321801191 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324236318 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323043852 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323486156 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.322986863 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321185536 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.322885185 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323896051 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324481981 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.323843237 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.324142645 seconds)
  done (took 32.967642609 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.324474262 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.323350535 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.323964286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.324863182 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.322067701 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.322817189 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325290339 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.325986534 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.326293981 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.324084315 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324825642 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.323690591 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.32466311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.327073385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327639361 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.323711417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.324161088 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325035605 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323684813 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.327261919 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.326362291 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327535191 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.327281342 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324620459 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.326742046 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326768474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.323811708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.325957428 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327011974 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.328126014 seconds)
  done (took 40.960695868 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.332229475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.332537132 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.324872658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.327128237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325254213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.325651673 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.327375803 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.32796517 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.325854668 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.32585325 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.327039372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.327445695 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.326786041 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.328040901 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.325107384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.326047134 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.324610144 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.32692984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.328352417 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32797539 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.326471568 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326772138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.326097367 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.327936481 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.326548854 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.327013255 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.327157577 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.329364926 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.328621703 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.327590865 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.3272189 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328793217 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.326631612 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328382338 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.330067105 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.327366839 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.33212324 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.334601542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.328039274 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.327069242 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.327514355 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.32659604 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.330026799 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.329476592 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.328091429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.327988847 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.328270746 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.329866255 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.330150865 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328861514 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.329758136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.328751752 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.329529643 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.328364265 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.330037742 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.330261684 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.326902196 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.329693256 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.330400184 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.331334672 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.329227039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.330023038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.327790799 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.329020114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.330311018 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.329266425 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329811491 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.329978999 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.330621098 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.33150103 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.333200627 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.331795728 seconds)
  done (took 96.856980705 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.3302636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.331811585 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.331647527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331067533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332742718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331329529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.33062329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331239893 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331061066 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.33274481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33223714 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33646572 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331063694 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.33249041 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331729049 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.330902109 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.333633578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332146126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.331550965 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332720267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330869756 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.332883103 seconds)
  done (took 30.51087074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331961968 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335885528 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.332660031 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334393762 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335118928 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337313771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.332957145 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.334637012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33527523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333564866 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332686742 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335296711 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336695983 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333575006 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336306251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336059369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334760858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33487684 seconds)
  done (took 25.23016313 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.336129608 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.33728004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.333749138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.336145539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.334102564 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333998418 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334276808 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337391216 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.336284548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.334743176 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.336730877 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335000231 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.334571964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334437828 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334310608 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.336702492 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.33632111 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334277235 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335939625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335444499 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.336012306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335587648 seconds)
  done (took 30.589523149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33621675 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333191198 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.338456978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335586893 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.336312186 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337015873 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.335352324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.33666549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.337445956 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.336176183 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336207027 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336192809 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.337403204 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336181596 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.334366393 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333123125 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335930333 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336438465 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334780305 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.335325483 seconds)
  done (took 27.928749589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337040617 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336114965 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336770731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335515174 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336573988 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.336606133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337287535 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.33735155 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338173383 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338632308 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.335835375 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338068248 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337585404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33836069 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338574191 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336141003 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337995667 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339097205 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.339416215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337653221 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341246452 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338773512 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338482165 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339496756 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338534697 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339060344 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339400213 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338571247 seconds)
  done (took 38.673971854 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338806487 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340197103 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.338173108 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.338683084 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.338420532 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.338347756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.336965792 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.336870015 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338428162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.338404457 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.340522032 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.339276094 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337629105 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.340168387 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.339647318 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.339496864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337955342 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.340174817 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340726223 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338393365 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.33767394 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340401231 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.340306687 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340163289 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34082979 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.338266373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342419964 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339960183 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341132007 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340747566 seconds)
  done (took 41.3920166 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.358182651 seconds)
    (2/2) benchmarking "in"...
    done (took 1.357844879 seconds)
  done (took 3.930437528 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.340002556 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339540304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341100675 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341802997 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.342898504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.340739234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.341606129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342217093 seconds)
  done (took 11.945302261 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.331753384 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.342565105 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.341927 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.340493006 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.340800858 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.332216198 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342209285 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.344797989 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.334770572 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.334629543 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.340654695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.339385865 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.337713414 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336695663 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.337116735 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339136959 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.342460566 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.345045762 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344342068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.347926921 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342583517 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339106044 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341526358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.347514131 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.337270083 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.345138422 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.344445805 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.345827827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33709326 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.34026769 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.337681332 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.34737748 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.343559273 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.343740339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344200841 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.343516064 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349924231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342319204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.346905764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347972935 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34487229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.345683149 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.337345833 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.342538647 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340492322 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.345593867 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.344827678 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.343826296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.336581734 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.340780119 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.352576509 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335635167 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.344867032 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341790274 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.342850867 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347170683 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.35038276 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.340160323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.345852511 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.35002977 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.359232784 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.355290208 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346247662 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.350818725 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348951196 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.362926472 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351766374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.352397765 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.346747009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.345662726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.347270688 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359140658 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.359567235 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.351048045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347389778 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.346455064 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340167828 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351289454 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349457548 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.35175263 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.352307672 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348259084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349015167 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361237022 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.342202393 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.35072842 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.348145113 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.347611696 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.336684614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351642484 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.357046369 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.349652449 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.339754371 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.34269238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342091388 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.351141033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.337675762 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.340566995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.350250764 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.347550785 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345679884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341943681 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.349454162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352458559 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34629333 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.350367889 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.356343014 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342634565 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.353649717 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.357249829 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349970893 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.341406738 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.349816927 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.353088192 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34378944 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.350187931 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.351236111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.346925353 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.35492359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.35072648 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351065326 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.369509297 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.354887428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.353004713 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.347890671 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.359179873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349003181 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.349211939 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.354850288 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.350454913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.351277333 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.350244018 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.357827563 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.346779802 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352214409 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344203658 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.354980514 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.350765967 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.349379316 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.345588082 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.351935928 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.345900444 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.348816057 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.353722459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.355600383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.347615353 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35914952 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.350679835 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.348451077 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.351795452 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.355873102 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35003426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.344941798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.35546583 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.34176054 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354002534 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.343079666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.35386527 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353702856 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.351413486 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351946772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.346123854 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35107707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.355075231 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.350768701 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.351564297 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.355105154 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.351682332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.351071169 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.342128398 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.354647298 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.342985693 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.346011288 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.358893718 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.350428173 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.354082814 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.351326126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361277574 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355072882 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.351397613 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.347499152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.353884345 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.357270082 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.353647643 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.363088775 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35176709 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.354973631 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.344732113 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.347238278 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354933848 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.346570606 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360690846 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360173749 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36838075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.347443986 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.356186363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.344482567 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.359806234 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.354687984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.364509897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.353353374 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355124205 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.347337128 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358653827 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.349038276 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.361200485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.3452784 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.356459124 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.355713811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.356160632 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353104019 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.349516626 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.353302124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.359009564 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355879857 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356716762 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.348362157 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.357410556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.344476934 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.35016486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35925961 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.356180932 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.357402285 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.36461123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351685007 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361902946 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.357437234 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.349374489 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.357869876 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354300483 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.356036463 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361337907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.358778711 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.351298844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360705588 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.35751712 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.350469086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.35608277 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.364581706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.357300631 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.349274746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.362432773 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.355916179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.357553632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.356332256 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351111222 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359726808 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.359685336 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.367432364 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.349172724 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361375199 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.352072189 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.359483828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.353626487 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.358813037 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.358523433 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360658546 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365208666 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.356623893 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351049695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.360687809 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.356898736 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.358449452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353608603 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.366174203 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.360563057 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361730076 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.357312761 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.353544591 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.361269151 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.350527422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.359594154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.351764845 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368280818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.377248632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361786093 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.362882271 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.36224326 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360385818 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.360848139 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.35351493 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355820694 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355798991 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.353632688 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.353762082 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.361866253 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355113485 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.364864055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358055733 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.362288025 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.362804935 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.362561933 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.354652937 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.363392082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.360815606 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.361274902 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.352996301 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.360792742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.35689121 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.362146098 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.361016767 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.356056959 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368330663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368133454 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.356528065 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.358850219 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.357622227 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.354186785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.356019405 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.365080266 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.355627848 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.367851314 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.355217568 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.361287774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.358300145 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366032956 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369942775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.356009572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.368050711 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.36284349 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.353577697 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.356624322 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.362754245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368117854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.376283632 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.35620989 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.364957063 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365889775 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.363392274 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.362073148 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.360254493 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363158477 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.361809 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372117149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.368541277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.359901702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366480913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.372781343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.362835237 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.36188348 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.355664108 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366076143 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.374729314 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.35940762 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.363256963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.36052585 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.365641217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.363236456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.363067885 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.36499429 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.365234128 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368697019 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.369958012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367505547 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.363511024 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.366589083 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.376256071 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368474443 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.376548923 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.358697463 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.371069304 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.365384194 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.358649484 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.359081402 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.361922483 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.369147784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.355782832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.369181451 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.365269812 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.361726971 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.366955625 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.3721128 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.357356989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367723378 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388478242 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.357813041 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367389913 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.364607712 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.35719863 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.369459257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.367397418 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.355313918 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.362253861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366528027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372462256 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.359565869 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.370478415 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360630571 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368908505 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.366759554 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.368019158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.366941859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.366586879 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.360118034 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.369268657 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368599069 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.376882337 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.361153207 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367843678 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.36323778 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.374315396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.379652151 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.363757324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37398458 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.367586489 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.358539219 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.365902514 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.374257895 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362112473 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370559201 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.35938494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.364467188 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.368023169 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.370892166 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.371134557 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.372888679 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.359769864 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.362785531 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370054575 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.370022103 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367692277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.365466831 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.377299703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.362493816 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.361588534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.371568633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.364139352 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376265408 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363109106 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.369216405 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368527237 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.371567096 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.370994618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368789058 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.359486496 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.362994413 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.375260383 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378306072 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.371850059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.369235671 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.373685324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.362658011 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367878729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.370008162 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.365968731 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.365832671 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.375127474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.364048385 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.365556991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.364902987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372018593 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.376609373 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.374023577 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.362686321 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377510124 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.380966377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.380391384 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.364258464 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.366981393 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.366694399 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.372959753 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.371766312 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.364974551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378584855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.378476346 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.379064454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37120067 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.371178967 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.362373054 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.375827491 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372589722 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.367402778 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.379130045 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.367656285 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381400728 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.373207217 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.372489957 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.363348121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.364355983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.367487901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.371096507 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.373834577 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372216608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.377234491 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.371345091 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377603753 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374137328 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.372965997 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.373425943 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.367534801 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376115076 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.364651257 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.375271664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.379354785 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.367843534 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.376920525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374587225 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368145669 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.37462325 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.381428554 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.374482615 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.367208523 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.3731662 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.381899992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.388585774 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.377321914 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368284679 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.372992948 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.379763832 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375622832 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.376264537 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368851935 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389292907 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.390627203 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368164365 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.373637122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37953424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.385697322 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.376725827 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.376376763 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.372185261 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.374797402 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.383709845 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.376625527 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38022213 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382070139 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.372330576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.378262524 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.37091532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.37510255 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.37774051 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.388673104 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.376071253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.372614271 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.389410229 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387662207 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379940273 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404094624 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.383576094 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.37621582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.381482072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367526751 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.378634002 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.373929859 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.382471661 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.376988434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376699609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.376458175 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.369265305 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381443743 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.384989624 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.388338558 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.377033183 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.368076702 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.373169781 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.378310448 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.376623713 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.380412419 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.378167114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.377802385 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.377040897 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.371882604 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391328336 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.400067231 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.384910405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377565086 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.37880433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.38002275 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.384976088 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381081042 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.386698624 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.377002984 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.379144708 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.37628648 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385187741 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.379189585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.371212309 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373998795 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.373538915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.384333592 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.389021292 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405550977 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.382621586 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.384522526 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382639706 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.379301849 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373266738 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.383767729 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377557488 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.37543808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.376056112 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38409693 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.381329549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.37868559 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.374252811 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.387316016 seconds)
  done (took 812.570392703 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381588091 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379263716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379872003 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.380104514 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380020322 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380436488 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380933889 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379970728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.381766375 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.379140909 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.38082284 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381136135 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.381306652 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381073729 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382360599 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380348004 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381242812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37981061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379676038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380211287 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382256179 seconds)
  done (took 30.241323884 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.382849506 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.381133119 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385365612 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386241236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384560337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.38415788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384993265 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384852142 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.386123884 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38303787 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.383246736 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384362897 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.383722572 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.384206581 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382400291 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384100095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.385398216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383018376 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.382403991 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.384932368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382395761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384303296 seconds)
  done (took 31.698328917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.384373364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.384165923 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.377627011 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.38791777 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.383790999 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.382746693 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.384946827 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.383200528 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.384357551 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.375215353 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.377333896 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.379148417 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.383306121 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.39239951 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.380813771 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.390072028 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.384044716 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.384111706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.384566773 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.385674396 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.387017616 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.398621996 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.386206686 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.377434068 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.386098586 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.385987991 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.386651359 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.385933092 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.378094704 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.388451704 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.384641836 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.377589671 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.389968817 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.388677565 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.379087852 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.389034777 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.38633716 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.385757986 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.386614851 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.389421777 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.411225851 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.384879678 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.391939966 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.398193037 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.386290709 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.382350016 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393730307 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.38723194 seconds)
  done (took 67.776307936 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.385981127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.387635893 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.38774771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.387035614 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.386338689 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.387490243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.387863498 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.387902629 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.389325734 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.390254404 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.387915133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.389634904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.38957444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390116105 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.389073627 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389475458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389038639 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.388656907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.387508885 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.388982512 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.388740687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.387459806 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.389072088 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.389647086 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.388426065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.388703855 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.387394911 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.389289443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.38928206 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.390407268 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.392082557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.391615354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.390962051 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.390050146 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.390486655 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.389804811 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.388613465 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.388598982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.389665166 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.389767435 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.390868515 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.390445419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.390171779 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394506926 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.388295305 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.391433855 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391543114 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.392049144 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.390340485 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.391058618 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.390376868 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.391693583 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389788748 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.388518573 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390398276 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.389565257 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.390535668 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.392072904 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.389624139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.391800227 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.39063235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39101413 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.39227629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.391644913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.392360623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.389662783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.392211347 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.390906305 seconds)
  done (took 95.759717404 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391084541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.391523008 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389630879 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391579111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390697064 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.391635498 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393357556 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.392098485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.391486392 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393267745 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39215112 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391320907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.391608408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392432669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.39328591 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392962383 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.39369256 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.394370106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394667276 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393635065 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.393152813 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.395085926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.394492956 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.395556266 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393321116 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.396513283 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394193785 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39363379 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392977117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39251714 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393163674 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.393891027 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394777181 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.392618091 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.393793136 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.393752491 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393329274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393977697 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.395017076 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.394074625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.393978898 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.395253529 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395017464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.394351262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394751203 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396908302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39594116 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.396331771 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3989324 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396942132 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.39849212 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395622278 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393790022 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396982372 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.395602779 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.398411058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394089749 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.397692178 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396708777 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.398142089 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.395184529 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.39809922 seconds)
  done (took 87.702592817 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397123868 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.39808506 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.398333161 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.395902266 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.396386665 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.397926422 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.396011598 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.396843163 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.397496666 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.397197893 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398993529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.397956425 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398826187 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397315006 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.395472476 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398443459 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397176228 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.398866745 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397512586 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.397164261 seconds)
  done (took 29.210375158 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.396837357 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.397947026 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.397000559 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397845078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.396781033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.397052063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398620019 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.395999313 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397806396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398862506 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397765674 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.398279724 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398762643 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397642117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.39758016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396226184 seconds)
  done (took 23.623383045 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.398651463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.397539136 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.398614878 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.39847019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.4018817 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.398990583 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.399044661 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.398746896 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.400040275 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.400738888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.398725864 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.398861703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.398599804 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.399941616 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.400095993 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.398928054 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.400387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.398231714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.399747833 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.398386432 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.402332063 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.399500799 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.400307514 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401173992 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.398630945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.402067877 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.401379699 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.399578142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.400765065 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.399632708 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.401434437 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.400386836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.399004795 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.401828674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.403938375 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.400532787 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.401985379 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.402511695 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.40013551 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.400371302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400703505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.400275304 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.40022336 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.401632631 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.399886047 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.401898079 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.40270666 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.40180112 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.40140914 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.402715289 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.401107279 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.401175346 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.403378998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.401638125 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.400636241 seconds)
  done (took 78.287630659 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402354585 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403937417 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.403423912 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.402049637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.40295089 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.40204051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.401814024 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.403866617 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402429025 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.4009565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.401751456 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.404288624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.404319441 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.405077013 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.405342553 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.405641504 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.404727118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.405999179 seconds)
  done (took 26.530022894 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.40572383 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.406544164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.406281029 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.403838731 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.40452048 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.406345437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404017333 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.405838409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405285419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.405151877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403131432 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.404998458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406174002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.404577977 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.404870299 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404488183 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.404463145 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.404894552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.404656959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.404653027 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403976164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404768234 seconds)
  done (took 32.178279915 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.396304286 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.394880252 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.394695459 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.414411724 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.412831605 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.394240718 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.395518536 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.394688584 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.419702863 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.44392372 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.437584886 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.414174267 seconds)
  done (took 18.181301744 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406430759 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406054046 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407524281 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408959666 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40725467 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40753448 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407581779 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407127078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406992387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409458349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408300448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406988109 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408149293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407180905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404510283 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407667703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40663546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407514218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408061651 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4084428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406138604 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407072129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407804154 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407175996 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406971277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407261931 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407844534 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407700772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407932304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407488668 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40885969 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406605987 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408419896 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407304027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408259979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408322279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409009139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407969231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407927356 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409506446 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409527524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407480483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409694314 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409053967 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409698686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409010431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41034211 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411463941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408233414 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409997738 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409024582 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410782071 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410829863 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409108136 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409918642 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409977746 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412052245 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411028004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410674192 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410464371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411337574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412152553 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408484677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410216614 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409592631 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411539677 seconds)
  done (took 94.237369386 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41098505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411229435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410541186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412723006 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412159029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411305611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413506876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411391241 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413908827 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41297733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413231757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413788163 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413835155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413323717 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412586079 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414024064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413228695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412772202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413481941 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414019807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413085766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413789354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412936759 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413171458 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413927054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41337231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413684148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412885497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412366897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41365322 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412046067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413418586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41321754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.413301658 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413013096 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412672682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414056042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413149047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41376897 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414395176 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415225997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413172776 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414047568 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415113428 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414897599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413209871 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415252151 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413972998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413633824 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414577956 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413327305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414094273 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415010493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414480097 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412275601 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414682925 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415577772 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41342782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414513788 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415297454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415675517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415342572 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414666642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413784148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414038005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416362433 seconds)
  done (took 94.573514543 seconds)
done (took 1904.76319075 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.572004765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.540187398 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.405050875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.462868206 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.403372402 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.436434765 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.422841699 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.402641017 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.405183947 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.405885841 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.404060174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.623748011 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.471993502 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.403429622 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.406130486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.523108393 seconds)
  done (took 28.567248574 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.438351861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.412411379 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.545387404 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.408120977 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.438092053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.631977994 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.472557286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.415281135 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.617719648 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.428434952 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.400489771 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.45287262 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.414556173 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.416875785 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.430441792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.63545414 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.706462815 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.398812723 seconds)
  done (took 30.941697558 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.952341712 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.413595004 seconds)
  done (took 5.645001761 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.433726927 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.408865778 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.411139507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.412870818 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.422672386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.404034415 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.41096107 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.421297286 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.408558939 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.564797502 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.415068879 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.424073257 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.410447463 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.414322558 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.419406238 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.460526313 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.563295493 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419582546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.421377996 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.418707293 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.413027139 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.512306555 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.456318454 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.41941 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.559865819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.407441967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.419415578 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.417641951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.542814395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.420988534 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.41419314 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.416717756 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.416269834 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.405721762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.979547525 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.410432879 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.460019794 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.420107926 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.42557155 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.57453507 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.41629089 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.424846327 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.410618248 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.973106072 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.53415317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.554353103 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.413091902 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.411305306 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.417859519 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.489721532 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.415691352 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.418093772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.481140285 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.299483146 seconds)
  done (took 90.114863388 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.422951593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.406302871 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594842862 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424634519 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40449214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.439608029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.404912388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752511204 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.445741492 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408481067 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.755067037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.091747254 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.417351136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.475608696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.420141353 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.466635645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.41209745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407214926 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.40607363 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.409712153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012556785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417163215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406593956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.604017489 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.451465445 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015534913 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.417927751 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.416064624 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.407601371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.405548617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060493953 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.4095138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.441941666 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407101212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.727981118 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.868158074 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.824752356 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.410241588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.438811503 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.408083278 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.407403686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01911845 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847687039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.408718707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419860063 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017913705 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407021203 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.422667559 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.415368621 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.689552354 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.408117222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.415516331 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.422278913 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408234095 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.412392894 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445429844 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.469305217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023081127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.407710728 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.408453771 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429695593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.412737926 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424812996 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.414179785 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409599253 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851425778 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.613987306 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.415986138 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.851522973 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.051764674 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412018812 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144104657 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.410891371 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.421000963 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.529563522 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414452964 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.431835928 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014350189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.423430326 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411154833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.832162233 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411382792 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.744022323 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.43086478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413879359 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.037376164 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.415184436 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.46531982 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.414358148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.421011625 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413845543 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.413893024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.732814387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.475063578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.41457929 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.414075509 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.422979915 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41492693 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.411173643 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417443975 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126377148 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.423526798 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.416115242 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.41469998 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412404803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.433260009 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41645891 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.417164448 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.702818453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413262656 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.416831474 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414728059 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.414779189 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.416359732 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.621965247 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.423595128 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.788891664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.41487966 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431000747 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.4148313 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415948606 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.471782368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426047439 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.420508638 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.399010477 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.739386034 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.435042939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.43245645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419151728 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416532271 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41467706 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415204719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.449583715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.418682937 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.2768059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441852341 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.447778784 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.41863494 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425936489 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418813482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.421007024 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419434216 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730374309 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.735856798 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.596354819 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419395541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.415096745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.283215459 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.450973405 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607353052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434670614 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.414295329 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.725605257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590967124 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419396953 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.420706606 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.421231703 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.704055191 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.416522335 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747538388 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.089069716 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.414271232 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427123696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.281888918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18116959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.416712692 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.424701402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.745768034 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.436324901 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.420777623 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.418045901 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.422021873 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.417675641 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.420936528 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416463778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.42095166 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.421725104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.489625127 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621451334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.434903772 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.41747974 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026620715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.429184815 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416005491 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.423387775 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.418109875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417801138 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.480706114 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.423482699 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.444424343 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.419792937 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.419713087 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060345398 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.419040044 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.417549924 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621542347 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225474638 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.418017707 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424654018 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.41597838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.463540571 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053996914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.478016978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.796320869 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.430255913 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.468283078 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423568547 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423433977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054049151 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.435901482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420112806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.217668316 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.419366071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.205051553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.418177822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.422805996 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.138279009 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416139681 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.426354103 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.420232961 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42054482 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.744751201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.42201167 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.474755158 seconds)
  done (took 518.959197137 seconds)
done (took 675.511345228 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.423482765 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424813006 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.425892862 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.426827324 seconds)
  done (took 10.997185696 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.442817267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.430028182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.442590724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.432205321 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.442641506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.42926615 seconds)
  done (took 9.918166404 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.424218685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.427426096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.427449838 seconds)
  done (took 8.577918471 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.672121932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.440457282 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.843679271 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.422390981 seconds)
  done (took 9.677638647 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.442827718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.441696189 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.441779675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.448007271 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.440810713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.444389886 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.442072383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.441923647 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.440506538 seconds)
  done (took 14.279860424 seconds)
done (took 54.754197195 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.704713517 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.665131125 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.936245832 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.618529297 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.403304654 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.500027023 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.458849443 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.462531566 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.532812013 seconds)
    (10/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.454706988 seconds)
    (11/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.403487708 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.403051295 seconds)
    (13/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.896812467 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.552116419 seconds)
    (15/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.514100937 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.499481991 seconds)
    (17/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.891305367 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.465986386 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.509401566 seconds)
    (20/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.43405336 seconds)
    (21/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.588658166 seconds)
    (22/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.467681157 seconds)
    (23/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.927006001 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.529323066 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.863514365 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.403410056 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.845364361 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.50685146 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.132213042 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.436307715 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.555753106 seconds)
    (32/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.591617312 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.555807697 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.761992776 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.499351672 seconds)
    (36/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.026325677 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.533802673 seconds)
    (38/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.455656242 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.405416626 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.557348837 seconds)
    (41/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.587247856 seconds)
    (42/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.70788815 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581721757 seconds)
    (44/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.927198702 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.404565815 seconds)
    (46/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.651798552 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.447158821 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.547458038 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.460597532 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.407020129 seconds)
    (51/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.77117801 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.567491132 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.587652462 seconds)
    (54/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.497040952 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.595897242 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.937729553 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.816986858 seconds)
    (58/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.805355141 seconds)
    (59/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.517052825 seconds)
    (60/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.46524719 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.495488147 seconds)
    (62/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.462053536 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.557832873 seconds)
    (64/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.726724018 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.407277738 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611457824 seconds)
    (67/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.539471924 seconds)
    (68/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.407637104 seconds)
    (69/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.611876195 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.511419691 seconds)
    (71/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.40714354 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.653705627 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.554625366 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.510388633 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.464623137 seconds)
    (76/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.563988443 seconds)
    (77/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.616297311 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.496879488 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.521866812 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.701698307 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.427636377 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.447171311 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.565612956 seconds)
    (84/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.462468763 seconds)
    (85/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.520564626 seconds)
    (86/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.51691662 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.409345568 seconds)
    (88/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.471732048 seconds)
    (89/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.510079907 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.605250644 seconds)
    (91/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.409058605 seconds)
    (92/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.692945522 seconds)
    (93/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.846005549 seconds)
    (94/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.459693987 seconds)
    (95/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.660781823 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.408992483 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.559596228 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.887219158 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.52925275 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.407790697 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418738248 seconds)
    (102/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.469241538 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.603294532 seconds)
    (104/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.535322558 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.483324276 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.456666601 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.480727976 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.448143449 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.64631501 seconds)
    (110/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.519787397 seconds)
    (111/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.423013863 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.448114287 seconds)
    (113/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.468026379 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.731980782 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.572283389 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.53443873 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.532345231 seconds)
    (118/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.579648519 seconds)
    (119/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.414837135 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.130656636 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.84840875 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.409951692 seconds)
    (123/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.434586428 seconds)
    (124/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.595477107 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.61715388 seconds)
    (126/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.417091885 seconds)
    (127/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.657059344 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.583132527 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524874345 seconds)
    (130/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510730748 seconds)
    (131/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.719584705 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.408820765 seconds)
    (133/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.445812714 seconds)
    (134/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.418886213 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.4677581 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.509550969 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.468363965 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.5107078 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.825869559 seconds)
    (140/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.764465248 seconds)
    (141/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.467517911 seconds)
    (142/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.524962553 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.568337529 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.690658982 seconds)
    (145/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.458122149 seconds)
    (146/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.629690147 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.52713694 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.780293861 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.564229566 seconds)
    (150/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.538608603 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.432439796 seconds)
    (152/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.420149047 seconds)
    (153/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.734167152 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.609004672 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.836992578 seconds)
    (156/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.412658143 seconds)
    (157/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.413285236 seconds)
    (158/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.630769286 seconds)
    (159/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.473261978 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.505358212 seconds)
    (161/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.60363083 seconds)
    (162/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.460494855 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.603126613 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.474297018 seconds)
    (165/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416105171 seconds)
    (166/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.432230653 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.54588628 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.419528116 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.666111684 seconds)
    (170/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.717393312 seconds)
    (171/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.647880077 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.884195169 seconds)
    (173/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.414659202 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.497549132 seconds)
    (175/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.416247833 seconds)
    (176/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.5602133 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.600206013 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.769090207 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.521622674 seconds)
    (180/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.50287694 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.470314766 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.653501822 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.561964728 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.710538143 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.415038307 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.540201648 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.659599286 seconds)
    (188/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.421054138 seconds)
    (189/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.523811548 seconds)
    (190/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.534112201 seconds)
    (191/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.74259555 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.883087447 seconds)
  done (took 350.691131729 seconds)
done (took 351.997664907 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471211677 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547514907 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.4486884 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.448522489 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452244652 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.440728667 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470187005 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.451232819 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.465154984 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.46513475 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.441815829 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.455934142 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.469001809 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.461225883 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.484093481 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.450696834 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.450055981 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.458914331 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.466454076 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.467673414 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451483075 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451159764 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.477407798 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.450847957 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457645348 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.460772484 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.455886819 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.447491929 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.455592886 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.467615861 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.454396747 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.455531098 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.468556897 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.463860173 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454145839 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.462750627 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452797093 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.551385938 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.472738055 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.463482817 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.460991344 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.469448348 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.458174884 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.458802989 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.462390114 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.479999491 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46116415 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.467388375 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.457378613 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.454843418 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.469858146 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.46572251 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.461184803 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.458757672 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.446091961 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.464917875 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.463858138 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474213106 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.461884719 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.45756547 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.487945588 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474443361 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.465844282 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464084701 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.463248844 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.472577669 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.464166029 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.469053721 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.462576902 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457654578 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456994293 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.463155009 seconds)
done (took 114.721332775 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.578727703 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.450405462 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.610563608 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.462347069 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.624494065 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.571758387 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.462540113 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.462447624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.461845386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258605998 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.462707046 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.463242789 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.454666895 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.464832284 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.576330932 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.464776125 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.465851951 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156974473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.463601229 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.59382675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.454420903 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.464974494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.463513264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.259985122 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.450547398 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.447802363 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.594459843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465528931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.159377749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.448295698 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.45102724 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.158143018 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.59180514 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.483921786 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.475918412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.476205435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.628993382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.465318638 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.582706303 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.583737486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.615207266 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.501802417 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.450395659 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.455214584 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.465939363 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.465542362 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.467634729 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.494981979 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.455448405 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.469899554 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160765713 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.47809823 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.467949737 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.470254869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.46505434 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.495266474 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.467253214 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.467463888 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.596022976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.466821027 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.583433771 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.259828656 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265242817 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468300231 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.450774006 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.467519285 seconds)
  done (took 116.807170146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.52808158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.534775748 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.579746129 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.4548481 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.508116536 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.58223482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.456522087 seconds)
  done (took 11.965271268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.467422526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.46790506 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.507934425 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.506906471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.467660802 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.633283867 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469227221 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.469638193 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.466721117 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.511109262 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470823098 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472114262 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.477750737 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.457245629 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.507841785 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.470210539 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.578344507 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.460034432 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467415617 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.614755437 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.468587041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.476433231 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.51094562 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.473262201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470644927 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.463668641 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.222150519 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471638169 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470709919 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.469988853 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469560266 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.528009513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.46903534 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.45743931 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.472660824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.574344685 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.471919362 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469128226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.470836497 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.461018532 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.471358247 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472449125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.470211804 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.471115503 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.471751137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.48485985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.471041285 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470402464 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.469772365 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47245757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.509500781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.470965451 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.473365943 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.471640387 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.51686959 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481988506 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472741414 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.471494321 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474864995 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.471957133 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.613785923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.50851261 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.47100966 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.508315507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475075862 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.473425864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.474331074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.473884556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.556476772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.475415207 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.512901555 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.469634471 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.642978157 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.48668285 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474536236 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.465968904 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.467211531 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471298167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.460514706 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.469657902 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.471734974 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.463721668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.469127993 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472871507 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473088788 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621331716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.571623959 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.471508351 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.47971855 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.472167189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.473481421 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.516145959 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.473593419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.473300919 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.514012446 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.58438385 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.516251934 seconds)
  done (took 150.621072012 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.477369891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.480817469 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.469260891 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.492385107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.466215573 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.464471239 seconds)
  done (took 10.176869959 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.467845382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.477441415 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.475940792 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.475327167 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.475605994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.476620151 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.475512079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.467027254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.478521833 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.476924993 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.475075127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.47818435 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.475870614 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.476135893 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.475784631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.475285945 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.476735975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473259372 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.477018326 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.476144554 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.461890046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.475976108 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47556698 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.469601492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.479447908 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.476452531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.490575026 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.474781528 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.476391445 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.474832252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.475611304 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.475504086 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.472115324 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.471505183 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.480756654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.469290619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481126035 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478142477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478323915 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.475653244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.477821163 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479979965 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.478587032 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.477287012 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.471672649 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.472225337 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.481765826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.491657729 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.477245863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.478960001 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.479313629 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.480197971 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.478228748 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.478947219 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.47015931 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470306979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.480896631 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.481045911 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.480364238 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.471865097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.481422713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.481318536 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.471127967 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.484577579 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.480317626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.480089067 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.472135558 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481555721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480130898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.479523134 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.480788761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.480670093 seconds)
  done (took 108.663005447 seconds)
done (took 399.556867812 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.025901222 seconds)
  done (took 4.355892085 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.719557467 seconds)
  done (took 4.055511288 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.971661263 seconds)
  done (took 26.315385312 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.532239663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.465009827 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474706001 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.460403555 seconds)
  done (took 11.265575442 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.07389789 seconds)
  done (took 4.406601501 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.473912305 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.488566374 seconds)
  done (took 6.298519977 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.786471662 seconds)
  done (took 4.120063229 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.342412052 seconds)
  done (took 4.688337344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.489223087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.473825224 seconds)
  done (took 6.304492454 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.444639413 seconds)
  done (took 3.776878049 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.230895817 seconds)
  done (took 22.566588977 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.495515026 seconds)
  done (took 3.831430946 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.500441821 seconds)
  done (took 3.830359006 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.688807259 seconds)
  done (took 7.022451776 seconds)
done (took 114.178437335 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.466228938 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.466309861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.462040457 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.461562704 seconds)
  done (took 11.186845279 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.544674479 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.544785975 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.553790459 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.53916758 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.539965974 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.549065478 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.508401408 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.508251776 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.535224505 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.534361132 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.548202205 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.535694334 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.547710436 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.509829254 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.531949601 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.551692439 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.538766414 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.551742832 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.514119858 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.538403869 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.484607731 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.541059789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.534243994 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.482753018 seconds)
  done (took 38.101795455 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.969587297 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.557298328 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.627354439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.523080525 seconds)
  done (took 8.012509889 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.588437086 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.588585332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.606444085 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.644192611 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.687464615 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.605094537 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.51323678 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.502747507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.489741974 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.591931559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.666929089 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.587287289 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.807561531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.483341192 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.804720208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.486638176 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.483899787 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.590300711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.639419454 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.669169663 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.485932583 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.587741553 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.591888033 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.59060028 seconds)
  done (took 39.629200562 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.493599705 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.503383912 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.485007943 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.499056333 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.486193528 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.485948937 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.488209021 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.493802784 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.484941524 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.488297446 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.48691741 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.499962442 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.488848182 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.486879137 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.494275687 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489085695 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.490025619 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.494360067 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.496590993 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.485676561 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.487775128 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.494744566 seconds)
  done (took 34.143172015 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.473344129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.472259837 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.826287217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.72557948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.473680592 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.470273439 seconds)
  done (took 14.778312025 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.56074235 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.712980081 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.47513619 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92408551 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998969977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.479255842 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.479766447 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.76607593 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.151602746 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.124632834 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.548074089 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.562105755 seconds)
  done (took 22.121184578 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567267606 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481638498 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.484234377 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516972912 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479659724 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47981757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526667132 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.007703261 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.484962981 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761573707 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490642609 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569353225 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.731821933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482771469 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505688246 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.467382625 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716981035 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075441081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488403799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486694431 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520137763 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493635655 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498616247 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.742033044 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489020308 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482845234 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.747860204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485287298 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838191179 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811484951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809424803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490082295 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76143022 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972510942 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589706405 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735427551 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485242717 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482223539 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.454089203 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.496801068 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500059887 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489554788 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806971169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489119443 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485627881 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484723899 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019948934 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.490831411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.485886698 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485774045 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812736811 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573348416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.492846102 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486544958 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478980492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483041814 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.492676824 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610837943 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125133417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489129822 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493697276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.507191036 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48195827 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489669731 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23819094 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.497217634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.49061377 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490324582 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4892922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497795201 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511377865 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490264539 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.507735467 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487754058 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47704262 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4962001 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489259921 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13245072 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506693841 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.490096098 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715223373 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488475044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489190832 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.486958722 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487121386 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386696506 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498282598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.456519165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51831357 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019664898 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740213376 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514137678 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519900363 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.708764101 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.456011585 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490776678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.493174495 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49331669 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513411535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022824331 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487322688 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4926316 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739844327 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.700153736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502372645 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.466050745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027060729 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498485807 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.517499705 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503039728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.746519038 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213510426 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827839136 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495450072 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528923093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491940478 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470373493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504133205 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499991413 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496212967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82027443 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.484375989 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496390175 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565029051 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492135368 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49118797 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507009284 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496036263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490345619 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.725063117 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504542466 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.822725584 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.498537238 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492086044 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.486215722 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520457833 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.496077745 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.717095302 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501237015 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768933744 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493056748 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493794349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494763633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.714841232 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.510713506 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.502987128 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83719352 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503312142 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504210774 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821594157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531709891 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606624687 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527385124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.502297084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745566598 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.499013865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.500515765 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506306213 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498060276 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496221939 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.50066764 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488290833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223939379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501220852 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507031752 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494191554 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.512235611 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570984778 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504614856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.750831331 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.509259839 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496788468 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.501164916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.496589787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722845093 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824328759 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.514230663 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675193506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.029936739 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223726215 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517350881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.496725091 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.496023776 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.496430743 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497233307 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496631117 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498874755 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753465087 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834859915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493198547 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224462913 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503017322 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501180293 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.511200306 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827727492 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.511578192 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500436135 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.507546035 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500252872 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51213449 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82729026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724456066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.514637691 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499380776 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.018623525 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506734154 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500023028 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498415103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529456395 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497945342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13628966 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837018614 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48868955 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834177747 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503129481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.519813519 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.501271307 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511129049 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512532451 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.531278163 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510939645 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.757487274 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505885627 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525547466 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140960825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497457875 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183871423 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503488118 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.526001637 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500914885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036505968 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498294019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498908033 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784531891 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037742272 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497766052 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032997466 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.501773934 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377006285 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831343718 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72992241 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498391312 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.511385573 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835153939 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71777637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524362425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.514141746 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501448089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.464541484 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113378936 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499290956 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6832362 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036632899 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514805534 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502947592 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.559759527 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519070534 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971890915 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496892571 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499532534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4990492 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534047702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121779436 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504360494 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501633623 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260025558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524186597 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.042878686 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501293872 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.760143386 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.833147288 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.809852615 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.511438986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.512792569 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.75071552 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83382447 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506196337 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.517648916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184996116 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.367414271 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.512348112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50266474 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474633539 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5064794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860110004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.512371422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.508991035 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504660284 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505767177 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503424487 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.501837998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510384485 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504349636 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097247783 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.513077152 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521669765 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507565739 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506821134 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754647428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.520539074 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229553309 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736125496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512973396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534671182 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.509210646 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519751988 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.477659382 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506972995 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508091795 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589230985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.725751831 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.515412164 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.474655406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562366136 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715105422 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503104086 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.516922256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777359161 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.510508056 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.509329393 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503724176 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538168907 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521093659 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510252151 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504276694 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553783744 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58125826 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764769686 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.840451255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84080624 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98143631 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516393984 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510592416 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.523997209 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588385035 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505599072 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.510459332 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.50893496 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231489033 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474163678 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240021832 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843604783 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51306848 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506953024 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505115797 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747295051 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503854852 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781848022 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507138863 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.501729657 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535431855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528705903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515371052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722745043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787103499 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511147872 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514960219 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512302277 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.509327979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848053561 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.728796112 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108160278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171446312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516640301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515154983 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054971722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788220587 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512556964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511173034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510301855 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.526555685 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.518866347 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.520805935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510525422 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739486798 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844901187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01516211 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838453935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538583073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.38484504 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522549916 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760430767 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346469777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771718001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247158647 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390573595 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769857076 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582786062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77015467 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.512058881 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746895929 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.527297879 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512638874 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508977551 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51051172 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.511311463 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8429177 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248983309 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768794131 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.516392021 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.521467366 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542833217 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.772351592 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738793583 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442893222 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.737431423 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852582452 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523178702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512030956 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253980555 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85311812 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517215185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.514509577 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78119682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517493619 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551973368 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.385307514 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.513619957 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183062367 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.731358802 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534096755 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523476934 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396622389 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258371257 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527386848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114436538 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518585356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525645327 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790418015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.519665487 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.525803949 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801912171 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.516522986 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526842357 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776351292 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.245073578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.417443424 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.534876472 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518295349 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.517493092 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513277037 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55571795 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511772727 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521440469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.9741625 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5105458 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51353925 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529451367 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.524718204 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531458279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.515557127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515309954 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.52534646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.501431098 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.486729762 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534860955 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641260399 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134223876 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514281985 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.130841438 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.857514254 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.767658667 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.52854757 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.484919332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.523087127 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51596727 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515447784 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511600788 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508121839 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181580273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.534694819 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.852690373 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527380539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.730285966 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731520288 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516000567 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781300149 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537162187 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538997568 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.486541316 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518291818 seconds)
  done (took 1049.227782758 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.523930432 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.54122367 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.579633702 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.600668285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.529171614 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.586984168 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.602165352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.534418829 seconds)
  done (took 21.869168587 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.516892565 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.515146681 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.528919368 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.516275288 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.51648885 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.07308144 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.521805479 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.513699599 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.541117934 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.524100818 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.518690129 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.243048615 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.521666891 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.518715301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.507581136 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.516023781 seconds)
  done (took 34.972023343 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.741274051 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.734019595 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.22900666 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.526209053 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.507675971 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.504969948 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.936136431 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.527188068 seconds)
  done (took 29.07807646 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.522263227 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.527486513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.527510042 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.529548302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.528135325 seconds)
  done (took 9.00763022 seconds)
done (took 1313.472354607 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.524630565 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.527346314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.527165063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.526182289 seconds)
  done (took 7.476558299 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.492569649 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.489221411 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.49157078 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504828875 seconds)
  done (took 10.349263052 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.949883929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.152069998 seconds)
  done (took 5.475279198 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.521352528 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.285374177 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.273567106 seconds)
  done (took 8.452273635 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.833991376 seconds)
  done (took 3.206612056 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.987442237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.039306632 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.511522595 seconds)
  done (took 7.910699581 seconds)
done (took 44.25094319 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513991852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.297571854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.699346161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.52438121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.673098618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669929484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.78260263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514923292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.520663424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.517375629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.524880692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.704859249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.773480145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.284339031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.771553671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.28065947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6771196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.518375656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509995072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511624318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.780920552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.527045701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.528634996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.525751284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.672998727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.66082585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.529322689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.278884157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.525720879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.530305713 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.655866047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.532672117 seconds)
  done (took 87.391187558 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.532418618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512798916 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.529660641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.52804754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514562145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.511105965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.532042245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507720216 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.511563966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525510737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514431885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.5184885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512477701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511983188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512077894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.510923227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.515644055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513208431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512845816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.513300571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.513709636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.5141497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.51333051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.512992287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.512661072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.512803251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.514854424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512553095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.511206004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517921425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512035764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.509843226 seconds)
  done (took 81.875146212 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.521908823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.509993955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.5099434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.520652687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520231542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51085721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.515243611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.511213504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.526888381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.523198878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512710913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.5308695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.514251348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.510964101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512704887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.514488321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.513649239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.53403482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512615569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.51620627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.518521628 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521175297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.530457942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526038248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514289125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515091182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.546124489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.532151175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.51358124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.513858434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.515867848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.513579168 seconds)
  done (took 81.981697001 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.807851365 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.531752406 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.53656755 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.528238113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.537293512 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.534500169 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.52983091 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.768280834 seconds)
  done (took 16.153524231 seconds)
done (took 268.781958123 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.530080797 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.522126741 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.552186137 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.530703108 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.541852145 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.554434594 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.767600765 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.549516761 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.759623832 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.527083845 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.541620224 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.530275576 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.535645421 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.680792442 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.520780079 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.536265323 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.528206484 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.526884912 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.530858637 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.802653579 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.56167922 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.52263325 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.529542879 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.536042845 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.502103215 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.606313416 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.608627402 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.698076606 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.65845079 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.604071974 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.524300999 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.52729778 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.53363215 seconds)
  done (took 71.359310051 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.528587452 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.541151206 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.540873265 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.540141353 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.537731177 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.535685787 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.525815726 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.539120338 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.540139802 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.541276218 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.540618034 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.537276881 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.538322644 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.538858158 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.541696056 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.511446237 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.528275579 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.540706398 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.531730478 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.50965765 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.539273138 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.540518216 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.544074757 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.538179415 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.541028806 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.539864329 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.541609221 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.53757333 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.542482337 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.540234836 seconds)
  done (took 47.476802487 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.543150858 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.525134682 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.537263168 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.535826976 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.532194853 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.537554847 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.903013377 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.543220026 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.537913918 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.53707071 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.526946308 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.542754077 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.593350719 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.526185287 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.534658261 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.543302035 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.542490884 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.536520227 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.533322338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.546724595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.908335298 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.54263975 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912116558 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.551221394 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.537364123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.536277026 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.539197611 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.528515439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.533680608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.528776498 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.541400397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.899496654 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.524212834 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.531767881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.536292466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.546518845 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.544756977 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.528936947 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.534877915 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.536190125 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.895296863 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.531303974 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.548394127 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.525521774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.53152703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.54179509 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.528378891 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.542907307 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.837359909 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.535707012 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.546372521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.534665358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.546227152 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.538419941 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.840805146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.534021216 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.536122732 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.535724301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.539566295 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.900090252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.542724222 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.537539822 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.527341744 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.533111933 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.528467606 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.533643843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.551999474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.536110238 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.52564506 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.534314625 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.528759675 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.534576972 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.545245383 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.530211377 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.52766736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.523616325 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.535836332 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.526889904 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.537545567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.89530598 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.535740202 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.530249808 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.930016282 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.537154521 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.549733597 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546668078 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.546711357 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.608476748 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.899265729 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.506312701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.549544482 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.535608064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.904994539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544281347 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.537377099 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.549028361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.545196139 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.550509413 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.529546934 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.526325095 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.532371173 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.55249617 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.532640627 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.533695951 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.914928296 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.546469669 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.531379974 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.559585243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.655729219 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.546964036 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.555088442 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.543223204 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.924483754 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.544437123 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.547929101 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.531963572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.535946188 seconds)
  done (took 224.547078813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.534762776 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.538510825 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.536749425 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.538372625 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.53357733 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.54375515 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.534040305 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.535384805 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.539451688 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.536791821 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.538568124 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.545420564 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.541576715 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.536214623 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.534434617 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.537840341 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.534931015 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.552375825 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.533552356 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.536383447 seconds)
  done (took 48.150508416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.551625245 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.238105165 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.218280589 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.551350712 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.550774587 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.541926509 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.613177696 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.552840107 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.549992741 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.921176306 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.76129982 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.552989836 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.55085175 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.551545434 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.212823266 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.525948353 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.934036575 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.257347039 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.550804033 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.258447774 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.525332 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.55324212 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.542745398 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.238759207 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.939168425 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.90576604 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.618801747 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.263018669 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.551984431 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.551162656 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.261617747 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.552836189 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.543655795 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.233686886 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.549621898 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.56481513 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.552384931 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.619598405 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.621731206 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.923049982 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.244352164 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.913820259 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.561195731 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.734642169 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.551601065 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.526447234 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.256315462 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.550614467 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.525703015 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.559539941 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.562126249 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.229546748 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.544734818 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.231239994 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.554228735 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.557257721 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.247341447 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.22933144 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.216872607 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.76064327 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.545027895 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.910002236 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.550729583 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.260379537 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.551887005 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.556507709 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.553018358 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.768790542 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.269636207 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914671582 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.929186802 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929593138 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.550979938 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.629520475 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.557018198 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.923580929 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.627303606 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.959414312 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.921331062 seconds)
  done (took 142.419079337 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.868373551 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.674582599 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.006668175 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.19073062 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.120830133 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.700330583 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.675546032 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.827556061 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.563348757 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.650350573 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.333529317 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.658133164 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.40120136 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.631032069 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.674560355 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.692141613 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020172325 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.549354373 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.273007195 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.310613107 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.563983875 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.660243374 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.382842233 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.970386783 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.54588576 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.373260162 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.550876909 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.137656325 seconds)
  done (took 59.402131295 seconds)
done (took 594.741984932 seconds)
SAVING RESULT...
DONE!
