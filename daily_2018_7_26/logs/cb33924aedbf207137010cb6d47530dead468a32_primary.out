cset: moving following pidspec: 17739
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.375049996 seconds)
loading group "string"... done (took 0.506869804 seconds)
loading group "linalg"... done (took 8.358471917 seconds)
loading group "parallel"... done (took 0.172829051 seconds)
loading group "find"... done (took 1.367433254 seconds)
loading group "tuple"... done (took 1.948247309 seconds)
loading group "dates"... done (took 1.328139248 seconds)
loading group "micro"... done (took 0.211656505 seconds)
loading group "io"... done (took 0.552350484 seconds)
loading group "scalar"... done (took 41.82503139 seconds)
loading group "sparse"... done (took 13.214289275 seconds)
loading group "broadcast"... done (took 1.05601538 seconds)
loading group "union"... done (took 14.685360027 seconds)
loading group "simd"... done (took 5.04959073 seconds)
loading group "random"... done (took 10.240252083 seconds)
loading group "problem"... done (took 2.061460315 seconds)
loading group "array"... done (took 23.236597016 seconds)
loading group "misc"... done (took 1.066285138 seconds)
loading group "sort"... done (took 3.488922197 seconds)
loading group "collection"... done (took 20.692950254 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.586606665 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13454329 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145287379 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.175089192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201531366 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13728528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156415472 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.165887274 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.066712732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206474878 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139117875 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.502954149 seconds)
done (took 5.380080496 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224274422 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083185837 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126004611 seconds)
  done (took 0.914140438 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073176373 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173618259 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092879063 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110959916 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109771681 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091483886 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109392836 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107562445 seconds)
  done (took 1.505519774 seconds)
done (took 3.434490322 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.770250497 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829395868 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.526619059 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12079062 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155517539 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128755995 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.304199339 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.144685562 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123958488 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.10984326 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172954089 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.39009828 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475081877 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.987921794 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090568148 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124820485 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078790317 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.753453328 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077706947 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.115582909 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513139774 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107694927 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112970034 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125430044 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206509738 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111410232 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178277127 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105131186 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.719084575 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099571176 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.178936323 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.092616819 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158015074 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.208441966 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.092515229 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089536952 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.731530745 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187485379 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114900559 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092366775 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673212641 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076816644 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.194559789 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105627459 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109921717 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.209438799 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10472987 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090940684 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081944311 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103427718 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.155456802 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462487062 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10288936 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141212954 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091950419 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.743318188 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092417126 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153412369 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120811855 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106458089 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079228776 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103229209 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16047273 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095058152 seconds)
  done (took 19.818931061 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115331816 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138325675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092304459 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13720475 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138136123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077024805 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099511142 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075350709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123514841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181357772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137264691 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142813317 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073507198 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093187692 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098419128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248912354 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117495399 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10157773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09453312 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087589489 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137333075 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090434453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105336162 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107907606 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165671709 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201852464 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106265692 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122504349 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092124158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096693641 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140097238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159576017 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074128609 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090717615 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177619943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104234108 seconds)
  done (took 5.06533228 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195267719 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098814248 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202689713 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174683106 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14947277 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160893878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10037802 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263311967 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176767381 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161322959 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128509575 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111366283 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075226823 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092468037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075436289 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.715950141 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165523324 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145966623 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120891226 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101301712 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080241792 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.732240488 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081712937 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094697871 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082119059 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086461544 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167268514 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081241012 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.225579227 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094901591 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103882419 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126527563 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190571158 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125541749 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.112567343 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098211539 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077302824 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19190412 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.137719412 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105113707 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074746047 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119874809 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13013776 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112579425 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095271997 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103747344 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223397099 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094469583 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093783649 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.012419421 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197256064 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090647492 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094575452 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335541685 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09391281 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100036423 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07723338 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283477167 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128043344 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093657632 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075701317 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0996959 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078328144 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385414445 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102911603 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.970001732 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078235679 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151867594 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097853194 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100863408 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078871551 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081622365 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101018677 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097874943 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096696593 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076702043 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095104982 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075565286 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099658624 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095249178 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099979004 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075568538 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161464857 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116031529 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078564906 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11309357 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1071727 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099293113 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075634016 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127514318 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092828906 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079023602 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135431026 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080359564 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095063837 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109720438 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079279888 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13787123 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09164903 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16921429 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092736766 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103569542 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098924548 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126869624 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115721833 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076779728 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098123768 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074349763 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094848771 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144452789 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093120423 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077702416 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09688525 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090574488 seconds)
  done (took 23.390284823 seconds)
done (took 48.983569977 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.386335501 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107761632 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108159118 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108185201 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10582491 seconds)
  done (took 1.60493895 seconds)
done (took 2.368985871 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.31948732 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19792055 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08374022 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173130738 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10244519 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.178345093 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161659527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114805644 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.187550576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097361783 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167426643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096939273 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084680556 seconds)
  done (took 2.754700464 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089138086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113490699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077740478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086789941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088918682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087032556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103672174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113956147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101528654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083113186 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088307528 seconds)
  done (took 1.792338636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08897983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095596841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095303948 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086724765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088866554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087498174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10410662 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097489292 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104445488 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081892386 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088414935 seconds)
  done (took 1.778083514 seconds)
done (took 7.077909385 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.083120657 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.423432502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117718007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165120245 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.306513626 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214577055 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603935081 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133169954 seconds)
  done (took 16.000764847 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107220515 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093423322 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075869349 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095330359 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077010248 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110306136 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07808988 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09266353 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079499609 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076765895 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09568743 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078624631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094087915 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076327598 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094862288 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078710344 seconds)
  done (took 2.229843575 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11133495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111457162 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099925794 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084174937 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098553484 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080442368 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101286969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081054177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095896821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080369541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101065625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082992549 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09912304 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078431353 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099157796 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085871683 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095912439 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099113675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083752399 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099386422 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084915623 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096975707 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082815703 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10129479 seconds)
  done (took 3.10666855 seconds)
done (took 22.094990806 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163022875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081016564 seconds)
  done (took 1.00818462 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097392218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114629591 seconds)
  done (took 0.983998616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102155539 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094781738 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130341372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094726439 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095640678 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077534566 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126003264 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095892185 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077874531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07801672 seconds)
  done (took 1.743851794 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081692638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081214034 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103049487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114564712 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088407522 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096685688 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082532384 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098953522 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083788578 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093131855 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084344502 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111525719 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100874656 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097715814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099543995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083394624 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1042831 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09829323 seconds)
  done (took 2.476575805 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077787652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078606226 seconds)
  done (took 0.92554479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080468338 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075079071 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096265515 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097194284 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075407695 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075039457 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092851989 seconds)
  done (took 1.363980104 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.47469489 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1828088 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326274936 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110941115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129796637 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.340359424 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130406109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109165354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090612609 seconds)
  done (took 2.70930503 seconds)
done (took 11.980888723 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088150442 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.130859745 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.477278441 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.097809856 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090330589 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141005621 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.249210529 seconds)
done (took 2.052581773 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33857783 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120074651 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084185185 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075197312 seconds)
  done (took 1.388791069 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075848165 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082552182 seconds)
  done (took 0.937331336 seconds)
done (took 3.104651353 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075548608 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074339381 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090108879 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074633515 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.12611093 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072206861 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093265768 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071861247 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071934908 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093225075 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074780789 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.094268271 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074118482 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073989168 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089190587 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072397273 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091242031 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074727841 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.193973941 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089240712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072416654 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091781964 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071552237 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071806337 seconds)
  done (took 2.892560597 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100375312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093739137 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080316358 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098165446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078908417 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098675784 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080371175 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093090383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080883546 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094516299 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079072483 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096650103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077033322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096879604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077379953 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096173004 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08095585 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093753372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077809103 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096192196 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081028194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093768135 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079897881 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098356256 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078626454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096233334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077829631 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094046999 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081386554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097070819 seconds)
  done (took 3.430874579 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082170637 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072699964 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091436669 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084423176 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090874466 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077933113 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073010081 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091975974 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077305484 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091420035 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078143273 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09030154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07281317 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077271611 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095959067 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079240283 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108776989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072837807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090416901 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078064127 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07801637 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091388179 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07597541 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09126342 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073158424 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073140848 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090512331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07309596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09185967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072997053 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077478531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097513357 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071965037 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103853475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079602059 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090322085 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080595713 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090587749 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07753134 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071921203 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090457639 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072613869 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090898319 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084503864 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076550242 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092888184 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072957214 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095642738 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076671479 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097587138 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07251108 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072551692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096229338 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077986985 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096804749 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072970988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073851054 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090222462 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077818445 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090369305 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072131197 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072363123 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09786122 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07379812 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114007362 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084051728 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090099482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078140008 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095319858 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080359786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095839095 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091461558 seconds)
  done (took 6.830901089 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077626604 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101750951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075622818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074848605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089305621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073608996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097994706 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073827416 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092919018 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091557209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093091501 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07542421 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075249881 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095571213 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074110337 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093937794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084273764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090007912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074059091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094874732 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07407529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098253547 seconds)
  done (took 2.662124342 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214921848 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103321666 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137607491 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092944802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11185513 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110666611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08099278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101095148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080208544 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102389966 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084506941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09904857 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112515319 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083267447 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102042521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084866307 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099085493 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085011526 seconds)
  done (took 2.675102138 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089855585 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095224048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10047485 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094551846 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079438602 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097411941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082145309 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1103099 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07902542 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09543244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086740231 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097043718 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078405964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094566212 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079855518 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094394896 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079381784 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077008335 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104517137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100876264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083135595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105424018 seconds)
  done (took 2.797574775 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094111461 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097461777 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097263498 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098775983 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075021734 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096514308 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083651624 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095228734 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085969271 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096680059 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076552702 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095025698 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083818832 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094155643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082590808 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095265947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078482127 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076858387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097340168 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075525324 seconds)
  done (took 2.56820026 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117770089 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108951936 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091340356 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121418696 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094627329 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109493164 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120196231 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091626666 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10931165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103859219 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109363782 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091676635 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120633936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117684498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092015542 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121454553 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1208061 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102384044 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109588142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09238135 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122330457 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091736876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121254099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110202944 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091325331 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110019272 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091600356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116674079 seconds)
  done (took 3.798319361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077195262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07679364 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092714267 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073706166 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073471379 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092627565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07337897 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092844661 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076785862 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073776261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09436222 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076594372 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095124722 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076359586 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07543111 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094716145 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076096041 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09171242 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074097357 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074001393 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094754979 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076588427 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093905301 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073177599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073832572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094080156 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073971647 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092473803 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076389431 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074356007 seconds)
  done (took 3.251305762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084899295 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101474933 seconds)
  done (took 0.985576498 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075339474 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111114841 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073527322 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080373445 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100620786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077046046 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104135017 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08199506 seconds)
  done (took 1.500893506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101413998 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11565551 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082784142 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107663878 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095642071 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113332551 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15858405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083562313 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103407715 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077592484 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114482521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.077172325 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084575758 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101915823 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086805872 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111012364 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078445574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106266178 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085739443 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097928937 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08300489 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110833803 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08841848 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104202353 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080149601 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108539267 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091089777 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107752889 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083437567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108133821 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085005489 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090057441 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082456162 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102528544 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078578317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115514415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095635231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102018691 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08702451 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102780402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086759791 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094534453 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08787459 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103135698 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09037004 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101291194 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083784775 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094867939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078466218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081235898 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094720189 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081580131 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089800863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086745264 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105354211 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095915208 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098588943 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081964192 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101000362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082049333 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103973776 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08211036 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106715681 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0816607 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104782123 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08752392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104490318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076063647 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071084446 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0972288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.086809505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120580756 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104441843 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.080725299 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081895252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094056986 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080724199 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099418059 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083933393 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10382286 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.079588805 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100512946 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08586514 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097623997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080070708 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100022413 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079915956 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099282029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07868463 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117498895 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0800786 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096715324 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078465445 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107272041 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082031246 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081254406 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0983308 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087438986 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089920413 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083789716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10251381 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083999977 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108868459 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083426715 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102995104 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086369704 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106954783 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082289607 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099923272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074287808 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103515957 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080332646 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086031675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090642635 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08336785 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101452583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08330373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107302576 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079190855 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101298902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088696511 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10768959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080339768 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092464043 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08237807 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101383654 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087753817 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107912291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08038977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076167869 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095739164 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086671382 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100473813 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084629458 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102150974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08323971 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091363427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078980627 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10229942 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089917855 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100619457 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08467479 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107608971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085460098 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099884751 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088595706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100517644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078325667 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106511716 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08333435 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076786037 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107639083 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08200952 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10051429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082944558 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106497028 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082649014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102579786 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08137397 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101816786 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084264776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097192632 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08369563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080479864 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109727716 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100877221 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076691055 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074918464 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103809901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078993026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099770599 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077713884 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101958626 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083593867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096074592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079841826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079565235 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110991483 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088394888 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099532343 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.082655582 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.105402598 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079892953 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100337981 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079503746 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100379832 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08161796 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102413465 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.083373619 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099121149 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.079881099 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093146851 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084542281 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106705273 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078691345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.07862345 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097582821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083296783 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10881765 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08356603 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103171217 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0804956 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103912424 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088545202 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101874933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083523581 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097793959 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082338408 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087586423 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103441777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082931236 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105983426 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082197173 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094197953 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088924561 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099437986 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086613141 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096117964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079213515 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099049941 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084838467 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081320923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101745187 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071585213 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107332373 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089301905 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103098893 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079140195 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102344954 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091912376 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101232248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08678252 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102294331 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086015244 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115560904 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078709414 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102511989 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091517496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102035748 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072412766 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104170549 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080818549 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077811604 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110366452 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079624636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101180656 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083927201 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100698537 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071155309 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099055701 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079145892 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076706806 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093084291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085409199 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100116912 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080060899 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107936679 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081875463 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100376931 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083608312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100035559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08457322 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103826943 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084504789 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103459447 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082105654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097593948 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083307951 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09763347 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079570266 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081448139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102598365 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084059427 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104139544 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082967259 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107991872 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083550519 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103458607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12004805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079977291 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079191214 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10367505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085860233 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102164635 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08275244 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096219612 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088395282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102194214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08920395 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102820883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075069168 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102768475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083075407 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103989023 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084618554 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084555096 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101954326 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082911284 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102480939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092104983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09916315 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09032957 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105396155 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085887973 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103061743 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08531554 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101691994 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080134718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102727523 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085379951 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103947421 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083098343 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106287454 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084111346 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082861004 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101885156 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085721748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104824319 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085891646 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09268561 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079016649 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098443901 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084497373 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106955661 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085206774 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08185884 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101617195 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085836121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101705737 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076007151 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107448482 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086320519 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105029774 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092915606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099103555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084454961 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113753602 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073599817 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101411025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080280241 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080549365 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1096397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086029224 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108887732 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085208542 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099961161 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076728961 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105468759 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08235199 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07339483 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099603056 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087469051 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101206322 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082379333 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104664137 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08726486 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105713935 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088660838 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102862924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083827598 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103862278 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07666895 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080917406 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099454143 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084183227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106448774 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081078581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096792317 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083788751 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103739445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084481022 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083304695 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103141498 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089447103 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104430068 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084536809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109434261 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07463898 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103991899 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08381632 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103475734 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079810817 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104837892 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086067638 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106609775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088872707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084006587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106557466 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084503851 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100286106 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084557466 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104258059 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085437769 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099838624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086462038 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110194174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080624595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104765069 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085247327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081001954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106694719 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08586588 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103616339 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088392962 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104910411 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084455906 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108279725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084749574 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10573443 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086939443 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102575629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088898376 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099365132 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091318659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105526161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086353391 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103618909 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080832497 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08391484 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104019506 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0833541 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109944097 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085845772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10009309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07996026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10038594 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084730125 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109047824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091626227 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105221089 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085729473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097494259 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077763602 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086754343 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101191213 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083725087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107132017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089319589 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104306153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08232666 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101957964 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089971009 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108548606 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087350204 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102373872 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087797963 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.1059419 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085249674 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082628476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105025957 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08704109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107089957 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084062241 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100864513 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093776326 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109354398 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086732012 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102807229 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08714228 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104177724 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079296738 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106176319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087874462 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107434167 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085460089 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104503722 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094940988 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099677252 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084787791 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110146208 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084053671 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109989638 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079281257 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08565648 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106680662 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086982566 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098811801 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080945893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101322477 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085407662 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100064591 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078479241 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115163377 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090170922 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105231673 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083655816 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083696372 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098403638 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078649198 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100386091 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087284975 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104176558 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0925185 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100703791 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080930877 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078462132 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106334657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086344608 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10749082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077630484 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100035239 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081296197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105586741 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092313269 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103370163 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085782342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105907026 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085992957 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081817263 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111082322 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077005123 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106999203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096585777 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106323017 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087855635 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107657416 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091522182 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106834179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079962596 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106781179 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084364536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103722678 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085539463 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104253042 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097559334 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103693349 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.079457232 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099962207 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081904456 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097052087 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089628863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104364838 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086702434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106975366 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085322173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087202736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112736473 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106912465 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084366434 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103552861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083245055 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084792021 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103287859 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083826481 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106640742 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086871508 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105488683 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087972936 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101291631 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096456816 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111629952 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087172779 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096298476 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081896345 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081412095 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099788896 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088150423 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099062844 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083517264 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102486688 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084485223 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087498559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107870098 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085152577 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108007525 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085521988 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095604747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08913631 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105715467 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088352793 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097234952 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086047598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086126522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110545344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111191023 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082962828 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085156126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104553346 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085699713 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096503213 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088490273 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104617742 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085559247 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101281995 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086866505 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107409071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088136498 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086951796 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108189603 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084829618 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10983168 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088599175 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099205195 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078867649 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108706945 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082373569 seconds)
  done (took 56.340539361 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125597654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106541825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075761525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096108162 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122634303 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080985058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075828325 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100770559 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080483403 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110830163 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076117345 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096418336 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11840082 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10360307 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121361058 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110785849 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076567751 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100486326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076892844 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101066925 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096975261 seconds)
  done (took 2.905072434 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101748494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11297382 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090184496 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114948281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103529206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091561735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108847002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11147102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09492731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104674508 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114032503 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091430217 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104424723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10442886 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085860113 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107904769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094282177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102900659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111241309 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089135331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108040468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108303477 seconds)
  done (took 3.10627189 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089004638 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084128421 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110072845 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.076150035 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104728269 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076424661 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11114955 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079044818 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088674403 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106501531 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082581335 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105981704 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089684329 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.096379766 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083205202 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098630617 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089550044 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084391608 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107058052 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.079108946 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124362935 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099078463 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.079987269 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081962532 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114395335 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086478296 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105552727 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085733476 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10288406 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085102229 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.077651301 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107777046 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089163718 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102784261 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082499935 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107154103 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085689242 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099450781 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082329626 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087226535 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100368101 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085937832 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11205961 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081601775 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098353369 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086526859 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104501288 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.076069121 seconds)
  done (took 5.32205718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11509576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129382979 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101189698 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143202633 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121355155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093700385 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107022533 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145427638 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079131524 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083197668 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123642489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118975728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084356333 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112328784 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.1079414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085151405 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107343774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080829123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111326413 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081075009 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111297926 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089056858 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119577884 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116292518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089649197 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104970216 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081160157 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110889343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116398467 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090862555 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111319217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09283747 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12097008 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107562951 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080926494 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108431776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100947131 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105545929 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087463872 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099392613 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087009501 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111230531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087978122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122452793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106567841 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086807249 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104755682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078701467 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117367013 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087124244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115759511 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118558778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089739525 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105831622 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090575434 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12056765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106205962 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08400636 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109777278 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098274525 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099380385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089888325 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118819512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107555976 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094038562 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118080972 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10646967 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089484704 seconds)
  done (took 8.026761997 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113961781 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109530843 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101554494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122908862 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110529356 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089983797 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111185897 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090402536 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109778076 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114303096 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088167932 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155438844 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083538833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113923583 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106427297 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08812429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106428084 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087654594 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107040379 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087742887 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107297223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120472715 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090709289 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122742164 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123801326 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088552592 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110343384 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090345045 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123101333 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110409848 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103540575 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111679487 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090102866 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123965213 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124408588 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110681573 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085629517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089830165 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11355226 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110399069 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088287858 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122482434 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091568917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108545625 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090208193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1120329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122919037 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.103508461 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118037626 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118042485 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090950235 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123633497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111979549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092151792 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122832136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130871275 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101879643 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124290656 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111145515 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10179429 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123544976 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130798781 seconds)
  done (took 7.554375671 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113074238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11806998 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122869691 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077615575 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100932333 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089950531 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100513796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080362293 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117812027 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097198843 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120159601 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111399074 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093921223 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120589128 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089784456 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115676827 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110687346 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090299413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118278821 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11155272 seconds)
  done (took 2.961702111 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09080131 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123973748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083424844 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110285413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085521369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110673044 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08479595 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105881757 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083160532 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10621866 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095102873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117244412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083260584 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11100172 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115312477 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089581789 seconds)
  done (took 2.458349809 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102840691 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122179241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128611296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087440009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.079735354 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108010123 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08552206 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099876638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079227441 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112354452 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089633104 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109325331 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0856138 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.079683419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105206463 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088321486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099880865 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086404075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106275409 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.108136463 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109958383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085410226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10836387 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084638165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107655545 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087741224 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111206473 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080202111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102010467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085785163 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106825421 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090821732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100396447 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087891054 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102324021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080069933 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106036749 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086362911 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110153193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08620655 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080177506 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106562526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085461947 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10512225 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078748968 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10762976 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079145941 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109756054 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084179485 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106311964 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086365271 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112793283 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090173194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115127345 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094120858 seconds)
  done (took 6.194468386 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097558343 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106438691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085270997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096449071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083429894 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088836246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109750552 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085401424 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105696307 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079731513 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10630572 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087609428 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1061586 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087421998 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107716109 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087700518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098946368 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084629297 seconds)
  done (took 2.577238321 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088623171 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080650255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.11121041 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081978933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100046418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081683324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095253229 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077954428 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079138115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103641159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081904675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106673029 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081597178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106931931 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083488987 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104137455 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086028695 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080723807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104007451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078964173 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106542086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081816851 seconds)
  done (took 2.875540043 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100382112 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.136715681 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.097574933 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.147324662 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.086160236 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109862976 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.096714087 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10984817 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126061201 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.087096424 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.085322491 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108424961 seconds)
  done (took 2.166176459 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108423666 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141759739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084239233 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108137178 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097565815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109967099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086976128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109834259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123346886 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101471729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111530743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12297331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101753265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120988453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117859187 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096487249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109688402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088106937 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106889247 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130935731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087883009 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120751034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106358279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086624383 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104741181 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095144051 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120295008 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117473142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08609074 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122223906 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118268003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089053263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123536584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122914123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086165103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124529627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108867663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112045041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118872112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121924142 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085768888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118517159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122542798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096439681 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123112106 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088491449 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117028677 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109491382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088586475 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137501811 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118124443 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120600844 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097669127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123686296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123093647 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138444308 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102134262 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12104085 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117877799 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121856012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119153022 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121715423 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099480473 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114141778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115917701 seconds)
  done (took 8.17194319 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122931627 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10503098 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088242623 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126147507 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121824591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088624948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110398071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088194161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109217819 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083076514 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155362452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108241959 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119610642 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099173331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107942509 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105004667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084936153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116029532 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08152985 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133872991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105107885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095293592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117016394 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116513282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11777805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093827913 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105442482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084542469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105588604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083995033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113569049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104453147 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095827528 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101933019 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115793407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085085631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105587096 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091483593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104452939 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113449832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096128821 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128578322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105273373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086143772 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120208933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084182694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105718938 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081058946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105791258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080470062 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119262985 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117430688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118007324 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11656782 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085252157 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104989026 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085156788 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105257392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084641909 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113872972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116724995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086092751 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13348615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10569653 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084980368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116245906 seconds)
  done (took 7.777407283 seconds)
done (took 152.61081854 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102162144 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14101891 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099012476 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168867808 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081092212 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.134831948 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114015729 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115568709 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080664201 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084211908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106493598 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087676221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172213907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080053628 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101061566 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083849967 seconds)
  done (took 2.629278538 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181159023 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.289630117 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104983296 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112830228 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09130215 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109742676 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089369916 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112932273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086088262 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117773245 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087297819 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108220518 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096608191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107796761 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086316157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.085634448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118901652 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108482149 seconds)
  done (took 2.98039627 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115508054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151767147 seconds)
  done (took 1.151167333 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121768577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181708089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290973648 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.374318661 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.129878136 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122449356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154953169 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100390863 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196753788 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125849936 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124102696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085227816 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134181966 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112803577 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090188262 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106169984 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112817593 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108969437 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08718376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108338753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132297027 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087700807 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113920766 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091965535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187041652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126952931 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088080725 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109023104 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087096022 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108529966 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112026242 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099754564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122494137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162127697 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.112840104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158925378 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114244519 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085109899 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108902147 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085847844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112094988 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090580796 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122282343 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106292723 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087215317 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114347541 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08658225 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107914439 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093827232 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.115568102 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113791494 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09139948 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156269011 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.115286284 seconds)
  done (took 7.557308124 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783288027 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14754787 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084122927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885477809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110831007 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121983377 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.786936569 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10576413 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23003534 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.80028866 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098765459 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120361189 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223729838 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247106728 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.136909088 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307960207 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.663476677 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124368911 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135207586 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121029596 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114871179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132018107 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102381616 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449822611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108165912 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084399282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112545426 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116783859 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155247799 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086074991 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109738919 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174719321 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261166884 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177228702 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10872775 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083050837 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106109661 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163968473 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263063058 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191161623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170281695 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102775049 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083706209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118505048 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104383135 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103555456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159272202 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169808514 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168385053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111031942 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095784612 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115911754 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117136747 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157389783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083078366 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331353314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335077867 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085014353 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115278814 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101157709 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257815074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084845865 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22230367 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133753117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187985693 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106268967 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755641436 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185221933 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084813094 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113888453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091775398 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111797103 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094447468 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163260014 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387002535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125546272 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.088574256 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105879905 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202889781 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084258938 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106587925 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157355678 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109593485 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092679968 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122154815 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09701516 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188040314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246685734 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098087016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115416694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089469993 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120198317 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108842697 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206313101 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191864863 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175997393 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208532266 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095086122 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180719405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163153852 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095541209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188270424 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092103816 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122556891 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09619042 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211374498 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138356747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085395021 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111893735 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091790128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140863079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110437944 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092833218 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164476972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.502335682 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163025047 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081824477 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111463397 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094193469 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158428377 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114988008 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258357057 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094813665 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163398239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11550132 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081811132 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117619235 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159317838 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119688293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094367689 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118670046 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092720922 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.268550127 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194335942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121221593 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212277032 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174312445 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116601457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169724381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115459196 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163962056 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094719226 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118219996 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086264616 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771928156 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120220681 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093079242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112332334 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188954492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085062968 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086082565 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106865728 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081708291 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805368692 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08759715 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105099365 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086583041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114880636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093203052 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113810811 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089628857 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156000259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228278456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118687837 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091907623 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107492144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157733488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.085503178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108456826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085083734 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108248121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093429707 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11241001 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087019655 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167111737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177646171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194433613 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572921821 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084407125 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107181578 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204244386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107807942 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.279719765 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116025593 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221096541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162022936 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082739515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.332158431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162465295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190726184 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110463272 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168313454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082871971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113660975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159088924 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084386602 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116172317 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154686902 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123219859 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098215045 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142014393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084470837 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24469073 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082316016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166873192 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109187022 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09547468 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304260509 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083860827 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12643596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15754693 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11170113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08546002 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723121836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085837465 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117488525 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093036376 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218267755 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160498943 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115277423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09193613 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117868385 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157543247 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205876095 seconds)
  done (took 42.683211763 seconds)
done (took 57.881523184 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305095163 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251097365 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.249711949 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184802553 seconds)
  done (took 1.976996192 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177437072 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122781994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141015037 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105123541 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125259393 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104928475 seconds)
  done (took 1.689748011 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410321217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.330447344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.277002415 seconds)
  done (took 1.929656681 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248579265 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2637563 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.314965713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.387469379 seconds)
  done (took 2.233236217 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199857217 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097169336 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117986477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110544482 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165544279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203795442 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136728075 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145940387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102640465 seconds)
  done (took 2.240930537 seconds)
done (took 10.985618645 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.14327758 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129561482 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.31438417 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.196520004 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.154490852 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.169786276 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.226545027 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.154126292 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.159249097 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096468898 seconds)
    (11/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.264512528 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128159401 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112666025 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123099591 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.249454134 seconds)
    (16/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122393967 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090279541 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115303066 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.21916247 seconds)
    (20/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.227996793 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150119399 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.223399771 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.1125427 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.187830823 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.188698997 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113309474 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130626513 seconds)
    (28/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.21127188 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119343311 seconds)
    (30/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.238804834 seconds)
    (31/286) benchmarking ("sort", Float32, true)...
    done (took 0.241521831 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.173578617 seconds)
    (33/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096018555 seconds)
    (34/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.189955087 seconds)
    (35/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18514217 seconds)
    (36/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086924065 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.224750323 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189821299 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11765762 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081069748 seconds)
    (41/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112537375 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191869425 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143857773 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112712713 seconds)
    (45/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.15745077 seconds)
    (46/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176252448 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096890362 seconds)
    (48/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112520586 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.120908267 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090856043 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.203143439 seconds)
    (52/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198473332 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095648763 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110271452 seconds)
    (55/286) benchmarking ("sort", Float64, false)...
    done (took 0.166639278 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11545383 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105967166 seconds)
    (58/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.19000677 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.105601728 seconds)
    (60/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205334038 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091640826 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236783852 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22085658 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113700145 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074482515 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126050205 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099029911 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.145101688 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094511137 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094104821 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175992679 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089258358 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120046437 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169690074 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131369537 seconds)
    (76/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181683611 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080631747 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.0823501 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110439434 seconds)
    (80/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119522864 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117257718 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071050249 seconds)
    (83/286) benchmarking ("sort", Int8, true)...
    done (took 0.222066503 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130765761 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090372427 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 0.185343581 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11317505 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191954373 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071378106 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130585218 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114048796 seconds)
    (92/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122459042 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134436113 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.122726115 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120860934 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097172197 seconds)
    (97/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.156966802 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085361468 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115777279 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096110663 seconds)
    (101/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.179644345 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.192198529 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092627765 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113975862 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092921884 seconds)
    (106/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.120528469 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149403721 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072069365 seconds)
    (109/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185320818 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088014508 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115535067 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171310556 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155466715 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.178551561 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11898621 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188572389 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070221426 seconds)
    (118/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112558809 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118686661 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093775758 seconds)
    (121/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.095043728 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071676663 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.130730194 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091109265 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113894757 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09543802 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.174646517 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112119428 seconds)
    (129/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079885781 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117744309 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159724754 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177750338 seconds)
    (133/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076996096 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.110254244 seconds)
    (135/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153854211 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11753476 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097698101 seconds)
    (138/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.110416871 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088936733 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105912487 seconds)
    (141/286) benchmarking ("sort", Float32, false)...
    done (took 0.169422694 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091343194 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071495865 seconds)
    (144/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.095446777 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096192611 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112411641 seconds)
    (147/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078998823 seconds)
    (148/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.159501078 seconds)
    (149/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.074785772 seconds)
    (150/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121753657 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083372645 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119726439 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07191892 seconds)
    (154/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15777958 seconds)
    (155/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080078523 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090113378 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098331441 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086748266 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111807937 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08276425 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141945756 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074355118 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190250524 seconds)
    (164/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110679557 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110369093 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112216579 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087991546 seconds)
    (168/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148481414 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08954521 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09803341 seconds)
    (171/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09588339 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 0.233127765 seconds)
    (173/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114783637 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089579421 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.181068296 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114365755 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080221544 seconds)
    (178/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.186898606 seconds)
    (179/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089798672 seconds)
    (180/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125407444 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088547531 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.11223416 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090508239 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087927756 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.112349915 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097235437 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114667292 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089301857 seconds)
    (189/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101588541 seconds)
    (190/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085031593 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169138642 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.226331127 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074099627 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110733191 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087365779 seconds)
    (196/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111467617 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222161215 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131719876 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087950627 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122205568 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096182608 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09548013 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117989335 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096314755 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083510319 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119102703 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088806682 seconds)
    (208/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107525648 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153812121 seconds)
    (210/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.095098914 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.084859337 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115825367 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076324851 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085145772 seconds)
    (215/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09576919 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080548062 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121301755 seconds)
    (218/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088540552 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110623912 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075035834 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098493585 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074357592 seconds)
    (223/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.144876524 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08941865 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117859834 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085690664 seconds)
    (227/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.111988965 seconds)
    (228/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083234544 seconds)
    (229/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109271496 seconds)
    (230/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.123346336 seconds)
    (231/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.078646499 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09838035 seconds)
    (233/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08621588 seconds)
    (234/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127341485 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071980758 seconds)
    (236/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.097303635 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083289614 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194163201 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085719731 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.1034513 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091495531 seconds)
    (242/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.095632296 seconds)
    (243/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080641919 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096602677 seconds)
    (245/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238436206 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122013294 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161662556 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091119542 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1125489 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074472065 seconds)
    (251/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137176268 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091248282 seconds)
    (253/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112796414 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093036896 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.103184643 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083370825 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072504737 seconds)
    (258/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.093909388 seconds)
    (259/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071882811 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108235577 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.07196736 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074318907 seconds)
    (263/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124254284 seconds)
    (264/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072383522 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110746298 seconds)
    (266/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071847723 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120539131 seconds)
    (268/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072615486 seconds)
    (269/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181297324 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075451173 seconds)
    (271/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.097872853 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.085884985 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111916168 seconds)
    (274/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072256454 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131077059 seconds)
    (276/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072754961 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089807399 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121717417 seconds)
    (279/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080969002 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.109349685 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109425948 seconds)
    (282/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111949691 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083684555 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.098579196 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073781877 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072191098 seconds)
  done (took 36.212188438 seconds)
done (took 37.133739886 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103207615 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153985027 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093929927 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136242362 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09740687 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.122470731 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092528364 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119368377 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.095852652 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121903073 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.094927548 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102115044 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.092973166 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117910149 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094615108 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138631218 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.096253857 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114212378 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.085939504 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.108775474 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086702454 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110567228 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087618791 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10098145 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.09510809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116482839 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089684213 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117652259 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086145516 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107772356 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.084560337 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.08957883 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108459037 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097028426 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112249903 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.085720352 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118163125 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092904529 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112177505 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08679823 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115208947 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086260671 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11251974 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091441814 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11057416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085135836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08562959 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121160691 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138355336 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088049817 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091255983 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117327218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092969389 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114488818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085006273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110580263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0869514 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139893242 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.085690852 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111814768 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090866493 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115611333 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085363062 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110068559 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087118307 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117258504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093442946 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109000209 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093157087 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088890176 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106990672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085816057 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.10893048 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084728137 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.116285489 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093391253 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105307962 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.086894051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090016415 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112521823 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085686042 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10962733 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087976595 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110596556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08468423 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102209312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084443611 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112288354 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085575816 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085489372 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112954895 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089421145 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112311265 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094901692 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110014997 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087025063 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110435278 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087562892 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112062577 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084533263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105715644 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085366563 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090228175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.10794038 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086944455 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120509032 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084488492 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112819931 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085693473 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109813239 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098642822 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117352948 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087271384 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111950189 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.082635376 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113478692 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084104848 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084016711 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108915869 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085924532 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111786269 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086870742 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109320772 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089056476 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120773886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.099985051 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109433133 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084710023 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08610991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113579418 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087081452 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108551376 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.085509384 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105290164 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084895259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108132695 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0897556 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109243971 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086910593 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.085869792 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11011254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087893167 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111196432 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.086779321 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108030297 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080096456 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113474543 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084757033 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087228882 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111573062 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085724826 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.106566049 seconds)
done (took 16.244254836 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097765403 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183617204 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144895363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14601719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118658067 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.128766592 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122897838 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116133039 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119606244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140613669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113190292 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133391758 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148478091 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094257267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128518055 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117560789 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092060059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127812058 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12621893 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137351335 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143535643 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093972638 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1389538 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137534205 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092334566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14675537 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121330622 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09318391 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121172965 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101987652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134861833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120231854 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095839549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130330619 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100794955 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117931721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.103665733 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114055557 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093423254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.117737036 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13189012 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105410082 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115613827 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.100328621 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117733571 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121108482 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092910222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115919544 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094547282 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112844611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098105653 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137496028 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092194448 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120694307 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11887484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093577572 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119748381 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096622345 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120534843 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097039356 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118564901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096063361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124062636 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135066436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093319595 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120202328 seconds)
  done (took 8.716090369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111587171 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147879619 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125760262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100910932 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122454057 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083239025 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082088314 seconds)
  done (took 1.755281744 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088499173 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137547705 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115703979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140331163 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.10829618 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143808968 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125248547 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084469557 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132611494 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093399438 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136332726 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162773474 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085083462 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120905636 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118499867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108860361 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118447689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108818991 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092498076 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141821998 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091175352 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130362557 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121435101 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.084648479 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131129617 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085930314 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173296642 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095088847 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108136417 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089868062 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114015308 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.177738325 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105435135 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12029569 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082032123 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136495005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129395065 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089504476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133227044 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08876418 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13052219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090355872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117077091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089301328 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117266562 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098437595 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120012418 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092505159 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115777945 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11246165 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.119996391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.105833994 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111471988 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088236151 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118623097 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090017232 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124197236 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089077334 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136853896 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091089135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135388112 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135310172 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104973848 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135274965 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101436584 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132109126 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104986332 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11544425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091313266 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116995405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13427572 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087865886 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119668424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099439792 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117471053 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11097626 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136928266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0888292 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122140284 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088743095 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112336006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08518123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137399382 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088645137 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11226491 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101544505 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121648946 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089110974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113748189 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.105958069 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113866558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096128572 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12150604 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088319533 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125379231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137629989 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095406877 seconds)
  done (took 11.925827812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092597916 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.091660605 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121571605 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087349655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111905695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087051281 seconds)
  done (took 1.587345958 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121356498 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118462018 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100668868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117201587 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127678869 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13380169 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.134439954 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094356296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.130386387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099567541 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13476112 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109904452 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140498249 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117392092 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109091636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11767461 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109534492 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115020762 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099094156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114637265 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103342897 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118010707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089204975 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13324628 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09348608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118828702 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09339765 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126236895 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099514481 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12113703 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09219081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119389332 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.092933812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11987788 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13553023 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093457996 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11370197 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095100327 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118840229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093208706 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136131012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089197733 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124232077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095936587 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121367268 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.092611383 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121666142 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092327134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134554628 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095516607 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121400025 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092808124 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119000701 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095587944 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118613972 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094908383 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121404923 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109315801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11846052 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.092135326 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114808619 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092808778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12107271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118534229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.093523813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120370654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092556721 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114376265 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090467585 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.091874376 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120627548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089346901 seconds)
  done (took 8.962234557 seconds)
done (took 33.924280287 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679531622 seconds)
  done (took 1.668946813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.814338723 seconds)
  done (took 1.804874458 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.277917203 seconds)
  done (took 18.292963964 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.46454095 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.549339322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.957780989 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159522566 seconds)
  done (took 3.124044428 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949125454 seconds)
  done (took 1.957110467 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292427534 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232630281 seconds)
  done (took 1.521940117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811085887 seconds)
  done (took 1.819237886 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.492467314 seconds)
  done (took 2.493365835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33543057 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168037169 seconds)
  done (took 1.517375319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563627245 seconds)
  done (took 1.577108411 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.702967701 seconds)
  done (took 16.713746224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24009401 seconds)
  done (took 1.259083583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293210557 seconds)
  done (took 1.303100408 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.578393403 seconds)
  done (took 4.585558531 seconds)
done (took 60.640398843 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100422674 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098866038 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124369193 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095252509 seconds)
  done (took 1.423389729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106595409 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123935371 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096945448 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118914374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101080181 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119064895 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09135356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.162792358 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092221696 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120551055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092178493 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119208617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094868724 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118895231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090873967 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12108569 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095028045 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119848958 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093460366 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120345698 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.089773171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120746416 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094640745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117790192 seconds)
  done (took 3.637865029 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097785258 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08958375 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118107375 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089299924 seconds)
  done (took 1.412270081 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103222312 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131216161 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104026861 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125129705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105526911 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131537414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.08802423 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114395801 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090723432 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125141848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09060401 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136008854 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104158362 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110156003 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.099718998 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113104881 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084505538 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131846398 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098721185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126666922 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087654233 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124721995 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095367877 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129482226 seconds)
  done (took 3.672951843 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17128199 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126623856 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136834066 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094397316 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164561093 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113191831 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114338046 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138698924 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087811731 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125656979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09200256 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166034918 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097299227 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117250082 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088419773 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.120901171 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097022398 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123804559 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090009307 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127581136 seconds)
  done (took 3.411487186 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102048353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.091467141 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111770014 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086519762 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122594969 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090373477 seconds)
  done (took 1.626777324 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089961137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084689146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111339691 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085062472 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114540447 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084326804 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083493967 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11062423 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085016117 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084514118 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109906565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082724124 seconds)
  done (took 2.150492751 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.376971405 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114053529 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090300803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113005994 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092173081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113949689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100623468 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114685439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116311476 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113935285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086308914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117149688 seconds)
  done (took 2.576242633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204330175 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093180132 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257271363 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346373975 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155759005 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165984343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275386931 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159623426 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178600063 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10557784 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214694712 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12614955 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149015456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174106422 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136661714 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.172903988 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169675567 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193264079 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116586215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226269205 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157707746 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135576079 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173522106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14724231 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133322519 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153169845 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089492024 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124828025 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167362457 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164812161 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168183402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117210247 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13560319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193326029 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228358818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174309344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29814877 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128610131 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.181542651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17957795 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222431808 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136965356 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18979767 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151848909 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099050399 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177306911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153063109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177238477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128250219 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109640462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205691919 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144164209 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200721488 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105540604 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321454979 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118717671 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143807316 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177227479 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182428342 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185585295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163715947 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.090112868 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207386765 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176214012 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175667947 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114116678 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163040859 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122782669 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170079151 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190808101 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174225308 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160106208 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179957649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132119265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160391687 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165319012 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148281446 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145792981 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156000401 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119387283 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118517836 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134000044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124986127 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156237711 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12075239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197126963 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131762991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.184058851 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19845765 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153975053 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128771076 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159060946 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160837732 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144488304 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089362986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142230392 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156951268 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153145313 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100537568 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153129585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139057908 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.096882801 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149271717 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120610236 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127668538 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130320174 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162789914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160390317 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.096884487 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161528703 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147023923 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153863164 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165325739 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180516924 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10101941 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130056206 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188582546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154299943 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102082559 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169163547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180906747 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.160884375 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13521899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163689705 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187667797 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109772804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209790101 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109300536 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131332742 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.146622872 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154097148 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124218606 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153492943 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126424867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121137194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214658873 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096608534 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134003836 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168791676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095913334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126803948 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11063019 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13273953 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138188618 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.115322488 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133362476 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152282221 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15536044 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121437912 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154160503 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139599788 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183296981 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13058802 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156889852 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115695766 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117151785 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174167437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179736814 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098112281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218318828 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163750488 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192266435 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161458328 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099564527 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173298292 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126075021 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088504557 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160070788 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157520957 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15799212 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178041006 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189203441 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160667402 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149912187 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145930035 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162591673 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169620126 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122854418 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140743159 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158568283 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154728147 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09088428 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121294875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.095978942 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138741391 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128085101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101166431 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175831464 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158789881 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182310684 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155208556 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138754538 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176744875 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.094380932 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159283902 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167130461 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135677718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179225495 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176132632 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164149329 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139181383 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170455613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089172655 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119680896 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101148629 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160621867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129265746 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102797028 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139946419 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176875513 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169741981 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147310107 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195844871 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160058649 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186119559 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120961079 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.132091433 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16605067 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155002071 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179898024 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104492579 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155811884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172656959 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139068852 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183174586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814872 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134741172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222550474 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152565039 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098727383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146427539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161032105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108475462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161133438 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143457005 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131961751 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121837606 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131791498 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122290029 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175579009 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112141236 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202790512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125034634 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166575684 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124047807 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139496386 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127999067 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142650886 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113918712 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164140042 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180916146 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139363753 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126115881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169451673 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126922408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306010087 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180786462 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178612544 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133118775 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111115762 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157397007 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155424154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159661336 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17458154 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139423798 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144917423 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154073577 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141051692 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132240482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11418741 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146114118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148100959 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100778675 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149186784 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13925793 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178394854 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138999108 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125665357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160480991 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146134271 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14500456 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110343521 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194920709 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153659709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17247454 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152534155 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162664046 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194009521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092443787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125894307 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095206639 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173223999 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130125296 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157666755 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180345875 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190990247 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153781854 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160666207 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134301168 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089384622 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155056945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144994603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19265069 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137028954 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104030874 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184358183 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14755265 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126956751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129425762 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280151749 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140482689 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168433868 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114255487 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272090954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094171168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12746655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126713571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165599048 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135266873 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177043241 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132872794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140330537 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157735467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134485082 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183828814 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199059519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164339717 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169568467 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14053806 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152937926 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129588131 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169949494 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140675325 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140686625 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129038563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176818062 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210156383 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10095504 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159434747 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158814519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156027706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168603224 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101972519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220868811 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099610692 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159565383 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136465258 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091418457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153853486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181031878 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128835509 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170349497 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153183231 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100652457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123653695 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146650009 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125295283 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138620359 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125295713 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173128098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09383523 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159640359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176226243 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098336022 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150898518 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142388023 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105513262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138890626 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142901612 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102854684 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166508295 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175882061 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127359819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170222878 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169637195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130326197 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154798919 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141154227 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662259428 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096230177 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17800174 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142591141 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179759118 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144216957 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132295676 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156268541 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146207352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163700523 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146205399 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188099956 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158925521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154005696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128057142 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141366151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110318258 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129216934 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117817357 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15790259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138608596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133136389 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123542345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140343596 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140409063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105586927 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178420914 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142874847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176618083 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175803264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134135141 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163193793 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1692408 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098342534 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156856528 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166596952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137761517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117074871 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128478219 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130786577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145247663 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121883304 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156102309 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155795661 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128510502 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159767164 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131887393 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155265382 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109755668 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157372732 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128007745 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150332892 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123605226 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13037515 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.094795805 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150520379 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15332534 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155144288 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093158817 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167920975 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175951292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093050607 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130409177 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281085591 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153038765 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18663294 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.149284447 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101846108 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140584545 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143235599 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120685512 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155594758 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125431603 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099843277 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127310931 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.174397602 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12229011 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151927698 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181370096 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156481463 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194086701 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133666199 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261970615 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106439051 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151528865 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097658096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127571995 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139027107 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101331274 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141159685 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185010279 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174741003 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148637533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.111631043 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124840185 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095302363 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130420001 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157134075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149576143 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124260664 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140348944 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115123455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11210726 seconds)
  done (took 73.530357483 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144928003 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128780863 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144898038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192019794 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162531704 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237322231 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201114208 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221980028 seconds)
  done (took 2.54669537 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.100165229 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154348253 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136891228 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120634998 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.087478587 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.325710567 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134353258 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120105814 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.11458189 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134144981 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113460096 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.521108195 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120519125 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.092325953 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.10877419 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.111993656 seconds)
  done (took 3.597839708 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.228596855 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533827226 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.048447809 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.226301016 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.218960895 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170848755 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72902164 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177418554 seconds)
  done (took 12.439790649 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121120952 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108742662 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.15904387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159110472 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115820201 seconds)
  done (took 1.77979502 seconds)
done (took 114.810974771 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094469098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094490486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12226487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095463724 seconds)
  done (took 1.508032929 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.108108219 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.076701729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108255538 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076218387 seconds)
  done (took 1.486704638 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417168144 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076183121 seconds)
  done (took 1.64339104 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115115853 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130194784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102685884 seconds)
  done (took 1.470210646 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101515761 seconds)
  done (took 1.219296487 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095759872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095344551 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138490258 seconds)
  done (took 1.448921858 seconds)
done (took 9.893823687 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111256929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432423051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.381619086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134535471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69051675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405270376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002242447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153266952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163525036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086600545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133597002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667040666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.055579601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33787007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.041000818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335506944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699641831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08876199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123374571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088219024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010005273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086307819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117249223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089829451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669354124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420353555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087518392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376732913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086539801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121744708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373953819 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116134233 seconds)
  done (took 16.793414509 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097676596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175292929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09473246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117711183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091567898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117721984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097806196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129772514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177955108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087482635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133637285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087121758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092406146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118034853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108020438 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116157274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089715638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118409139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094022436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118949587 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106958627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115208236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089348571 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089126807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115691399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099675749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117017879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099757108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117103655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094252473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119513002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088041356 seconds)
  done (took 4.633352397 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140841925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185054166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09604264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15030946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166298739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088986042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20009243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154748698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180493631 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086988476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13498603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087239299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151460124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087286219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13699736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087814035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120009986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090392303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123650822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089136842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136681346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087160585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118127851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089638855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.08784373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129250822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087743528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13028005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087665145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122458779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090758484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117615853 seconds)
  done (took 4.97120158 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097630092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096353888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132778228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13353526 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090194956 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.094402335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125114581 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089498816 seconds)
  done (took 1.983402966 seconds)
done (took 29.498498633 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110021714 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.096315053 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130317196 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099792004 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126990384 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100663915 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11620956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098242438 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099290835 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124933608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102628942 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115852081 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089151965 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114801414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100788409 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092507883 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132229744 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096537789 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13692768 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102475811 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.11792575 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098664152 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126745919 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.10812499 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136503608 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106975144 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133559755 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093096796 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118021895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088739811 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131296282 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109887726 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120011956 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103595138 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12109939 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092272928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088947733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119545587 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102738939 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128548458 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093477417 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128289387 seconds)
  done (took 5.769980875 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.119122788 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.160851697 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.087738065 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117675669 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089023092 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155722522 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.122308795 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117625058 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088430197 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142624343 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.11344112 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118840121 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088467213 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.117410996 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088187717 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.088266087 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140955451 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.140478693 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117755078 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.147659026 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.131732117 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149835697 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.151948253 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.110936226 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159228647 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152228029 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.107987212 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153950323 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.113994849 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117103438 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.11690965 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.148447714 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087517107 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.116987337 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.157568652 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.12257109 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.144662406 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157687589 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.118133575 seconds)
  done (took 6.012127282 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098981242 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101852054 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137651395 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18152572 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124929384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126196701 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098494957 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13573254 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104436078 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11792712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090277481 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1474282 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106442581 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126346154 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.08884672 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.101912829 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137700457 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09023485 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122855431 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107111212 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135797647 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100736411 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130718732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098200597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118593142 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096540746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120993986 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.102789508 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123253122 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.094877619 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121917211 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092319026 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091172321 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129431555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091776194 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125176735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110378137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125939197 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096711455 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119859696 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099919923 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122552067 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109786678 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156759864 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088139603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1249441 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095630173 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1257998 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087189002 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135776356 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098895148 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088607874 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132422435 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.087756765 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.116311263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102995038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119727095 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091016346 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12607717 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095363944 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137602826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092960332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132310352 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089364838 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093505058 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118130828 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08788793 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12273483 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109315587 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121323953 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.12734075 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118182864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094915048 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126191904 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093311316 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128909404 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088243801 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131078709 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097991068 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092266036 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127620987 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091764343 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121901051 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105327049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132369975 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095314561 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123561346 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093669018 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121209628 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.08923261 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131656967 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090469262 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121969539 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104280267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.08936714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120951288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094784577 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12238528 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08677768 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130831794 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092879455 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117987127 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097597448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118736669 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091979835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09730697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121586808 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088082568 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123077609 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094034638 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117409746 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091547994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121641038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09039954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10050506 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125401948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090760781 seconds)
  done (took 14.102591818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234408601 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212816016 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188476838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296311481 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.108587209 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145727183 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209955641 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.170966114 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088232191 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157726364 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174708335 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185124103 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174243296 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183746301 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170206262 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089117421 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137648198 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.138256157 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212828525 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292958974 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.138836524 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102286907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159454833 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159372461 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106350925 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135505185 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144790803 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109751927 seconds)
  done (took 5.778311858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107882718 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154187999 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095956477 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144768509 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144665224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089729389 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093961487 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120217563 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101309996 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133534636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090868007 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1260026 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.093821246 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128010784 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088409556 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128072223 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.098352317 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129044147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.090844567 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.12325768 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102509853 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136569069 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093048329 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121184999 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104650494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122040632 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089270722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14000299 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127192091 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1134767 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115965963 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097790701 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102625593 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119648666 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.090798537 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122054535 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.090064011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121054931 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.090526621 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086263326 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118577904 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080610511 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121370468 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102958125 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125989872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086258602 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124326879 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093432597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125295295 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086103832 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091433773 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122128488 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.093325152 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131284818 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091922888 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126315918 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092030132 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090991035 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.127812266 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091378966 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11743211 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089507564 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125153676 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092549652 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127901112 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09450607 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121299441 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.090529268 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093272663 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126190397 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091797529 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129659725 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085689033 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.120413824 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098162258 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127608647 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092531746 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.090637274 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12293822 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088268075 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108075622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08764985 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076166203 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123976717 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087999736 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121175203 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090842653 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123748818 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104427114 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128208367 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.095570614 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120196518 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.090493265 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123088514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086341408 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09252665 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136302369 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138528649 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08722611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085728408 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134451311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090088734 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118208718 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080986031 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129294351 seconds)
  done (took 12.54112915 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13231396 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169632822 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120664354 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.107488017 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154288762 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.13027279 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127853361 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096297094 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.120270154 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107310722 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123305287 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097604605 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092112199 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132856277 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161440921 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098338454 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120093254 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103253699 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125083671 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.141724756 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13969487 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.158094756 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.127933085 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124034816 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094939937 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156116842 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16504505 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102598035 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132609543 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.129027384 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133424255 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163354085 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.130432673 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125183917 seconds)
  done (took 5.506737725 seconds)
done (took 50.840491398 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.250491923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.450971375 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.21779575 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.220908912 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.284078668 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.253747687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.222023671 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.224795414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.009174528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.223933352 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.221073009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.220780652 seconds)
done (took 27.952184156 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.307163426 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.381661783 seconds)
    (2/2) benchmarking "String"...
    done (took 1.557198898 seconds)
  done (took 4.086725609 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.223985336 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.22277151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462878904 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.22547244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.240033757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.23666013 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.233646056 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.229014631 seconds)
  done (took 16.000896447 seconds)
done (took 25.766998462 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296842461 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.420779752 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.496858429 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.234883039 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.236539071 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.23052694 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.219691215 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.268980265 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.230846516 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.220103067 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.220237862 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.507688599 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.236996553 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.601249566 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.230210082 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.235819645 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.236970924 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.445941094 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.232496962 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.207239777 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222295834 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.206883282 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.24430958 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.241572361 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.232417335 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.235027635 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248351175 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.229674448 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.412074378 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.234804303 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.261686862 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.223295122 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.254143221 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.234266741 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330374544 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.254062349 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.404019632 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.232587394 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.216056717 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.224768591 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.400506859 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.638034063 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.222407866 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.222142449 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.227622 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.296073234 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.213160057 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.949140285 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.227947156 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.222334 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.232361089 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.613794881 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.227938576 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.236468232 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.23313867 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.464751608 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.253005622 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.249743098 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.256134864 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.237259115 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.225617271 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.222153551 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.232263423 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.223251641 seconds)
  done (took 144.83154499 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.226157082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.228797311 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.230357639 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246888086 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.227376106 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.228705209 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.226092391 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.225565277 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.229510324 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.260746677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.229231905 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.233335179 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.23341643 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.186158694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.230723465 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.2527304 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.231078088 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.224766999 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225846014 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.231642416 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.25042094 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.224716255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.241217195 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.225046454 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.228642279 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308829997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.265496813 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.236893649 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.230485629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.227164225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.271331913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.239129639 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86789552 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.077218012 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.236207891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.252564244 seconds)
  done (took 81.144490463 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228132272 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.226005918 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229301063 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261839707 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.228391532 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.82733625 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808909139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.94091355 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.594168985 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.665157936 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509310219 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.226932733 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324669259 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.240034917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.226524319 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.244645766 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256231438 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233974833 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.229994789 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830101585 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.244783723 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.330708299 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403231659 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.241333125 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263095858 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.630079306 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227306023 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263456116 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.566684942 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.278559236 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227403208 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614549384 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.569633673 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342575288 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22873389 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264959767 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.227716466 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.513122654 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22708063 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23272832 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.231480108 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234611258 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948379726 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.231990535 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831590082 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232983308 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193294265 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.228215664 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233152899 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.512677511 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.998563345 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.232649779 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232732952 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.233180596 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230930526 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.234328197 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.265240357 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.442664668 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330334304 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.234994241 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.237244917 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266229703 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.233484839 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.466378606 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229400227 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.227811353 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286479876 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.345636483 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833975681 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235812091 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233010058 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33170924 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350236767 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.229877591 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233312011 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23296766 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232831766 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.346442388 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.230303597 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.66528384 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.408983103 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.245766989 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.676302564 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.336068053 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.229342962 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.234919906 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640458845 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.23625949 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.232847492 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.996975742 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329644416 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.229901845 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.234607019 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233910852 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.235208395 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.665158308 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812759382 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50297084 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.239605801 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.785100472 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.239953596 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.673858037 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803003968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908355815 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.232573041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348780292 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.411260035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.248114276 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233869048 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.680781369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237097388 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.297339598 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.233381769 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.634834277 seconds)
  done (took 369.845504713 seconds)
done (took 596.971725198 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885884984 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.880761785 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98940396 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868413458 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.835417035 seconds)
  done (took 10.620703428 seconds)
done (took 11.780352916 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428223238 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.924170517 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296725842 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.427919964 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266216537 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444951938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407933759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.253766309 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342477373 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.318026561 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341171196 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287493876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.271960981 seconds)
  done (took 19.170642584 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.577809 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.234358506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297900568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567767102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273098405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570659931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44513455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267568601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435912186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250144705 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251717034 seconds)
  done (took 18.335025781 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.58112104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.235285045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300978114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614965405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27551987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57154707 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443760138 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266920538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441739619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249158435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249675526 seconds)
  done (took 18.393285702 seconds)
done (took 57.060606071 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.279797504 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407485177 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.262521078 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.24900434 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.246663982 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.249343437 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.250880493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.247780987 seconds)
  done (took 11.356467045 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.243290091 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241222386 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.243734887 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245498557 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.246566136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.246209819 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245626458 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.24296436 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.244195483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.243214984 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246884252 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.246075301 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.24604323 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.241778104 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244668464 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244935001 seconds)
  done (took 21.077536335 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.246390056 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24330754 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.246171528 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.245126975 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.245436484 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.244709868 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.246482833 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.244799948 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.244808984 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.245117518 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244711971 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.243337454 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.246467585 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245042222 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.246395055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.246634526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.246364475 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.247968496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250050037 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.245039827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.247371653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.245375613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.243399138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.247311854 seconds)
  done (took 31.065305415 seconds)
done (took 64.66198813 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.241998334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.244018767 seconds)
  done (took 5.651658075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.306183757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.307825483 seconds)
  done (took 3.781833772 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.250520229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.249085604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.24783695 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.248029933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24626673 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.24781879 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.24731472 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.249544053 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.249446657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.249876934 seconds)
  done (took 13.650613051 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.251016445 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.250056311 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.247175047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.248651433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.250696966 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247827124 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.250956755 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249577022 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.254543704 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.247128698 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.250998449 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.24785005 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.251325271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.24802884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.250240966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.248700346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.249215231 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.247790605 seconds)
  done (took 23.659486918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.263723954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.272471176 seconds)
  done (took 3.704601861 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.379167402 seconds)
    (2/7) benchmarking "second"...
    done (took 1.290078077 seconds)
    (3/7) benchmarking "month"...
    done (took 1.360095694 seconds)
    (4/7) benchmarking "year"...
    done (took 1.348047491 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.290931963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.269870848 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.290645532 seconds)
  done (took 10.397260853 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.253529147 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.44710932 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552150915 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823158457 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.254183588 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255309522 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.127889293 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.256939739 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.260600034 seconds)
  done (took 14.399133131 seconds)
done (took 76.41000144 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.245274229 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.261926003 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.253405645 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.260994916 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.588306732 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.277616205 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.25001212 seconds)
done (took 16.307527052 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.242655742 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234923761 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.240423583 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244908251 seconds)
  done (took 10.132175937 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.254015866 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565636025 seconds)
  done (took 4.988673299 seconds)
done (took 16.292163556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253701041 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.254281769 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.252613196 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.256513554 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.254187416 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.251674107 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.25221816 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.251318057 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.252102827 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.254558949 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.256738538 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.256988583 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.258403942 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255687769 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255602269 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255055536 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.257395565 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25505658 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.253542851 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251831317 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252349987 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257874416 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.254520054 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.256508717 seconds)
  done (took 31.280438427 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.259376301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.256212686 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.258273413 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.260534907 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.255675027 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25481136 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.254046625 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.253180764 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.25436427 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.25907167 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252321967 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.252167986 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.259462234 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.253372272 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256651152 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.255312122 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.260439337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256899051 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258583956 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.255414649 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.259174997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25507608 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.254211027 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257953392 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.254336801 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254089735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.260069135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254654891 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256848032 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.255335827 seconds)
  done (took 38.859447474 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.261280954 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271084448 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.25829925 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.256836122 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.258119961 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.256913646 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2581093 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.256978916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.257563941 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.257068382 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.257406369 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.256622829 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.259105709 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.257013716 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.256329992 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.256751066 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.25448197 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.255202054 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.253948597 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.255557987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.256988249 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.25722632 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.256932608 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.257036095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.255969018 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.255521059 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.255801524 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25671159 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.257933851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.257916192 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257133059 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.257432538 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.256626323 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.256215519 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.256844991 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.25912277 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.262350651 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.267946114 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.257416156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.257042039 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.256760373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.258062889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.257746731 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254956306 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.256196019 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255844639 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.255879503 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.258298557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.257184349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.255559649 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25767956 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.256033444 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.258589647 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.257639412 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.259385687 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.260903352 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260745772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.260377786 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.259396726 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.259604192 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.259283386 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.259050424 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.259489192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.259256674 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.262021639 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.261478844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.259403646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.260562451 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.259454937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258675696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.259359942 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.26187734 seconds)
  done (took 91.762659982 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.261451258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257996961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255890918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257036738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255397874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260617923 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258672401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258129442 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257777738 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262076905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261435037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258358016 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256822472 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261530506 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261259248 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.258216194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259937854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258820023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.260395486 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261040756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257611453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256554609 seconds)
  done (took 28.87458275 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260461333 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260995168 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.258597198 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262082765 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260497372 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264370047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261167447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263773461 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261843204 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25738625 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259874532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262881752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26186782 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259531502 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257044951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259438908 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261055031 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259128999 seconds)
  done (took 23.870299559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.260054095 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25829719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.257243746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257051933 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.257004 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262837405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260330928 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.264315143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.263174332 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.261120428 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262245499 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260097474 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.259971321 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260679494 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260756327 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25794093 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.260322634 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259256449 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262705274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259336819 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256675613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260184504 seconds)
  done (took 28.901767882 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26332887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261150762 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258009154 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259151793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259836841 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259635523 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.26135734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.259235992 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.261657918 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260556517 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258583398 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26208259 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.261624704 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258704691 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.258991225 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258989918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261881107 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261109445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26060813 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258683887 seconds)
  done (took 26.386512563 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265019287 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262163155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263327914 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264515189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263130703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264846861 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266369718 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263986664 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264608402 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265415649 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266576604 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265346756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26525648 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265991262 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266075123 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264501559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263630759 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264618744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265164188 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263929969 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265817394 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264644806 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265170884 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263174431 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267346513 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264808194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262854423 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263770769 seconds)
  done (took 36.594944885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267370249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264046438 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261027698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263504984 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.260785919 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.262646626 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.262764649 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.26283786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263630272 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263050563 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266158306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.268749826 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266925858 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.267374586 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266698454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.269110733 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268138313 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.263364874 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265498835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264547968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.268089643 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268368045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.266937406 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265280367 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264329683 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266201649 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264107308 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263468922 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264230623 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265873284 seconds)
  done (took 39.141734899 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.31300396 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310167628 seconds)
  done (took 3.809149001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.266351507 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268026689 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.266489437 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267124352 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265825835 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267674961 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271449636 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266090673 seconds)
  done (took 11.325457045 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.270423065 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.268475882 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.267059869 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.268311803 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.270429137 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.268679471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275842701 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.290154415 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270629789 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.272993775 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.277938617 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.279639685 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.273166836 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270637154 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.270289442 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272130448 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270944976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.267837742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.268938249 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.269040855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266982275 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270134608 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273852979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.269516517 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271963171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281012487 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.275126189 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.272231966 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269837243 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.275441148 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.271746924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.267531539 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270367668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.271877408 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.272320771 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.268746706 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277594661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291389428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.274340215 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269334517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272293574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.266836199 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.269060337 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.272124914 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273640415 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.272110922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.273174863 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.267375516 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.268864243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273095661 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.281156113 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269760192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.269189245 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272846219 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.276319081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280737995 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.29283328 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.278615768 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.286183179 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.28631328 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.285920802 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285536459 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278355806 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274619806 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285671607 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.301694658 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280807046 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289084598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.268053391 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271536634 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.278764416 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288142492 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.300954369 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.272559791 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273119376 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.274225463 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272822786 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277103514 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280305209 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.299061902 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.278497356 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278764024 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289049353 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304761397 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.277719881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.277692291 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275709641 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.276428396 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.277446218 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286200537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.294576148 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.275338864 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270151864 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.275486538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272144626 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.275876155 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.275305731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.274095759 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.271441203 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.273169619 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27316184 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280608129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.287779448 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276042091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277588437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.280993257 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277152484 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27776457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.284508912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.275049778 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275638568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.280527999 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.286347947 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.275073974 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279028314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287207352 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27707786 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.281727046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.280086295 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.280782919 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289629252 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306856879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.280225303 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.275157104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.281390126 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293621988 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2782137 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281940823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.280330263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.276344934 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.277244594 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.282082716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.281974963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277430821 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281392326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277581332 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.276279102 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278563377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278617103 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278784438 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.278793296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.278352669 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.278961782 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.283223952 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279468962 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.279454038 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.287088495 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276832983 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278526281 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.282572546 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.273514562 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277897479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.28061841 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278312919 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.277783739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277832046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.278493329 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.282293944 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285579277 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.280100785 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282109121 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.280937326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285802493 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.284619015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.28671263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.281539293 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.283189861 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.278243503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.280765629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.278821868 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.284495231 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.278500361 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.28740675 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.290812622 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.284182574 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.281591351 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.285300327 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285152109 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282632804 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283529376 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28426037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.28952714 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.282536089 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289783822 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.284065909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284852858 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.284460314 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281916424 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.283025302 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28615144 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.286091518 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.294722353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296975172 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30986486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285957227 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.290388043 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.286174567 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.29040044 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.288391246 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.284763133 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.286364292 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283640837 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285507365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287202231 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2863063 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.285460571 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.284503962 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.284778628 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.284443866 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.286064301 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285727215 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.284473593 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284090894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.282452736 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280497922 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281205416 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284940047 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284356086 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.283550227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.286801071 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.287010879 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281024575 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.289120892 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.279550074 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283024075 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286292809 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.285909413 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282457188 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.282216761 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283959491 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.283438824 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290606829 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.30167327 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.284485398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291953978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.301015068 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.284073443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287279516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288630052 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.281727085 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.288037516 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297038078 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.287416227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.28615823 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.288649291 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287350574 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286427574 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.289299601 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281288575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.284018662 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.288955159 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.286577798 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.285780091 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.286583721 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.287949732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.286983062 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289385677 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289089263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.286919014 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285268986 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.288184609 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.288193834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.288851107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291131126 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.298896448 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.292710467 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.289315034 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.289908239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.288797623 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294907991 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28820754 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.287874265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.289739887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301039979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.313722998 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294992739 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288037877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.290010543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293205847 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.290896238 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.293423488 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290793391 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290442047 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.289346876 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.289464133 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.287062031 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290254342 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.290122716 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290521416 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.292319483 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.296499531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.290776624 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.287856023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.287235031 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.292279491 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.292295715 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.286395701 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.292700561 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.289741542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292466513 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.289120232 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.289324848 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.295321947 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310172286 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.291601827 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.29127711 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.290309173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.292256015 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293436015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.292474204 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.295997367 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.300966765 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294135466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.301504795 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.294269333 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300194224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292261106 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.297120248 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.299407521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.29165191 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.289162013 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.292888197 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.291209779 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297415942 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.31112834 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.292952686 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.297505471 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295030614 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.295194497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.293378634 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.291084716 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295797518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.292140961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299304964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.311195531 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.300127302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295488682 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.289471743 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.294901605 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.29551195 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.295906838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298044134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.294532718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.297484207 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295666374 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296021155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.29508866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.293859779 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.297502952 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.292529865 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.2963369 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298492101 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314457581 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298963057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.295730933 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.301090016 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294457994 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302978005 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.313468313 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.294996541 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.291387642 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.296269239 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.295242374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295406409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295838764 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.294041468 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295174053 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.30137361 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.297863376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.299724472 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.296294616 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.297546719 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.29742337 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307680738 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325634979 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.298292097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303647478 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.294139512 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.298835163 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.302129292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.298208245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.295050214 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.298790245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307700894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307000367 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.294821214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.298168271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295574594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296097882 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.297620634 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.297811149 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.296241135 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.301126749 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.297269611 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298015711 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301777218 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.298267126 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296569948 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297354836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.296823036 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.308577904 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.295964228 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.298673584 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296952324 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.30172236 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.297204531 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.29758759 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.298276334 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300401072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29611014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.29844947 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306920284 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.308704478 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302243978 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.300053181 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.300181216 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.300208927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.302582232 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304782989 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.301424372 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303473041 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.302232092 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.301188558 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.301957813 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.299215597 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.301878727 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297703192 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300772007 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302166537 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.310052742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302673299 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.299132378 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.297248775 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299683509 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.296378286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300671988 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.308618717 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300110214 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.311920075 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.311256567 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.304897494 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.302501176 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304612005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.309438433 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.300581447 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.298878946 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298694852 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.29834761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.300407657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.302927999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301444424 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.306241086 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29740587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300641719 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.309711709 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.322765627 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.304307762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.304799256 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.308158307 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.302070314 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.299118439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.299445667 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.297411784 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308456883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.320486946 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.302425325 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306267277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.302582773 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.303591267 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307363832 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303804144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.300179159 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.300349 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.301820808 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304202695 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304307785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.29948693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.302313114 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302083173 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307167132 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.312032361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.301301497 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303962116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.30514766 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.303511625 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3041762 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304534457 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.297306643 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.298289941 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.300274324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304254836 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.30366592 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.30604258 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.302887223 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.304398165 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.306299287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301650675 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308097079 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.316202509 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.313614526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.299602001 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301414026 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.304089515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.302950646 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305028175 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.305353989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304347042 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.305297802 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.303869768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302621594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.302617261 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.304196413 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320611537 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.322672815 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30123936 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305185191 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305167143 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.306662303 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.302501349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.304977996 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.30327795 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.307695412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314071205 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.306759992 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311952314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.320154822 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.30396887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.308631576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.305457389 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313399086 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.307584118 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306833889 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.306251138 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.309423839 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.323622316 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307786682 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316644629 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338384017 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.322378662 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.304994232 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.304042189 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305266865 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.30658337 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307565018 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.305961592 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.307378866 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30493308 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.302783565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.306695799 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310778769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.30976857 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.309550184 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.304796459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.30413669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.308975361 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.306078821 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.304935478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.307350935 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.308098494 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.304668015 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.308403407 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.307012606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318581265 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.330741042 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.305706203 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.304669784 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.304198761 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.309114425 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.312246695 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319987573 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.317720732 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.306427015 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.310129286 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.311764738 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308852753 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.309068555 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30844058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308049269 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.309853364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.307710157 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.321250044 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319582975 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.313127439 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.309880773 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309586301 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.312366583 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308690044 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309009633 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311282059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.3092898 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.309725836 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312409405 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.30832367 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.307284123 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.310180374 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.316636862 seconds)
  done (took 771.676566877 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304814724 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303890758 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300853484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301302023 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301976053 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301247514 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301357389 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301598808 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300722575 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302694858 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302279217 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302144937 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302045417 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304076147 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303662653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.302965678 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302150546 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302747332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302436142 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303905918 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303839332 seconds)
  done (took 28.573549248 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.30967745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.303372994 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302577283 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305826317 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304803853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.305638929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.303587789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305643634 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306669174 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306317425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308561287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308439665 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.306990016 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.305687298 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306826192 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309760823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308225064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304974757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.309592185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305242954 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309248249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.305239684 seconds)
  done (took 29.962411091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.30945676 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.310708094 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.30707304 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.306777439 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.309274477 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.305078276 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.309472389 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.309335298 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.30892509 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.306611109 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.307061962 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.309033789 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.315168554 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.312942565 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.309247636 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.309076906 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.304940263 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.307386686 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.307358832 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.302659502 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.309503178 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.301136971 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.302650284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.304825107 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.306915791 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.309152239 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.308949575 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307849373 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.309627583 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.31444236 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.310389888 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.308146431 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.313542469 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.308505847 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.309829376 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.316356868 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309585703 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.308954729 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.309688413 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.319238463 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.33499647 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.311242771 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315855788 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.310114608 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.310643765 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313784972 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.320133907 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.307506026 seconds)
  done (took 64.102507232 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.309595277 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.309462831 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.30592953 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.308726733 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.313622661 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.310952984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310221635 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309505005 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.303953102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.304220157 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.31102205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.306857157 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306518493 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.310063597 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.30976157 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.307236252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.307528654 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309109041 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.309101831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.308678621 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.31002535 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.310877943 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.310911137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.307317684 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311515018 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308181384 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308094604 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310549415 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30770694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.309234755 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311670784 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311230985 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311791903 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.309476282 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308449059 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.312457202 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.309360219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.307450495 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.307106549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.307544672 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311193917 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310722259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.310047958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.308568528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308799994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.308487824 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.309500905 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308207224 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.311330578 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.309931712 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.314331637 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.310076005 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313668343 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.310864917 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.311974922 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313724066 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311143175 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.311977943 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.31400982 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.311783376 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.309944352 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.31366348 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.311441523 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314510368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.31285321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.311109297 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312603108 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313074682 seconds)
  done (took 90.305283538 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313916828 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.313685605 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315722571 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314283383 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314039903 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.313356713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314241121 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.313982888 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314031568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314616705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314023261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.312373381 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.31021757 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312810292 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.312933859 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313445247 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313622222 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313204922 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314291763 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313563618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.314648239 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.315724735 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316165579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.314019171 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315131918 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31506658 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315103326 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.315908017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316112638 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315627501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314765239 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.314980916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315127468 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315126263 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.316053689 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.316374527 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315811433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316241494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.314833677 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314956576 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.313230278 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315476499 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315693288 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315431375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3165444 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316211421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.317334339 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.317028403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317241324 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315381164 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.317337223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316159102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31753844 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318753084 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316459249 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.319224773 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317291057 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320781635 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317386043 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.316528191 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317819522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.317223854 seconds)
  done (took 82.779767183 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317033148 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317585125 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313537413 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.31405878 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316546183 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.315154313 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317670314 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.317908788 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317112407 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.318928615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320580617 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316730246 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31732617 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320027269 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316972025 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317898777 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315228714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316950557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31713952 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316962972 seconds)
  done (took 27.569355298 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.315978596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319810447 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.316508548 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316450368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.321185709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.315650908 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.317137511 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315765518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313469486 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316555501 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318664316 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319427469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315946095 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315573438 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316800823 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314261494 seconds)
  done (took 22.298107155 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.315600313 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.315119961 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313889408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.316625289 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.31429709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.314368906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.317726596 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.313087891 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.315243979 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320831779 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319554228 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.317051666 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.319006171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.318984034 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.316906197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.31595937 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.314763344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.318380601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.31972999 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.318859075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.317658174 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.314222492 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.319844732 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.319703645 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.315840036 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.318279136 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.317155764 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.317579293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.316980606 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.318803772 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.31511467 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.317262478 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.316022822 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31633382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.318510315 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.317526333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.318667399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.319204721 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.31860837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.319509969 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.319631298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.315913822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316377573 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.315908697 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315620978 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.318578511 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.317946086 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314169404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.317055172 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.317470812 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.319826152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.319479899 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.320399069 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.317843915 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.319083311 seconds)
  done (took 73.685060066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320398313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319169162 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316904309 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.32014435 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.320982323 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.314139727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318546792 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31628568 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317826484 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316566864 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317331204 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320435903 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317627447 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.321794064 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317903577 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32230454 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316744596 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317754064 seconds)
  done (took 24.964515545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31909777 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317777976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318593575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.31898121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.315187836 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31709935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312927166 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.317186688 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31736014 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314014955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314468852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.319314054 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319349522 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.321738348 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31982317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319434938 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.321555658 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320660974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321529899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318070253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.32171311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319571883 seconds)
  done (took 30.235217862 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.319701527 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.317580592 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.317361968 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.33823399 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.339439817 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.318207446 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.318955834 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.317893601 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.343061636 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.374896199 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.371356816 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.341073814 seconds)
  done (took 17.247253811 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318280443 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319275849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317946727 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321390581 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321924057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320714372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318850789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318698741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318702476 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317808293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317601989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320497381 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319784606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318396303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318547264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317489102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318111445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318579646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315152893 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319064987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31589993 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318021962 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317156285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319359678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31551261 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31607166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319228525 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318644663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319013183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321047626 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321505326 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320176688 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32217735 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320075261 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322877104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324349032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319888323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322090751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322094096 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31938227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322386645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323415888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32090637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318755116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322554761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320515505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322354591 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320558605 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320813179 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323346644 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322986864 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31970364 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320909305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321736691 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322190883 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322707211 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319522964 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319486108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318748924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320000201 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320655784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32300294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320875931 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320089287 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323408391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317052353 seconds)
  done (took 88.350816639 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321183351 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320385032 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319826907 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321375744 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320763774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321299374 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321791167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32065005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323115353 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323471398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325656804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321858639 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318289919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319385695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320690804 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320195208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320129285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319324096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323467901 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325780319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3226743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323027795 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322189513 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3204129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320555978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323661772 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322450999 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32197269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321620594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323797473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324698716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321638901 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322489927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323317811 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321283066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322666791 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324090673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320587958 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325599012 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321453893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32363476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319101767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322343429 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323897546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323011972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318569915 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321233131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320581625 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321270939 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321724174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321432497 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322716978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320827843 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321457115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321648054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319329708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318044975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320661988 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326608444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320135816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320512275 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324581952 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321010176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32109736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320556169 seconds)
  done (took 88.475137128 seconds)
done (took 1802.201792817 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.483863917 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436817568 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321693923 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.324259511 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314910671 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.345271716 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.32684533 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.31615631 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.321577557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320324422 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320364302 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506269727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.315698359 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316212347 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.321103606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.4160344 seconds)
  done (took 26.941618235 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.348830812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325669047 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436976471 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335026708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.348875315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504158235 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370873608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326103703 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49429436 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360029818 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.319283862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.343046283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326800442 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.316916333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341005142 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.503746289 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.56207344 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.312317434 seconds)
  done (took 29.107712187 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.760257603 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.31230965 seconds)
  done (took 5.302798908 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340273427 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324121935 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322574053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317647025 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31225849 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.310818773 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.320626533 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.319869131 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.31120149 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444783901 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320744639 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331836188 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336965147 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32074971 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319211831 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355853998 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.493405352 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318732971 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315699841 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323786624 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318413893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.419521338 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356304114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315066865 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.441810407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.31842061 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325066474 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326471722 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456488961 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318269233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318702226 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323763876 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324100852 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.196728514 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.823250747 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.315413889 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340887316 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.327746779 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.320037161 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463455199 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.317535962 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.32882042 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316561419 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.814628486 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457264157 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433949358 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.329414787 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323750091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324524552 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.38397502 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319965067 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31908499 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.36510457 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.083394482 seconds)
  done (took 84.462336375 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.323090525 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.313068816 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489298613 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.335173936 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310519958 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315446007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312359585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.585407025 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.316307853 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323274545 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630786393 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842712037 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333511007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.354170253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.151885584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.373446049 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310658539 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307537314 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.323602253 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.311766527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846028895 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310291174 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307907757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.56271382 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347399767 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788222841 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.308535495 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.318915088 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316202387 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.307683086 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798713694 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.340805842 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.375449193 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.312517808 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.567749564 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662661868 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630682264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.313949835 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334472208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.311004265 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.330820359 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793123159 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646587027 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.310715473 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330189109 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795388557 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314011678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.323787098 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.32566984 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55999706 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315716728 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314957016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.308795404 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.317230645 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.31349365 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.382200221 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.412145981 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793252053 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309326459 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.311607054 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.336952135 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316312741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319545003 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317409762 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.311465948 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652041681 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479208794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315670648 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653282882 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.791869743 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.329003281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867596035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.329487165 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.345259104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.32766361 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321890543 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309527475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792583814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318256339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309913094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.636946339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314779443 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.625059693 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.323470645 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339072189 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851539574 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.322956342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.323596317 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317080961 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.311532792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31139563 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314919279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.571494524 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.391229029 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317345916 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.316825822 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.32049939 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318202503 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312663636 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325888227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871496722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.334533475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.316519382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315334014 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318107607 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312898826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.318291514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319579363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578075946 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.317983286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.314961276 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31896681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.312191313 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.322094484 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.552781043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.318558092 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603831922 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316243239 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313653205 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316349292 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317678649 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.369785727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313125941 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.32142902 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.219364738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.617796861 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.330875081 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.314138212 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319589495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320294236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313909687 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320077428 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.34404588 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.320918416 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043887632 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35458525 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.34481005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.317316845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318775959 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319263078 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331049318 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322623351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606207843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.577011882 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.475861218 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317903635 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317536606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027947648 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375891332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493725227 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340300817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314608715 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566683684 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519347724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.318513081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314985119 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.318010832 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576472694 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320518939 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611445587 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8243184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33579492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325279464 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057089527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.042946042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.316462331 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.32853079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6319322 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.334639303 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.32055194 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320552399 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317404752 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.317470803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326756885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.318190186 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.320254372 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.321738205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449241394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508708051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.337637053 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319786976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795502417 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.40987075 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317885304 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324744348 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.316415941 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318358308 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410919238 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.319439186 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.326171833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324691892 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330683155 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865117217 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.323389611 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.322849678 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509870239 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976841355 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.336948257 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.322687583 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.32240462 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.200871017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819424923 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.34878821 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.611476899 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.326839889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355858263 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331484917 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.384349013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821101549 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328582871 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322881136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950487784 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.338335336 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.847663977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.319170808 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322853705 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891962671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338055756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322037335 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317535589 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332853432 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613597327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.32460004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352936154 seconds)
  done (took 493.840182126 seconds)
done (took 640.886137858 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32297297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32609303 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.31269997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325849907 seconds)
  done (took 10.526144581 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335011204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332399644 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.333368977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330196489 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334029489 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333164899 seconds)
  done (took 9.237888888 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324202068 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327106333 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.326101316 seconds)
  done (took 8.21661895 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.530787542 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354306722 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.645849502 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339699557 seconds)
  done (took 9.111074985 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.33311143 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.33349405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.333870813 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334721488 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337156798 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337732422 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334423395 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.334710113 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337754081 seconds)
  done (took 13.255861745 seconds)
done (took 51.586742055 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182351013 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.325544242 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.310500998 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203239193 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.718916608 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.04830583 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.937131642 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.943267671 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.321712091 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.323492942 seconds)
    (11/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.310402991 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.563062367 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.351630733 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362993232 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.314079272 seconds)
    (16/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.409885852 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.359159559 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.880085942 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.432398977 seconds)
    (20/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.323295195 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.309798418 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.315221051 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194241401 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.310333563 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318794595 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.109596393 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339449572 seconds)
    (28/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.836132706 seconds)
    (29/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.411968383 seconds)
    (30/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.51109893 seconds)
    (31/286) benchmarking ("sort", Float32, true)...
    done (took 2.325664198 seconds)
    (32/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.325357095 seconds)
    (33/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033484788 seconds)
    (34/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.050264644 seconds)
    (35/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.309855758 seconds)
    (36/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.402084618 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 2.328882184 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.310886703 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.46907601 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.316232668 seconds)
    (41/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.766450233 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.309899241 seconds)
    (43/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.92213665 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.335233939 seconds)
    (45/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122460398 seconds)
    (46/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.351930476 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.315664424 seconds)
    (48/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374598823 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.326474397 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440129274 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.323241331 seconds)
    (52/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.311367658 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.641629622 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.32792365 seconds)
    (55/286) benchmarking ("sort", Float64, false)...
    done (took 2.325515522 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.208431172 seconds)
    (57/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139455058 seconds)
    (58/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.313722901 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.337200731 seconds)
    (60/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.317810265 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.346834735 seconds)
    (62/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.344724692 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.311970461 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384191103 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.317768328 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410373135 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.33961024 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.539691024 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.324999055 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.274961434 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.188112228 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.042842602 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447497669 seconds)
    (74/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.318936856 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.173893388 seconds)
    (76/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.332963104 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.317951536 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.328593185 seconds)
    (79/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391992724 seconds)
    (80/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.141537544 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411589592 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.320048057 seconds)
    (83/286) benchmarking ("sort", Int8, true)...
    done (took 2.325965166 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351312362 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.333091973 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 2.326373329 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.672813669 seconds)
    (88/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.452355122 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.318906803 seconds)
    (90/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361835454 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.727463415 seconds)
    (92/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.352649722 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.169990286 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.705425884 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438190332 seconds)
    (96/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466276046 seconds)
    (97/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.51559355 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43177138 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359779965 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.546013973 seconds)
    (101/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.326551751 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.325582299 seconds)
    (103/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.339039591 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.437931508 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433463426 seconds)
    (106/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.459912613 seconds)
    (107/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.32623539 seconds)
    (108/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.327594844 seconds)
    (109/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.451750234 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.339324386 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.356436991 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.330522413 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.315811342 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.858127777 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353195995 seconds)
    (116/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.266793432 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.34022188 seconds)
    (118/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.370759451 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.613552165 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.419910221 seconds)
    (121/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.334621595 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.316663303 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.339036315 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363965439 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.049127028 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587458985 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.32108058 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.960258112 seconds)
    (129/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.316807521 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.46691474 seconds)
    (131/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.360315991 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.322789365 seconds)
    (133/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.327953742 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.331936141 seconds)
    (135/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.318208299 seconds)
    (136/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.46848323 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.36107927 seconds)
    (138/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.333635414 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731460455 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070834555 seconds)
    (141/286) benchmarking ("sort", Float32, false)...
    done (took 2.336351633 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357521164 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.580479418 seconds)
    (144/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.328567491 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363485065 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.680583409 seconds)
    (147/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.708733681 seconds)
    (148/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.339314124 seconds)
    (149/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.142431166 seconds)
    (150/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.335565311 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.337275882 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354152668 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.33107335 seconds)
    (154/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.318285758 seconds)
    (155/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.131494457 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.358377594 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.324061233 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.549331184 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171728199 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079441904 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.333876762 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.337273277 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.321897117 seconds)
    (164/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.479103104 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.335891268 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.216045814 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355743795 seconds)
    (168/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.917692569 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167607178 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.330818266 seconds)
    (171/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.349479265 seconds)
    (172/286) benchmarking ("sort", Float64, true)...
    done (took 2.332469925 seconds)
    (173/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362901782 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450800987 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.884731614 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.342511987 seconds)
    (177/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.33001703 seconds)
    (178/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318764277 seconds)
    (179/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.424809208 seconds)
    (180/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349544049 seconds)
    (181/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.366057996 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.347225991 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.371252184 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.603827116 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.341316517 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.3761956 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.36607455 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425054026 seconds)
    (189/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.690950947 seconds)
    (190/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36771747 seconds)
    (191/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.331918861 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 2.335103076 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.326381768 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392573985 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.362600874 seconds)
    (196/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404760931 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 2.339209549 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.349819583 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360067744 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.338923485 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.554931607 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.335202743 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.335434839 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.328772562 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.762222988 seconds)
    (206/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.393437258 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.732529539 seconds)
    (208/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.439162799 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.211748241 seconds)
    (210/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.380831098 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.386694306 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366788858 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.327885024 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.396845543 seconds)
    (215/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.809112269 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.330666432 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.351133647 seconds)
    (218/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.355198676 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.445825719 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.327542522 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.344413138 seconds)
    (222/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.32758216 seconds)
    (223/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.527014235 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.344946976 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.335044352 seconds)
    (226/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.34142307 seconds)
    (227/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346773213 seconds)
    (228/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543307105 seconds)
    (229/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.439785714 seconds)
    (230/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.9210488 seconds)
    (231/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.707575978 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.330556009 seconds)
    (233/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.344459412 seconds)
    (234/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.360503219 seconds)
    (235/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324567342 seconds)
    (236/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.333389917 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579432068 seconds)
    (238/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.857337203 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443295519 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.709034839 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.372229004 seconds)
    (242/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.330484481 seconds)
    (243/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.336590765 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731925495 seconds)
    (245/286) benchmarking ("sort", BigInt, true)...
    done (took 2.343899955 seconds)
    (246/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.38056426 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.438900409 seconds)
    (248/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.369634388 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.454162767 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.33720899 seconds)
    (251/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.354123967 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.344841492 seconds)
    (253/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.42953837 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.426690056 seconds)
    (255/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330914368 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.420557789 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.330446595 seconds)
    (258/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.693682333 seconds)
    (259/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.338904598 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.455663729 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.342345672 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.333150312 seconds)
    (263/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.356514324 seconds)
    (264/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.58923697 seconds)
    (265/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41049317 seconds)
    (266/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.837390662 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.336775839 seconds)
    (268/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.275513618 seconds)
    (269/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.355251117 seconds)
    (270/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.325636631 seconds)
    (271/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.345872551 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.380668357 seconds)
    (273/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.370637157 seconds)
    (274/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.327439867 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.356035865 seconds)
    (276/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327225952 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.357189302 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.339718783 seconds)
    (279/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.332590648 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363223565 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.358098694 seconds)
    (282/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.35717238 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.085690063 seconds)
    (284/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.326839541 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.333164557 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.346123815 seconds)
  done (took 566.063857575 seconds)
done (took 567.305534878 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.379422264 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37496699 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.357030928 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.377877481 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468576841 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531249856 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368594257 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.360706232 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.406439765 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40663714 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.354458177 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.531923252 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358934499 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357149032 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357916302 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372157976 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357763156 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359725235 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.374251492 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367421 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373879911 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.356902806 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408361554 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.532046006 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.361167278 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360985525 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.361876118 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.37858945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470917511 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.361690583 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360742262 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.369436073 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359433486 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358345092 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353918497 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37891835 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.369858907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369452813 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.363404558 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391120847 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.348684188 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353219972 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359918568 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360667823 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.360837175 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363878755 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359460342 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.366027182 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373679662 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375023481 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.353851774 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.367356523 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363301124 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.362147179 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371243903 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359440439 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.364620073 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378869812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378845929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381233236 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.353491573 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364859011 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.363040791 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377547141 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369212675 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349178741 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364203143 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.365370493 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353051319 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366163453 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.363756383 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370274959 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.362695712 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376097644 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393230877 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.362032495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.35764864 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.361754943 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366148212 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359590301 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372923554 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375517136 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367772088 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363910892 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377144388 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539053994 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.374488342 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.362048791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.373273898 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380262744 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369823419 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3719927 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366870923 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358559428 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372908871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.367278178 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.365005417 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365509097 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368019851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.374400366 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352438444 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383646467 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.36055366 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.360022541 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.363241491 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3772667 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351602974 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.364426256 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386076915 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410840473 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.365790023 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.357438341 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.366950339 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381902152 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373425157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.367219823 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360446837 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355616815 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35732039 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378091436 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365837591 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.362186285 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38203582 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.366962366 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361068907 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.353525324 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.38206155 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38035578 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485329934 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375279897 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396518634 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.363777814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368742065 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398338214 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383535362 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.39709218 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.369095687 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384612303 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.38180224 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.364075093 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375648212 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376970566 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368134781 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374297295 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.361431623 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.400692244 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38069021 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380216044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.387570819 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.487827839 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363916906 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358883554 seconds)
done (took 226.510091298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424560409 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.360381987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445653112 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363728078 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461025139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461587491 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361202203 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.361941552 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360502012 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739084723 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.362127156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.361681298 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.361883012 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.361896272 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.444334161 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.364499621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.361714441 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.703380955 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364662129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.433585988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362103688 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.362747734 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.364712763 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745289445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.362200867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.358453434 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441383929 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365346017 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.71072271 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.357761455 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.360987428 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.71151005 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463818234 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.383206952 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.375575515 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372669623 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463276431 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378655826 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.446583656 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.447404657 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448724244 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.404546321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.358977177 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.362248761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365804188 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.366649444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364241436 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.39161346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.363018028 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.364933406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704683874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376065259 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372692578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365084231 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365531871 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.386188982 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364607209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367808218 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.457346755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366757384 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436477625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.748905381 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.74436539 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.368004362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364289261 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364982209 seconds)
  done (took 106.506349747 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432071272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441929557 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475011658 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.368160257 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419613427 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482293219 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368126908 seconds)
  done (took 11.256273307 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.374030747 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368801474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.417461444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416622026 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.368089791 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.578441785 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368755435 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379846437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365900699 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.443711807 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.379608575 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371240878 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375278073 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366439259 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416682565 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380275748 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483625623 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374694769 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369863279 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519129684 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366043124 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376783183 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443571272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.379884555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.373939296 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37588575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.286246714 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371532016 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367673069 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369222181 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368575882 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.471520002 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371518544 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.365462753 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368206466 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528675305 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370553602 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363946134 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371787508 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.371229019 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.371837377 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370917237 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371632265 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.368402423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.371202683 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.394755704 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371806988 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.372179099 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370824217 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371577553 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.446461825 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.373874387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368491887 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367260004 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.449714896 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378464901 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372052595 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368543875 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372778671 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368994564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521663305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418761311 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.372907583 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421244806 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374113748 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374453625 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372514042 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.372129622 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464997202 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373721879 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420794978 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.370561961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.592580807 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.396908189 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37473073 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.374529827 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374531582 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3733836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.367964864 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379438655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.371002091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372525612 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381503916 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371689751 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371306794 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.557903606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.530243591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370890243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385000372 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37947451 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370939456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448765062 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.374249787 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.372428604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42483112 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489778354 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.451180083 seconds)
  done (took 141.77258468 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379571897 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38300991 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377434572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397221386 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376071693 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.375312293 seconds)
  done (took 9.563892481 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.377601357 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376852739 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.373646764 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374442406 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.37471032 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375861097 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375577868 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375664679 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37842906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.376021113 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375922802 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376408428 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.376210015 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375756309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376740116 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377034477 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376103923 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37361417 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372056785 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37427342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373357394 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375289552 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375936708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377343302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380490886 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.377200728 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384560456 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376304248 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.376696766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380830431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379632026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.378032477 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.378434686 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381865254 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.380511604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37812781 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382516526 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37885169 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375226855 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379055064 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.379804697 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377569213 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.378002115 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.378460695 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378259925 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38338667 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383747844 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387617215 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378461733 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379744643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38011868 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379124799 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.380006147 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.381436384 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.380380166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397112644 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383557373 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.378958883 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.378222135 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380739424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.381084848 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.379631322 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380501709 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382755318 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.37681404 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380039099 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.380733498 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383411029 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379344064 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379362856 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381639004 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377701065 seconds)
  done (took 101.55080552 seconds)
done (took 371.914547545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.795341753 seconds)
  done (took 4.075449713 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.461374859 seconds)
  done (took 3.742658557 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.328157246 seconds)
  done (took 21.619927757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.398889158 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.484277752 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.36714242 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.368661333 seconds)
  done (took 10.899733146 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.598507988 seconds)
  done (took 3.8808386 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.37296678 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.366142703 seconds)
  done (took 6.022283245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.675251063 seconds)
  done (took 3.955611175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.791413758 seconds)
  done (took 4.08378417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393162677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.391101347 seconds)
  done (took 6.076195385 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.360560745 seconds)
  done (took 3.641380161 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.491034307 seconds)
  done (took 16.774704032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.38557014 seconds)
  done (took 3.670205246 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.407471872 seconds)
  done (took 3.689873008 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.776804823 seconds)
  done (took 6.05971326 seconds)
done (took 99.473589377 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.375363193 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.369585769 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.369888448 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.37694473 seconds)
  done (took 10.774737807 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.415892981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.416386035 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416407049 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42701515 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.418607192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415166934 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407693606 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.407569412 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426037798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418531202 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.418301304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.418466499 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418558949 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407025142 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419217769 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418292803 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427151263 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.417182697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410078116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418691305 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384475131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.427351156 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418561309 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383473089 seconds)
  done (took 35.239554162 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.879674509 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456061907 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537148236 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437103368 seconds)
  done (took 7.593913645 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435646081 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437500274 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.45210096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.487832439 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522403128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446917009 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410624198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405336416 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392296799 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437453455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512852848 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.453557847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523392114 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.385445824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571396213 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.384560574 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385285448 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438416132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487934736 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505465578 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384743915 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436237421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.441960244 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.453686307 seconds)
  done (took 36.077542474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.384595009 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.403196518 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.383474881 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.384581521 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.391832682 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.384541665 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.385734079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.385060638 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.383880129 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390699561 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.383914703 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397411428 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385241583 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386019094 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.393322168 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386812028 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.391005263 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385079261 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.386017637 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.391950955 seconds)
  done (took 29.049526637 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.378258645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379111034 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731878216 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.634491833 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.380576023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371713841 seconds)
  done (took 14.162238101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.450852358 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.584252214 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379598516 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726268245 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808169644 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381325946 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38171577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.6218023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924058428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913191746 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.433409517 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452770547 seconds)
  done (took 20.344608739 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.379608621 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.38140516 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.392449968 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398108277 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436662683 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384499682 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.394723678 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.37950751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440823685 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436823045 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39111167 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.441423235 seconds)
  done (took 22.145429878 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469361378 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381660406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38484335 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415401693 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385023939 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587738348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411417836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096375114 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396250837 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657039306 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382115982 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473762876 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640663419 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394715068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384259265 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365404006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611495551 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879234424 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386491432 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389213029 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408719041 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389014604 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383867543 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596587585 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590453642 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384258818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.645240222 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382680784 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658518389 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399670775 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394750699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383513729 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659432895 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040075188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497576855 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58912287 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390054603 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386071182 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.384310746 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.386044829 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391115096 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387770017 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396675693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385663678 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385305634 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386459427 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103362439 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400424408 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.382404805 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38533483 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640745195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482105625 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389549849 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385002671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435292475 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38699991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390463238 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481655181 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95612672 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390927017 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390367509 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.387469967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402459317 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392085752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001615264 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394037209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388362206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388518773 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382124585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383584303 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403880504 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387216743 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406353842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383909591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071768254 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390018284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388813481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939713742 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394744305 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387879976 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614517606 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383467047 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387939483 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.385133484 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387229525 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095160814 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398290406 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.385418467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410623836 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096972252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608277526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40683681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413204929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611945526 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.374779358 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388876479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.39752677 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390444542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404138462 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104240218 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39908346 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386954905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644686404 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597299242 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392844492 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375931803 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864832559 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399904129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405501615 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385706514 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600930073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.959211963 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406230555 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398876289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409504638 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389037061 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138022342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391764456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395557338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38992321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651507295 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.167823956 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391892416 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458937432 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392648974 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391515972 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396882079 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391993162 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390955604 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.590505178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414176193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402098741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.390094386 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391977521 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.386000172 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389941497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.393294316 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615352226 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385681546 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668875383 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388158719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391232453 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384850166 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607531491 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.385204467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.413885563 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652211682 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394156141 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394658831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405150894 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409847123 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493070327 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414107074 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.389635527 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66572171 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392970043 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39251365 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39392103 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395205798 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401376909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399837655 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388614973 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967274525 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372866434 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393385527 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282537825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404390021 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460861234 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398231167 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606010218 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.393622304 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389902203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.416487816 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.389199504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610730113 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403298055 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.395821982 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474367286 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.866311586 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972448918 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408506772 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.391299234 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.387761851 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.389431642 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394908701 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394769343 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390737233 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604426326 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403445239 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398195664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974303374 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39835608 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396465592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401760687 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406190287 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397681925 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394831156 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39463434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409724924 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397088359 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422993265 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538928349 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408976568 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395400357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911880074 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402873562 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395579727 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395498138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430767314 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404270212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206252801 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64910679 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393231934 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646508016 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402329916 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413340748 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396368527 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393099972 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413781398 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.424382095 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421610264 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.405408368 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400995805 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400317949 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955751768 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121721076 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920551133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399716367 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.41267624 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398184802 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115538303 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405959702 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396471071 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623614862 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10251565 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407268976 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869564566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403996151 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135867194 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645922053 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628567423 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394311666 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.399562846 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673747753 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612027511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429624495 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399501405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399782931 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.377997747 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953273654 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421758681 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480042066 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113680396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408274503 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41671006 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.406837125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418400308 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801924302 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416187456 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398135521 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394406041 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404116227 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211085856 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398873548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398072733 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024095197 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394371958 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.880411144 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409411957 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609031341 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414108601 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403515513 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398279994 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.406388321 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653376385 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646727766 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402263814 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399146095 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942614218 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258605752 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40523002 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399673847 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141530026 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413298086 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67723479 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.409747441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.410770463 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402294899 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400709797 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401264437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.398189358 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409863676 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377004416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881688765 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.408151728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408220554 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412095781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247364556 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655307879 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411297904 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972724938 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628131685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395449777 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424448506 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.406259925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405087559 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390827219 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402731599 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638919822 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450446068 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627622141 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413970722 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.39108938 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422508075 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615916211 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398991514 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411779426 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642939128 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398243712 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.421768647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127025045 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430259469 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405080902 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404044445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415570591 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426003986 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475551925 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613669631 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.416716822 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413988457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803580598 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426616195 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406902262 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414512584 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497584915 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402382785 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429715671 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177910787 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982655949 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13380952 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988643704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665862437 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405814126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404774528 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405226059 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548041629 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400354492 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676597393 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404495456 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.406335217 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429681545 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411492396 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417072135 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618157334 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678957495 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405283206 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42054741 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406250112 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406447218 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417460362 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616937257 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895298088 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960958813 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40150025 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415668473 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133035394 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690557049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403730552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404803831 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40674268 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.425117917 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425727653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.431846284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407940479 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555881814 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657976403 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080514748 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.435304594 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.433545853 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.18116634 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413409646 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664194974 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397916019 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622143074 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984369606 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099196898 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672010463 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47259877 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616292946 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40881183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552104122 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.415966704 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409426513 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407943836 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251851529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.402621701 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418470906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995401819 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672734769 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409855966 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.417333392 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43318002 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.416834426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628624055 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12404008 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633975345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4167562 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41243284 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405110803 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991394634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670848895 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411351323 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406824959 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649311639 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639466803 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432373202 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.86071755 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.402743723 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972788573 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.384585862 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428508621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413109295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106603194 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99933496 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.409521876 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914965897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41145789 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412976494 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685954742 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.416353152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416124118 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687049091 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414540787 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423041438 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625184113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990226393 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158783093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.431079067 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42907762 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413714516 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412754021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449249207 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413417194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414682585 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.833899731 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431929816 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41244373 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416905043 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.409423599 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41646496 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.409917784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41220378 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411461021 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.425293045 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.403645655 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42290665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510201894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976029205 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425991296 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.088701778 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74344844 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670090581 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420035317 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.399888433 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416796053 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415448741 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411384644 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407064964 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408953709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968505369 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.422268823 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423576376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415389907 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629430541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623415033 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422478804 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628831382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429141753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429813626 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.397243083 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415494743 seconds)
  done (took 982.673085968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43450669 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.457336434 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.45126771 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.458053642 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439796488 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.458648352 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.489810772 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43684807 seconds)
  done (took 20.945557206 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.419757566 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424475099 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.416244209 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.42599003 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.419763498 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.873235374 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.437958102 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419873221 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425860106 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.423084417 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.42308954 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.048552375 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.426089121 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.418411922 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.408035447 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.427482382 seconds)
  done (took 33.166126274 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.339087403 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.532036835 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.218978944 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.429627415 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.447345232 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.417707061 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.609997176 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.425926545 seconds)
  done (took 26.741256371 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.424452434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429392415 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428378508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429129185 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42819855 seconds)
  done (took 8.459675745 seconds)
done (took 1248.657088064 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420983361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.424583546 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418802631 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.419365684 seconds)
  done (took 7.003451835 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.39994795 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.400317365 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.404329646 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421031364 seconds)
  done (took 9.945597048 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101116056 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052850894 seconds)
  done (took 5.475096128 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.418702091 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181514537 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.152906173 seconds)
  done (took 8.074885748 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720662991 seconds)
  done (took 3.042606751 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.830216221 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787066809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616310867 seconds)
  done (took 6.556710659 seconds)
done (took 41.419948426 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432209138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.660129198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.573847241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421555612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.573836364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.57405916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.155546013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416918927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417292576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.410187655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416712968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575154735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.207466319 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.666973359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.208544634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.668562918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.581868518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423101086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411904301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426843627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.150957971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421564484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412724641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423473974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.576408262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.563301263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415046646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.6621634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422010885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414505221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.558454285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416948415 seconds)
  done (took 83.984200246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.426970093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412488233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.421060523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411913036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412717053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418152157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414420222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412804385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412129718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412518104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413967746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413000402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.414598556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418194441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416201285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419509869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41300946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427336647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425626776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413985677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415526548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415124841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431862465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438397648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41916632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42453333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415806235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417097104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413262346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.437898075 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426922986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41629428 seconds)
  done (took 78.727298623 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422827154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417257345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414924012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41420051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428501629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415826007 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416594902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414413093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430651348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41510589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421370725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412805357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.414114053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428698884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414185981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414596407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.414227205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.448491985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413565173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413926808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.436959674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415260029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431869697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415547106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428175532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418077849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416966618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.432059791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418851179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416319034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418838078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422734917 seconds)
  done (took 78.784422083 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.617698343 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430300259 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428519643 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.365484006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431614993 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431424658 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424935177 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621018345 seconds)
  done (took 15.077623822 seconds)
done (took 257.895169709 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.42236901 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.441617361 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.653816747 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451961154 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.424154297 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.453050003 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452442922 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623132946 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.367080026 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624586255 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425491747 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442907287 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.424763034 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441824647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.704952154 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553267821 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.360444471 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.427151732 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.769701763 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.445137717 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.705478369 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.425783468 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627851631 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.369116324 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.444188428 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.419834219 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.438561054 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352860716 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452736775 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.774529475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.432789036 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.429812444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492076428 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494558386 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559192333 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548466143 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.442369064 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507172679 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.642077739 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.428424084 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.428827367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.183577255 seconds)
  done (took 84.84001013 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.434898395 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.542951276 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.434264048 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.435317636 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.435771595 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.537728475 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.516607244 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.43618079 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.434228126 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.434610891 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.434951404 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.434826611 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.433941457 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.434024686 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.435201659 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.431633965 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.431029729 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.436658611 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.436901569 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.467421217 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.539899917 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.43797832 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.425629828 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.434764041 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.520878471 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.541828942 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.435755396 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.429146329 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.470755489 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.437196989 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.439133195 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.474158627 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.436796126 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.437001823 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.537013267 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.518669492 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.436748617 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.434867389 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.537920294 seconds)
  done (took 58.278548315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438138805 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.685395697 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.849239362 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.445517664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437654627 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441927741 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.513340109 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439173299 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438817876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.440699146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.613576334 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.44093828 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470909096 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.874792235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444022566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440485483 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.438775417 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.438491216 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.696027275 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449415583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.533814627 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.44236514 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.515013437 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.449904865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.460822857 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43968772 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.446355442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.037736966 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.442795161 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.610693801 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207510165 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.512379791 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.978122856 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.864764639 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.20850224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441240424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440026035 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612842173 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441762962 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440897424 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516089676 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.441527221 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.862482454 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121046345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457728955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441991862 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.066535576 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.612559335 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.676777495 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449882036 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89269406 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445728068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442693019 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.44239041 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.672638745 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449442834 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441611685 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.057355653 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.462140239 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.518654318 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443453387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441479656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708572257 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442091128 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.697113713 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443431899 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450138474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46046973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.858069198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445469756 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.168815627 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460572362 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443127698 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.609296081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.70285622 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.085171483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.448423093 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.708375765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988179363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.51734789 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448011173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.026113406 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.523176826 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.44811337 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.444680982 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44557194 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442205242 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.485168163 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512245892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.107087795 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155097037 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087192624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.535893358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.458623698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.446643352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.060256961 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.460629825 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442630262 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.860655318 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.173826174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460720454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.45136158 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139515894 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.463530301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.522378884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.450546138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.872812141 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44521626 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489496703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.44149717 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451935297 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466226903 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.521794218 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.450382527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.44300838 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.140163673 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64010198 seconds)
  done (took 189.711524162 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.448167851 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429822748 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.437425953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.444086089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.438117431 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447317622 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438338756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.444565598 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444008817 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.43767727 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.439492764 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.442904797 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.441791721 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.450367022 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445519671 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444050145 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.437246263 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.43949891 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.439899294 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432682934 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.440908824 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.460850702 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.435622217 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43359968 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.437858653 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.438776179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.454492392 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.4369852 seconds)
  done (took 65.704119095 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446793943 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.987096422 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443129973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.568856487 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.464957631 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442346746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.567622732 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.500776407 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445268915 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443130289 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445413803 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.735952847 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441940018 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.9439068 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.63121983 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.575712654 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.943787928 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.4562287 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441466516 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.442461347 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.571406055 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455090903 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73604355 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986022767 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441843882 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.991495503 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.432210338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450318022 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.44346246 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.990270171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.4393379 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74059066 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.515681289 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.506378804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.990563963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.940769343 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.96600796 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.594454003 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.442213478 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444563103 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.444794514 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436562232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.994454549 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442588325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449004757 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98752279 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459045256 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448502726 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453868194 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.444596402 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503631922 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505570146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.739452146 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993025826 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517742985 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461918952 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.574661827 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.842983497 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.454450327 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.946926951 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.441921864 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.001497241 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.460130214 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.435985897 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.446990127 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44894072 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.589452229 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.579353028 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.945904642 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466976864 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.948311016 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.611650601 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450596416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.475096378 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.44855204 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000630055 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946783859 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.611925832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.582399179 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.637007955 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435578987 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451653848 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442347091 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.527973851 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451705561 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.999164929 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.960837604 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470490639 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451690521 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449116902 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.4513255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.621480208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.994214068 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.519895998 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.950460135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.766206661 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742244418 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447751618 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511593654 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.467486363 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.751549855 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446892346 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.509200227 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.920062356 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752181294 seconds)
  done (took 170.915586392 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.69324542 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.464285515 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543921704 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613770647 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.053871971 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.048188089 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.440176368 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.590425799 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563685993 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.70136711 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459354064 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.536204634 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.662850547 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.527342235 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.171685568 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.525643878 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541532893 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610972288 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.592555038 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.45043582 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.084628941 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.739497944 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.631623585 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.470431069 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.546142664 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182807332 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.011081135 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.030356737 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638895714 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463272081 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.95838387 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.45150998 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.37441588 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.102260979 seconds)
  done (took 66.826624656 seconds)
done (took 637.603498817 seconds)
SAVING RESULT...
DONE!
