cset: moving following pidspec: 15540
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32452658 seconds)
loading group "string"... done (took 0.590419184 seconds)
loading group "linalg"... done (took 7.345346743 seconds)
loading group "parallel"... done (took 0.171259982 seconds)
loading group "find"... done (took 1.16726403 seconds)
loading group "tuple"... done (took 1.785513048 seconds)
loading group "dates"... done (took 1.233859853 seconds)
loading group "micro"... done (took 0.227521079 seconds)
loading group "io"... done (took 1.039702227 seconds)
loading group "scalar"... done (took 40.021857467 seconds)
loading group "sparse"... done (took 13.199251121 seconds)
loading group "broadcast"... done (took 1.02015763 seconds)
loading group "union"... done (took 13.878245335 seconds)
loading group "simd"... done (took 4.699982076 seconds)
loading group "random"... done (took 9.49149981 seconds)
loading group "problem"... done (took 2.009218702 seconds)
loading group "array"... done (took 22.547721577 seconds)
loading group "misc"... done (took 2.042265243 seconds)
loading group "sort"... done (took 3.43089534 seconds)
loading group "collection"... done (took 19.322944199 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562621091 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146293765 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119654618 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143746427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191751443 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134748294 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145534695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085450197 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.019767855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169588408 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142585634 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521633618 seconds)
done (took 5.218822557 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201244577 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089008351 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099081236 seconds)
  done (took 0.973818039 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066257362 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129301141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082317622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068688832 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067410026 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082974587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06827325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066484187 seconds)
  done (took 1.355970137 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07506072 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069676409 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086113991 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069156848 seconds)
  done (took 1.093811053 seconds)
done (took 4.486085016 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.941634359 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25739534 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192322491 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4695927 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153463612 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191872422 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671834822 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332242031 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.219525861 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103352584 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106724396 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394979063 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1074655 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670057625 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077157957 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109841332 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162638975 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437246795 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083884668 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083633224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105838285 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143624013 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105595975 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079794864 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171749172 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070521438 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154998718 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096775515 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069385031 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250339689 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191783582 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684645878 seconds)
  done (took 10.724680494 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100261321 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122678756 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070397265 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143248681 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121979009 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072698361 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072131362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086015498 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093363593 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163362513 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118884296 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125879432 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067150162 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070352381 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104796262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232774598 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.094587468 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102737038 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072491745 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076486591 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126624948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099908025 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082269632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096825855 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153053519 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197066862 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102780551 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116960956 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072221123 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100384752 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131471159 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134064558 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066432967 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085342848 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.15999452 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097264203 seconds)
  done (took 4.738747609 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121791864 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177847774 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093685796 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157196407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087836063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131280643 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067544218 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103898684 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256322846 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112616438 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.14486555 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495825877 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131739181 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088874663 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069051629 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089256743 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068596072 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626747374 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146752761 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104699247 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104094365 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074682005 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08898664 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360424746 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069944489 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06672205 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086354251 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060351587 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14896022 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068607212 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.272803609 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110432632 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069485718 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121109898 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179021036 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099219078 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126723117 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084515016 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067718288 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174445163 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074485953 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086119357 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089852176 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08447559 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120232506 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106957655 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085283578 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069030725 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186770861 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067171945 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102690756 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.949269396 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169382057 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08175759 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067017802 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298224548 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103730049 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06897601 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064907257 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263780579 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163554395 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06817343 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085908597 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067426479 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086681387 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38941861 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071596533 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.652910443 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073641785 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077780197 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087306025 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068189392 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092444471 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074335437 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103425408 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068506346 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068866443 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086435713 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066186756 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087456559 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087476925 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209082651 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08675453 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071177342 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083071785 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08771968 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113246323 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071996397 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066707271 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118578461 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070717395 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086605867 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10350696 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087707071 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103427485 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071714271 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131063239 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069002155 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138981376 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069628735 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114372537 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074077802 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117779803 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098499309 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06541171 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089205922 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140547191 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083726252 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066427969 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064602706 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084281473 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068520463 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086329097 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06971402 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099287069 seconds)
  done (took 21.47694626 seconds)
done (took 38.852135877 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.312924515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096747736 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096140554 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077026833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097057761 seconds)
  done (took 1.543638496 seconds)
done (took 2.372761456 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151803437 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103752205 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0835664 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099050147 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083374252 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104291464 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119897073 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082777036 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121302733 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064717141 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116364401 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064621791 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08206401 seconds)
  done (took 2.14119818 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083233956 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085520423 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088416172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082107709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0818015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083178918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079992727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107855959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080896838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090701467 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065904871 seconds)
  done (took 1.75670167 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08200365 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084587505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088336561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081236449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080858864 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082005099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080010548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10438382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080370913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090572948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065709656 seconds)
  done (took 1.753762353 seconds)
done (took 6.475513055 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081503574 seconds)
  done (took 0.909763008 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.759003575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.076471273 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085695985 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138266037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.2247983 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159458046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464692911 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113517902 seconds)
  done (took 11.058554792 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.114310782 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092976443 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071287892 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092567531 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073335908 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089562008 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072464776 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071981962 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089432944 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069650121 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087910375 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074174935 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090210574 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073636614 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086568426 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071965013 seconds)
  done (took 2.214186043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106164314 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105444924 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095031493 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077144253 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09347349 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074772008 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095746817 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076216843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09084154 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07501005 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094838611 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076777928 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091721197 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067984914 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094900031 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079043152 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090520595 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077585322 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094959168 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077005858 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095838927 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066712207 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092536545 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076138699 seconds)
  done (took 3.011422064 seconds)
done (took 18.025972634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136674648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078958935 seconds)
  done (took 1.046207398 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085594589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101592222 seconds)
  done (took 1.028951403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085612573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084238221 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090736799 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098252668 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084445236 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068909257 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1069966 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068756299 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08441064 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069498005 seconds)
  done (took 1.682633745 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071326095 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09687217 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073372469 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09995884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076349381 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083394127 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075535506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088089707 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080535309 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082461267 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072950899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102202298 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072096789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104251817 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092136122 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07170145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089736545 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06957341 seconds)
  done (took 2.34426171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068448572 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068320114 seconds)
  done (took 0.978191372 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069240414 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06468545 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085886015 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067453892 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083488855 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064721954 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082415329 seconds)
  done (took 1.360238776 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418957748 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1105691 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270488839 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073705528 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109613127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300494883 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067745819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07112586 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091663938 seconds)
  done (took 2.396240044 seconds)
done (took 11.670386836 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081816155 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086793984 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114737569 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449574377 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11123726 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067868183 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149417314 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220952707 seconds)
done (took 2.121883909 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129719662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638492383 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418715138 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219270778 seconds)
  done (took 2.123468596 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.393309204 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094146831 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077043205 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069676925 seconds)
  done (took 1.483650225 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068754323 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071260499 seconds)
  done (took 0.990335957 seconds)
done (took 5.571396665 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069680924 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.116471565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069191429 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067087031 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085109648 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068395058 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064784036 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.085426652 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068247012 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086069965 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068958681 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067393541 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084904169 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06933557 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064657056 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082946993 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068474312 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064770776 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083560162 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067138782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082392304 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068850673 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065116749 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082694486 seconds)
  done (took 2.689399483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088461052 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085749931 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074536862 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090812485 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073865738 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090619893 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077304515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068094055 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09153254 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070400917 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090145966 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07227448 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087032658 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072677499 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088459897 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072744649 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090363041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069476172 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069202419 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090896896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071871912 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087266687 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072121781 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091134621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07166541 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089712126 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070640959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086433731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073478458 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089807663 seconds)
  done (took 3.269126536 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073469529 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06454427 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084020076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073129204 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064902817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08548374 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065014877 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08371473 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067724591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065064756 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084956442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06596375 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065247158 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084997469 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066654795 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086637538 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083951402 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065151783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084300449 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066379485 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085935207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065693827 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065093246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0829007 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065702798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064712861 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08411763 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065546418 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082901547 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066819837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068216993 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086816956 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066475036 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071112179 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087428455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064778752 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068454883 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083481602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065522269 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08210274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065412462 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064912566 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083087771 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072988062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06462348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085507004 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065487427 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084692933 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067425621 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067286024 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083302683 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065806421 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084198028 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06770014 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069200457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083086737 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066898209 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064606456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085072939 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065433999 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081750184 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065959613 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067985096 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083777879 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081845588 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071393844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083560824 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066845122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.083978483 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068599456 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066570054 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097424944 seconds)
  done (took 6.185585775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122176647 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094225841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086356723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067046682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081452172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06679061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069032026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083945507 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068003672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09012013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066441056 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083690891 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068778671 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080391553 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083748046 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067772693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089668061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064642617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065523837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087954219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066185141 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087680276 seconds)
  done (took 2.599305155 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.194022214 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090614758 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11242567 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09488607 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087219872 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076022071 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08924712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072938028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071008255 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088727635 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06986953 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090143163 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069721187 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087963343 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070637416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088373921 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071518485 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087515346 seconds)
  done (took 2.470105127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081233075 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06755654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109439384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06693707 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087542908 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070358781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093228538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075705341 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088732479 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06850333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094413102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180383449 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088271992 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0687584 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069125304 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086543986 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071192419 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086317328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076623782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091880499 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073183964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094635605 seconds)
  done (took 2.749044232 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084534916 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068674593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105369952 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088136286 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065259365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065686218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093460414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068632244 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092573395 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07045869 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084907843 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068991362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072874692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087504764 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072863024 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086837725 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070241131 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085972193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071095574 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063376222 seconds)
  done (took 2.426718737 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09122873 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087516949 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070685205 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096391576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070482147 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087049207 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079183466 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087559835 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070001182 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112254442 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06972278 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087817792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078422003 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093269896 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069458984 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096307537 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076855627 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096830723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086643788 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070417738 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112960834 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07024535 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095797077 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069952446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087274445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070113004 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087336086 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075813123 seconds)
  done (took 3.211851963 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069535478 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067759645 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083678597 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066553325 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065959784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084089568 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066172268 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065245635 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087439712 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066519793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085577288 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069706514 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067782594 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085716001 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068900867 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06744935 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086253133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066330702 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064386635 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084064836 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068589183 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085338866 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068950299 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065640556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083886975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068751733 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064895252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083735535 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068675947 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064839523 seconds)
  done (took 3.059639987 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078881725 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094404343 seconds)
  done (took 1.040357293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066491307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082546998 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084578094 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071287104 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091320539 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068579065 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094575952 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07273369 seconds)
  done (took 1.496259892 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085942995 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079202595 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088511771 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097037787 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081133921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084559009 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161345943 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087990127 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074501371 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084893318 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082730326 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066330933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094260674 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06777503 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09272423 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075309392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083901797 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076191832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070197898 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086399204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069249487 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099276904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070687082 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08281934 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070402629 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077499767 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099890979 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068942089 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091039617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07586007 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092122861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063041693 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067763563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088162712 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066916776 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097326083 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084116282 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090046241 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077847998 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087687607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079523217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081821606 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073128055 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074296717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097460123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067635343 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088535797 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064113395 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084067186 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071969207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063391222 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087705976 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064266177 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093536371 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072491141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078189771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085953748 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070786663 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089003972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071984603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092310305 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071103124 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070191389 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086633766 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075117199 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090579495 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079382548 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081056808 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064020797 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067002578 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097825187 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090674004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094269162 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070138486 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087367001 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067086471 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071187749 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088745123 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074726758 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093599454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069680648 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093633479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076263811 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086171076 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072078443 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075270313 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08636766 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069857969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085715087 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085194653 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085894601 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066825215 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065389419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098515864 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07074635 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087039301 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066536561 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094018599 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063041371 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068336734 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088096927 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068546553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098048675 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074247915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092727254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077240731 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094703577 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069589937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071496931 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084868879 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068997974 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086669552 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076178446 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061832531 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090745892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068559076 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088414738 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077652259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084891515 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069575022 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075393615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093533142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066076318 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083619246 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072440275 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067507602 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091008535 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07596563 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086497645 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064034708 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081900327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072391615 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067359126 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091430395 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073246156 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090024832 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063695824 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084763978 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074374294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095439215 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069836009 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068377572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093714136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069286407 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086026997 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075639333 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069650266 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086534158 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074284436 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088333874 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064152591 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090036605 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071604734 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066383919 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091322217 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071772673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089235542 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069844035 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066291087 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093034929 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068920485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086449196 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068289466 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085675648 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080157528 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069669245 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082573878 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065796555 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094650198 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066575997 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067105219 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087292443 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070868647 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088333338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067089236 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067145749 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08966781 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079530549 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09183916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068800696 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093422871 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079325033 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087656706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071293704 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085461849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07080157 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069314845 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097189563 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074134183 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092110117 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071022722 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083832439 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075402891 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074972098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087304559 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065945106 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08556214 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072885459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091482837 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073354989 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068776372 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086053666 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068902999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090217094 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07191627 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067926044 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086948347 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072977743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087033726 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074910849 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089113313 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079289364 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091283998 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064755171 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071118764 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086996832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073861725 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082818517 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0668672 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067503435 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08970676 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067829025 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090031102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063599277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074778135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095877372 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068467665 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086618704 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069323233 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093595666 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071399057 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071414213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091129218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074559548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097928204 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068089483 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089440681 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080399846 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068446854 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082321849 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074236798 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086502473 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069078277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066624021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085641393 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071382677 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096097967 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075349744 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081721045 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071458566 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066710554 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086783566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064216641 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091306416 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071560389 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069043617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094196784 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069088766 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088533288 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072139568 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086445186 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07039201 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069626438 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091416736 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06912007 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089683068 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068263644 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088598358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068540538 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066196742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089687882 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069409625 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067821848 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093423692 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067680912 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08797425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071719901 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088005418 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070140479 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068010723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087499866 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071854717 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087819027 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069019964 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070428694 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083139555 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07616827 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08685395 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077257967 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068049324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084997341 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073055143 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090697439 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074502337 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087620875 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069882568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068757632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088352071 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071262476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093688398 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067037314 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098289143 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077356281 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087076435 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07287064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068050147 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089164905 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068058448 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087071587 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071317646 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068832006 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088139316 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073127557 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089835641 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069341297 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069420523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089481962 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068836552 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088732815 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064031393 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066784877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087481129 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068842193 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097721746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069703102 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085956487 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068877882 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068875293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086549554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065769327 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09548381 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079000358 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087713056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076135423 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066823668 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090080315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078698441 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085461599 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06652038 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084751874 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06824265 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075180173 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088626571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077854789 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087379528 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069062915 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065665514 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088241714 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067647659 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081640156 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067613888 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072269313 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087405967 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068343166 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087870485 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072499419 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070070036 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098418764 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067550393 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088713667 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069081844 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084321682 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069131321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067631729 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091570365 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070245573 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065910836 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086486319 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068588947 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089121913 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070233257 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067641232 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090171682 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075299959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087663294 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071865594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091375624 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064495922 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070369073 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088730265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068355923 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087063887 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073301084 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070844157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089867965 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07715094 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087823108 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069312542 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087907719 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067183042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06770821 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088333551 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068081165 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085971549 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070525523 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076058299 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087154444 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071323424 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087193874 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069254637 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095028077 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070855481 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071078597 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095701119 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068292391 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08994043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076595327 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090655388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072062925 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087337503 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071382296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074714676 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087087866 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075416958 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087132728 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07065537 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069640863 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086666993 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068771239 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087766405 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06837318 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074573192 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090172389 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067564111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087346774 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067315765 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069415041 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092860298 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075885334 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091435345 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072680044 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083320599 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067843333 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069091445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085505685 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07092616 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090376479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076468362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07055159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089012912 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067577667 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097434931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074909638 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091148769 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067395952 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071688135 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089805616 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071325344 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088050483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069710667 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069658382 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092976954 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069613829 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087203683 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076999206 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070980878 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089873868 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069338442 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089016755 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069201127 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063471088 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090111982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07060206 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09360158 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071351336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088397417 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079840336 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065139797 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088769898 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071307583 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087945329 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072849124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082674988 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071031237 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068704916 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089870933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064633708 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087170462 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067631759 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070670487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087561043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064451731 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099284831 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077781132 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091563903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068134628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06731128 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083295791 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064425965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067647636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091081483 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070160691 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09895339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067830958 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087068357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064511109 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068312325 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091654692 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071652051 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084655282 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0649191 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06751012 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091421198 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074004145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086843101 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069219737 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07172753 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09119686 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066822252 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091805416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06616717 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090869292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083354835 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068083187 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090076546 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07433009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096263474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069502253 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082736713 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07030347 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070846378 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088450282 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070000815 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089716686 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084990237 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091273502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067722775 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067228397 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092213635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068194672 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09680162 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070814851 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089068885 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074045176 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069691199 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097816197 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070616789 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097660668 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071569226 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092362822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067662289 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087732061 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067619117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066848332 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090250159 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070247587 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092247002 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076736624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087051811 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079966458 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097087722 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071026577 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064815024 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088029964 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069382356 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063274265 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090891152 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067053731 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087170022 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067201919 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067627281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09006575 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073699565 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089606916 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070540865 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06821994 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083773989 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070850539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091484542 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069720754 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06561666 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089381307 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069458517 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093018413 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07321254 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084824401 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072409093 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070128147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089157793 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064350162 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094849335 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068987836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070909927 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087976307 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06948296 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088601191 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073370138 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073952074 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090847652 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070590715 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097458063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071314167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085254949 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067151864 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073485151 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087798008 seconds)
  done (took 47.837741303 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111405521 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085873866 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063645801 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083505948 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077802712 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085681573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065399517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064816437 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085871112 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067083419 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084148985 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064617551 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09320726 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088544823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097383182 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087407288 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06537068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06481548 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084156045 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065439477 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093624622 seconds)
  done (took 2.587259849 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089189247 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105603503 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07939236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104266136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093342435 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080106687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099683755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080112992 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103219593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094960035 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083264021 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099562025 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076129786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096720943 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075247439 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09719694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101988338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075093631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100204618 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079144526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097733361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078219414 seconds)
  done (took 2.895638862 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069702337 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06752517 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089713526 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064672442 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067340045 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084094286 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07212063 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086144614 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072415043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066595426 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087885325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067487546 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097067855 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066829981 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067101514 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086171923 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136508849 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072406726 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087349339 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070115996 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063056565 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091374274 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064486799 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083963054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068263305 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071794796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089450417 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066406137 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087669375 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068050829 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067979794 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086349022 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069528879 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067438008 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087730487 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066486155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087441125 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068832527 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063523963 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086371805 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069299713 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08301688 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070428262 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0696767 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086467093 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066824073 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068813744 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08868483 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062902559 seconds)
  done (took 4.662905396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08891282 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143504739 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09204974 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125810522 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083716383 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096725165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071210986 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126563154 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087072569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067835331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106035375 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082806417 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090034322 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072872329 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095262406 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068318723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090226684 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066937349 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092776936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068586185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092771455 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075214814 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103529435 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081070358 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092994127 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066342471 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08865777 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072951629 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102711559 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092317179 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074074662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093263485 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08500487 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09057797 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068045067 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090086056 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085857106 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089007754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070954259 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085573557 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071576663 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093181504 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076234255 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105320891 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068407143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094186693 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068667823 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084658451 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081328881 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091115784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076504298 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103439903 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072200489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089372667 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072452347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104336471 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087321016 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067627776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070655014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102241061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064413192 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093240775 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10171154 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070769936 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095364124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083701459 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093942867 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072259893 seconds)
  done (took 6.91588991 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078904726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094005681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083074126 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104299734 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094603383 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075821452 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094593311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075820117 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095076403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079885004 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095078258 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118025178 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070054495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097840519 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073920308 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096597237 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074146682 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09586844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093759975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076067067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094852223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083914801 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096502195 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102870058 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1056927 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090912431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075497518 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095709246 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103804385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076341996 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107180383 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075080193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095923543 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103233738 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087633502 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095507608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066985088 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095776598 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074339176 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096269719 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070039668 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105456591 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094637775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071070564 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094876213 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075485571 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104166655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106533458 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078523734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1006456 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074816722 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104698244 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093754297 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075651115 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104019947 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129322097 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083032298 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104499808 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094596179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083930361 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10444162 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11125173 seconds)
  done (took 6.576768525 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090721413 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098423428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100004028 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065381342 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066340291 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094604365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065934877 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0862268 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078656806 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097694791 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079525915 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092787526 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075284232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100635323 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09278468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076386476 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092880844 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072545126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097441785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072203207 seconds)
  done (took 2.617852952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078472188 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105911614 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070324908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094497477 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07288031 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073816421 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092404693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070974485 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09027295 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072216519 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100214182 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078717885 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090249457 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075056764 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099751598 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074752155 seconds)
  done (took 2.266387927 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082198357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100142475 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082867639 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090021737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066793949 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087146632 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068228858 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063779425 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086761809 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082709612 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090241774 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070693954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089556731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067277605 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064183259 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092883657 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063992142 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08772642 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068053536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105864268 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0794096 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088290504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069978231 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090281326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06956305 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093639853 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070438398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06536424 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088397382 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068432919 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089617746 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076245624 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086833819 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06787177 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085898006 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067170842 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068143429 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089864402 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071475363 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088297354 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067224492 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067635314 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090029182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069195525 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085469091 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069782839 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085000576 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075944944 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065481014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089852481 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068578107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091576072 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069615977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100052703 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072499122 seconds)
  done (took 5.285055883 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083471428 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07108167 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085786754 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066455959 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092286382 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071651506 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071008129 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092406243 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069666973 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087530717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070591303 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091558153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071792396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070956005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091402444 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071805159 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085716848 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070598295 seconds)
  done (took 2.349374714 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075717281 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068472199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097234261 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069191071 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088971529 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071965462 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064535527 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089046902 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067466094 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089396191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069727996 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070930336 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089259812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071903337 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089428793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069488275 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069888326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088945635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069240823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085082043 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071990533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066597998 seconds)
  done (took 2.626742366 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074722806 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094996615 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167674856 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111738501 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083314982 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103037315 seconds)
  done (took 1.5677719 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093825477 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102870931 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069656829 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109593306 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078527358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090384305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071009763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090159421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08059966 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107153182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070264022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101269678 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09982723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081886339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09821836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075982307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091583225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068689979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091061804 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109876584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072064482 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100033855 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070630788 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091215414 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069916975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100640898 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099263553 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086329626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091008566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079607462 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098481359 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070014188 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101289502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104154083 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071910921 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100142556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070885075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111100612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097000157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07980003 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093184083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078117326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101029615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074036457 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100724353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090726634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077589995 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090728822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071234171 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117021984 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096200287 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079398151 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097605182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079271138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101316194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117457351 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104195582 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079834404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097573496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104388187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079551992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0978514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078071449 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10531595 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096825382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078122889 seconds)
  done (took 6.869143132 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085009395 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108749136 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071062109 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105908891 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099398307 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070939014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091240383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071740493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090759342 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071612665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134159137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070835823 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100188053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099702838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071430804 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091393894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070901196 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100966836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069739024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118181061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0922008 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079678531 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100419531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099771254 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084259136 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098625836 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070026264 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092337319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069781345 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092108657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09682235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071976299 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100244006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069986923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099745585 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070490441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092050212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074816949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091969897 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075716779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101019951 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110130483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070234457 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091868783 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103589981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072177295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090915988 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070913021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090223711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071349049 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105226778 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084411395 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105823216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100065926 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071834776 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092596021 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070259257 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092619588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071233114 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097510191 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099653317 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072212474 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11745829 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070318242 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092706192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100065684 seconds)
  done (took 6.773638874 seconds)
done (took 133.876139321 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205368755 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189666149 seconds)
  done (took 1.326655887 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072404622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097979728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102781455 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1304278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090928953 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102376698 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122106917 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082844854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068563485 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091047311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069206069 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090641411 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13432887 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068340361 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090605262 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0713727 seconds)
  done (took 2.424535744 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106422558 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201942111 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113836099 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067817629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103473712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080562596 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089298044 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079895527 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095903601 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068451047 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101134415 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079103697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066716669 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100471496 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095492529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081905249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067569314 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102742127 seconds)
  done (took 2.645966909 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11023137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150609536 seconds)
  done (took 1.201504362 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204913522 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127924322 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213123391 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.439548118 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.218124235 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.301105236 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.18084135 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183618295 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167616232 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175164159 seconds)
  done (took 3.147161609 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102555218 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176296846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324309281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142625937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090213781 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120892366 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14315975 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113715043 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085684525 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106553311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104498783 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080303239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122304334 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0776985 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09850129 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079575764 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125790351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075260404 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100729417 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077089284 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122632252 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067630926 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099112367 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075365033 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102948285 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079968857 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089895904 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068528883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098911542 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077455381 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102816062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117636634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081335608 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136313912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106873552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138269247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079730922 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096836487 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076752811 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097004618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080045094 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101034927 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106775115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079847284 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067395205 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101573981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067712766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088871465 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082206697 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101025615 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081152697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102936404 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13586516 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101687216 seconds)
  done (took 6.503543535 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.76575661 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137770592 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07461964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833301752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117972695 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085068144 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.7569576 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095669656 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23952335 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766851659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115834703 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078805729 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212695033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219271026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913541474 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289877376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.647457823 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107590997 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111176347 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136663621 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166093419 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160394727 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151624735 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413038667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099362277 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073624291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140561754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101823265 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144176209 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106858114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076518829 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159563278 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.230670595 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185031272 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076793814 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09396842 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072256363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152589231 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246415398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195880907 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161641464 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070568649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071893922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1664006 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134807858 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070855431 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145021997 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157314366 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175129782 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077037672 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100165133 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146563131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143955281 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147026011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104354619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292191487 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.27531044 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094264575 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125413311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087221042 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240978697 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084017411 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206575496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142727327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19439166 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071808528 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759677111 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152588493 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071538687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099757813 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123950342 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077122428 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16355796 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128930579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388457291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145959136 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097758532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07188259 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209437431 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085820529 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093884598 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146827526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077151686 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125841067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170915145 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151731301 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152859965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21177113 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169753765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145249503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076281786 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129321854 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098691107 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195320598 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200432314 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147651628 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193778504 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1443685 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145821309 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150371866 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101925675 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154407284 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1243754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106397588 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144374326 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197439382 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.104788556 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106553671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096416178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145083851 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129549218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088097179 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165136011 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.15495717 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437463687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150668626 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090940605 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08881292 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143309225 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167187936 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079111457 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242903843 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127104071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1535578 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126308215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069883021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125371737 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144592678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104206343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127300717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144149976 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078483433 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239890471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176274882 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10334224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201775743 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166534182 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100016523 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154742938 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125143505 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150600814 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080017497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165843973 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077897208 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750745524 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148031719 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127515643 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074963722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169227941 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094095131 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085044104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106845461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069258801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79059747 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087056378 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104808654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105930859 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078257356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12586139 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13970413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098074361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145193723 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209390143 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079802544 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123841612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106327903 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14429366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076642637 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107965908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105403366 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086268197 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126835121 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096455564 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085566171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15038576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144373803 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200608788 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575579238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072574699 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107384737 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186429596 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094643722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265961255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142374729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.183818094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167443672 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082958499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.297111701 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147230377 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.16982406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086129465 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178513966 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070062606 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140795848 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147722765 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09450869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077337334 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167209972 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152666228 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149631073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952766975 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072632832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207679304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091832906 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155297815 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077444925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102737945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269621551 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072414923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150682583 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170292693 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076018814 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106849459 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837795868 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107442678 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145368383 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077140214 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20309917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146051429 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139605883 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162785496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079510918 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145014319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190400512 seconds)
  done (took 41.706406901 seconds)
done (took 59.888200202 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287147001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19606057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261215543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151150515 seconds)
  done (took 1.939804156 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.157946401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.130848728 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.101168516 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089413239 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130275943 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068191905 seconds)
  done (took 1.64382293 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.438524441 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281681492 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243781578 seconds)
  done (took 1.928143818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307605804 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236083761 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464734596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309645543 seconds)
  done (took 2.394056844 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19899379 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119807574 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.092373254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087491331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166494467 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270988884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130039647 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194113147 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080639454 seconds)
  done (took 2.352630501 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208404826 seconds)
done (took 11.431219625 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.159115131 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.141425644 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.34634108 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.236857615 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085790379 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152759941 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098564326 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104698238 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.16232306 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095745511 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.207343483 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103100244 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.304286048 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139402103 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.292468989 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137422079 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.238347868 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103294048 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.18355795 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.249124978 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.183828858 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174670878 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075989916 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.077209429 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074471651 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0796886 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.337674688 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092480618 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096679003 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 0.170448306 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103007122 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102404356 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171230269 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099691933 seconds)
    (35/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.221856264 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198631248 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100743758 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.153386474 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100667433 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.154241659 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102602924 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067053735 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.28444516 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197950939 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067538527 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.222766792 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107337727 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102768187 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21546118 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150400682 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099912192 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170086264 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.257221684 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.078007964 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09568907 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.268706369 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.1359769 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096959623 seconds)
    (59/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.184160102 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113562941 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080568599 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101627028 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093511149 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.256685725 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07478196 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.160408714 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242192433 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230634011 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224341758 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092469468 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05553129 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118638686 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068832531 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11337626 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078574594 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05344527 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.08678317 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079081185 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167730206 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068592512 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054371848 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100132499 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072896042 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099269887 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068930518 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065527737 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076320546 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.069775712 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13033894 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121982125 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138290178 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.247120456 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094609679 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173542008 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091124635 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145325456 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.255237912 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105354814 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103455453 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055867469 seconds)
    (101/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075214857 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094114668 seconds)
    (103/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108187692 seconds)
    (104/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.101944776 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078311967 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091834376 seconds)
    (107/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113805549 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05471289 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077248323 seconds)
    (110/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.226119673 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142691652 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118830119 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079455366 seconds)
    (114/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071979295 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113711821 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069070385 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.246356869 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069407551 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078559819 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.247575518 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138000401 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074125743 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173175285 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065864232 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.281235146 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.248416981 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11062712 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165446234 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101729386 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.164650282 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077969211 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075818946 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089576572 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069482439 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073670972 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102463467 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078979165 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097161569 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076114457 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069908622 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077766464 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.3159661 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103173584 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076380138 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068970783 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095705002 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069274918 seconds)
    (148/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.173622201 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064201432 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 0.154610654 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068971334 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098147451 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096535559 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100528439 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.238492286 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078858065 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069163265 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072053647 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077668006 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088428899 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099090209 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177411453 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092002095 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084711266 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205846251 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.15981002 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064763907 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122872713 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069926294 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077420883 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.243018425 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.133222374 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.253227718 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143552426 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094735974 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09343242 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097797992 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092222773 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067356384 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094454654 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068993912 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052648908 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080845912 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068038119 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104932219 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.22070517 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097720231 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055417088 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054521079 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098288221 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10697241 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141642687 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052854151 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101736503 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069950656 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118264702 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055030178 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053602863 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.117919974 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074325387 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073414876 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.153990035 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116821513 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070263164 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075528135 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098842704 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067054864 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066570555 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119311863 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168717162 seconds)
    (211/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10012437 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105771268 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074419361 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066965153 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078439328 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054650136 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076224363 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099596639 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081978509 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053211837 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077101707 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093239568 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076249546 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05518241 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053701973 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118163382 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069048086 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080237046 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122675676 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075574421 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07632789 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055006702 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073518862 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053989029 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077757424 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13899423 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095544641 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073972869 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090280576 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054506814 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07554932 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093526771 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093695117 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20357781 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166714845 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053904987 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054453257 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078354348 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054706077 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078573646 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094802297 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112216846 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133486404 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055979169 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067869513 seconds)
    (256/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213705583 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092498724 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053652981 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053838907 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096842047 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081116987 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095104557 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070486983 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075040218 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103514376 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06896026 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054551147 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119260081 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070761722 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096219099 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150483121 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05708561 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083694282 seconds)
    (274/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.088565423 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055611361 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067143196 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200279174 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053436981 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079721083 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06932893 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110205856 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096855485 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0991123 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056052682 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067731468 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089800526 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068371543 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16786866 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077971885 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075460022 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107417011 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075224786 seconds)
    (293/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064308735 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077955031 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067953236 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054686782 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098696146 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055804765 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053434094 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162885946 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054758761 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091214083 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103359748 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05489509 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09704941 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073381676 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067038351 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.078984097 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067808002 seconds)
  done (took 36.118594681 seconds)
done (took 37.083119126 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085230381 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121820864 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077788949 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122039613 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083589016 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107416813 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075750527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105655075 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084360757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109095056 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082173178 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055978396 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102580405 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077503744 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103076221 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09541242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106471118 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075241113 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100695704 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068356929 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075716019 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093256875 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070244075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056047501 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105983575 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075057627 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099939643 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077840049 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092037406 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069432614 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070794945 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100086036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06877847 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104917395 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075900157 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076187735 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102624347 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079467358 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093106375 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069399116 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075721968 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092324187 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075577282 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075199945 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098785301 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073875338 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100675795 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082998646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120276062 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070883797 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076080411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105048321 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079132019 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100792717 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073119806 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100537841 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074268635 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120293633 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078754561 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070276273 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101017822 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077593784 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09730269 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078223229 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077178778 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103668449 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078631139 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098225238 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079376069 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073540485 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093259349 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076099835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095442172 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068806941 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078543782 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104161876 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06723901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096355089 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076922834 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074451623 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092365205 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070800165 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069223712 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099421785 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070761317 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056327775 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096414357 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07482853 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09067559 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078510597 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073734386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098921981 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070314204 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102326465 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069693166 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073571935 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092592582 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069148852 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069997793 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097506806 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068162963 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069919177 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101501452 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069435149 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097075476 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083268397 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067261457 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098903337 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067732608 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091176597 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085074138 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100794558 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069612681 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07008878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091122275 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076575963 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067044095 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092484822 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067861138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067221473 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098826276 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067886528 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093079295 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075893692 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08079955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095718462 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071975495 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069977233 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092879236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073574673 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091698592 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069189043 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070029438 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090339892 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071276737 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067901515 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100553275 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07092915 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099776176 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070533429 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076272349 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097511389 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074990494 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072244021 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092375418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061390096 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092343154 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072180231 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070157683 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09171686 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070928483 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067838462 seconds)
done (took 13.740970292 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070083897 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177863682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132010221 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099481832 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116028576 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068735546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105635357 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134849906 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071312656 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133469438 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090776378 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112975342 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144551592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068675214 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068914559 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096976517 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070439617 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116983145 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106397481 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114778583 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146620762 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06774785 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125989193 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093725514 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118192972 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131660197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069095819 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095606575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073175074 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121686164 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089740973 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071513071 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093704828 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128211884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113757861 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068162635 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111634408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069203224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068233233 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120947226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12935269 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084514976 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110011898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071621145 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096265854 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070515089 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113904559 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094489844 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108869527 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116058119 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141039458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072861402 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109780681 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068055852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115267866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086865488 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094799653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070119056 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070334273 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093253359 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072196571 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117219827 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096519585 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097841219 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085597598 seconds)
  done (took 7.588116355 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088725759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120232441 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088508831 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111151307 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069561366 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068651509 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094451469 seconds)
  done (took 1.677600785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070977858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091179432 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118222791 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092248302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114698391 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090480952 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104207253 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069706858 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111840631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070702536 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115029994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109769598 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095109347 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077396884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119958578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070791098 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093422729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094743555 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072890481 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117859625 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072237526 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114337475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071721892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068788843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11064052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069715146 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143967859 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074184711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095899725 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072965494 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067239919 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145787297 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109859923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08173289 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093337373 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086213879 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108995355 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069091096 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085735816 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099964144 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084428633 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094592896 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072521104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067887091 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098818435 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0815853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094298858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072108007 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072678692 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115555496 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070739384 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108387952 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070825461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073510607 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096422316 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076000899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103094245 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071677391 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089865157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097083133 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087475943 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111975511 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084367782 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112000814 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072901832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108440942 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085823274 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072004965 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097129731 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073481949 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111523224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068969777 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070149649 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10661047 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071306492 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119056786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094065321 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096137815 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080722374 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069244277 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096104786 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069896392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118664527 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074089601 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069612798 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100051409 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073088683 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091862618 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070166367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073017437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092726353 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07194361 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072819648 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09516622 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072407741 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111563184 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071277937 seconds)
  done (took 9.708639604 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072566599 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070647922 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096539593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071225467 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070157734 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095493976 seconds)
  done (took 1.521921295 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102743481 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097231934 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085507019 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099615077 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11223112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110200591 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085199122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111214953 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087328334 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108285291 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084982847 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111829059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090738629 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101992535 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085655777 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101344326 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085868021 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106029829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082383436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10158127 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092322953 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102067253 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076467606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111660783 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074347027 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100348665 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081298853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106502814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08355521 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109721061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076907208 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073038569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100030503 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109896184 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087269714 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099078496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077275448 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073521136 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105868089 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073198062 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111391622 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077087224 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107473376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074497326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111657087 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074375164 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100102246 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079775845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10982042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074154938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100184928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076044865 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097229498 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07710132 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074324647 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110405945 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073250176 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111594683 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076531215 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100906923 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072808195 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098422449 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085250135 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099158364 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083813253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100334282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075506373 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101362739 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077718373 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099670836 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076050612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072794302 seconds)
  done (took 7.67175508 seconds)
done (took 29.192480604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668933412 seconds)
  done (took 1.709006868 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.812412932 seconds)
  done (took 1.854094773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.530647961 seconds)
  done (took 17.577290239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.660517655 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.858504021 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830819748 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163376916 seconds)
  done (took 3.5543767 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.917008292 seconds)
  done (took 1.977135557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248419846 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258714301 seconds)
  done (took 1.553371617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76179144 seconds)
  done (took 1.813357014 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.344038556 seconds)
  done (took 2.389213417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345397457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190514255 seconds)
  done (took 1.588125813 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537249567 seconds)
  done (took 1.588093066 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.257610759 seconds)
  done (took 8.312991266 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23644734 seconds)
  done (took 1.299607967 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276707335 seconds)
  done (took 1.330842202 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.417553978 seconds)
  done (took 4.469614333 seconds)
done (took 52.060562227 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082567832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083549047 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109083223 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080343276 seconds)
  done (took 1.404803543 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082027649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075797136 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105882981 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075055967 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106471206 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076369865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102179872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081247291 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098839576 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078571131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075523196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100090653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079095631 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102175098 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074713759 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077608751 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105093587 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074935448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104469567 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076320657 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098365842 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07940897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077987965 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101160658 seconds)
  done (took 3.169766986 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082105843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074924084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102426306 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07554415 seconds)
  done (took 1.398599196 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080894083 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119660402 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094083912 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104570841 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097944944 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116200857 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073212211 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072092772 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100695967 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079734841 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095613067 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103771509 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118243444 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079864712 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107277631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070224959 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07099781 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118180292 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080229482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106281416 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073630014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.1045262 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071537324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118019846 seconds)
  done (took 3.322251814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081503384 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130482068 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084141426 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116754772 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096702246 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067388771 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10522274 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093880634 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156322352 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067327117 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100226394 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068828229 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100146357 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069246377 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07880489 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139236723 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140939083 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072497082 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125630712 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069702404 seconds)
  done (took 3.026622192 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078873624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072365491 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093475805 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071385105 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079138076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10145538 seconds)
  done (took 1.565616554 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072400903 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069142029 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095045904 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06965917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073886838 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095441674 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068839738 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069195053 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095342466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070364343 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093973155 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070058381 seconds)
  done (took 2.010966889 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463736568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072009642 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095768864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070496441 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073466856 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094408494 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084210116 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069966607 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120705893 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069493569 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09502302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072270806 seconds)
  done (took 2.448925261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273276541 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08038085 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341516912 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173423487 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143920561 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16206513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106559725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145936733 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205958861 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144295697 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237481427 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205599541 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13969384 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172145269 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119325901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137872478 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193350368 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230359743 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134612383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233502457 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189746447 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161901067 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214296403 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106325224 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139436187 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150912722 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101307763 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083103805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240573262 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192259566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182836925 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143012013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124949389 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241608693 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22915368 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177745783 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168470695 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114886148 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161357386 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17363472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272273635 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116935772 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20435274 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138916456 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109869721 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181051007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152149874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152059489 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14207152 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118587229 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182535888 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2478476 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173057987 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118125998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142515325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144657375 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148580928 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106574722 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283330162 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202136394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190401604 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075090505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125750781 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195425949 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165324506 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148370138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186346242 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098683152 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204177634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194859461 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149499662 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208536735 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16760733 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1194867 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153192573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178211355 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161085131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239590806 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160063794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101815921 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157021678 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132224373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08586342 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174983826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079135626 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243463649 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128820016 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145104951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142103701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115696596 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14213304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230307177 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212231083 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109071582 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095188968 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134432275 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155569823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183278471 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118256951 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139590512 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153799252 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081480527 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198881375 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080582268 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758045 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107240484 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158719677 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168105121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078318496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184155997 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107899012 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1337551 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170382557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23000753 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120410326 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087000787 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237928861 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161306223 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138213134 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181830691 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225379342 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132339999 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105951185 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212841476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254555773 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119514726 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206631002 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135427393 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114137157 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091658777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185756042 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146491423 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127478644 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113078952 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159470067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236774067 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07751282 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127164897 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171558756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111329833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109930597 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14636145 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105464004 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.126237129 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132151321 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138403538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176045149 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159831567 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139398707 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15824349 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130735465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229359738 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11956445 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109148045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135961892 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098792529 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173431097 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225947988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084371082 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235815884 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161154344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135369143 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154236059 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087171688 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202463337 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083435806 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073022318 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207309501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144502152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143191753 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193027664 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135988346 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16234147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157589902 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194234094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168823879 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168719651 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139705058 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090559891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145236939 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187808276 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077440157 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12478981 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085669325 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135420674 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126020375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112398652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18051984 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160705635 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129384935 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145550412 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127784939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190349583 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079524516 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194413497 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153764243 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098711021 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22180594 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224477853 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172080416 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132127583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183120521 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10095331 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077749111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11950495 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163854761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112672115 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088999341 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150601182 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21468617 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164106998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172432949 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143425398 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15652124 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223616351 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076144673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146595511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189309156 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160027561 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163578373 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120637601 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104976111 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210466092 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109602013 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285412577 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151767002 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160376279 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19047704 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140057927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109922867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108948812 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202549834 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135872258 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189548066 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13244475 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119316091 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143615213 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084845708 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135774011 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162513905 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178152783 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174059333 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150073402 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167741565 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107958312 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150209038 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158674787 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15615499 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067097316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153293771 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231378168 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127322734 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152498656 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223124669 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083135681 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157338982 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250032553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210264158 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090022565 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140674836 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15544909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164824872 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152476136 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205310818 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143615416 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171620327 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143614152 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089595556 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118891666 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128929134 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113016062 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128572128 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145466919 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150792942 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126569948 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165783048 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146178614 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14369057 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153721527 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129719019 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095554403 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130109279 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245807374 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156450383 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246479925 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131655794 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189200045 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237971688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104463239 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084576351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111175668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178691656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087875772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198478785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100157218 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13738809 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161008792 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207782786 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100804672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09821799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142707295 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170984448 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143193925 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104013385 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138426421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233027078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136319697 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082934444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161174732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137406509 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136392725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247957721 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064554838 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128717225 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079239175 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11240415 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166219347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223822757 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087326337 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.161560323 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157040572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156564133 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165066239 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132396915 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12850403 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144193638 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187666957 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163939215 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.122564738 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147054089 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165487698 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226862897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139576191 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099725391 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239230929 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2239136 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.233104194 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093063893 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149731113 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149729766 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145413425 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209087808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087070093 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237935832 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113816394 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174071806 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136726832 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124452746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163882081 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127881154 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093304393 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216838953 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154879083 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112823869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101325987 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147629084 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155455397 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135678716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104503751 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178288106 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075387571 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203195582 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209615845 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113811686 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139583522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12638909 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087146735 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140699634 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136345371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117742629 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126387359 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245531129 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123929834 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188948944 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207101494 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14900085 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173796545 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133228125 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669639911 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109759613 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19510961 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152210411 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24892824 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130795709 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152694755 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144915741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157305814 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207651854 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139343348 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182583055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196961555 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156868547 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083384555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136432807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14560307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122080111 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140135967 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149629708 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149948834 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132532009 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157503277 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165021072 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112122972 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101187789 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227282033 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153838036 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18029037 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20595691 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089957247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154289897 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2097422 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083468183 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18473731 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196656335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142925054 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132641229 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111784342 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112304237 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240913524 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103903479 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201691561 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18677662 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11679682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148267289 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.183138337 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170127761 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140080421 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160524001 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128182428 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147573416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15011864 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11606508 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081623766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13958705 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147206549 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131894177 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136800085 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.126345327 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223456625 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075193666 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127536583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13481417 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185007368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25049691 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121126925 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088245637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152114814 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146875091 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149981402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160840322 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113639862 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11296475 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088109552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.144721518 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117730361 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150208903 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136547018 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145663315 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238078591 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114880694 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23331962 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128087824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141647927 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07347224 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111117064 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100418684 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127832708 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137521844 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13027829 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241119893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103478743 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122894495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125102271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077581017 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113985974 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168682189 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145944443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156481496 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129603226 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068516002 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141965175 seconds)
  done (took 74.458626874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139958324 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110790488 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125495522 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.183205029 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154977814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246525204 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188789377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231416264 seconds)
  done (took 2.523643631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072871721 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125685283 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105918557 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121046964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096079165 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072528379 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311448122 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114054836 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06925848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122023984 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12387349 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098367533 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.492732011 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068979397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098517415 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091721392 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071289843 seconds)
  done (took 3.392883727 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453783911 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66923652 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45618869 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102813104 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.005699417 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114712303 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.526057357 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170386891 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096957155 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4413969 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.73137699 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159064249 seconds)
  done (took 18.07267937 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078580477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071002229 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114857507 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086710788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102191359 seconds)
  done (took 1.59534691 seconds)
done (took 119.436094567 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083886198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385242728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055736003 seconds)
  done (took 1.617767105 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088161152 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087879003 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117348368 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085762552 seconds)
  done (took 1.530712451 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078707668 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079164806 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115973838 seconds)
  done (took 1.42169266 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.301165664 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172295326 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093044532 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087533919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080169513 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108949063 seconds)
  done (took 1.424798885 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076566491 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076906494 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104268742 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079915786 seconds)
  done (took 1.479210699 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080891414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055182756 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057396606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086202368 seconds)
  done (took 1.428107089 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093989512 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109430116 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084984301 seconds)
  done (took 1.435151818 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113553699 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117747667 seconds)
  done (took 1.380208685 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085706288 seconds)
  done (took 1.228751442 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098228372 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147897498 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165847046 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143657587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176602873 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143001574 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118002339 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092233368 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109236608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121163474 seconds)
  done (took 2.465171472 seconds)
done (took 17.198221515 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08306205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393365788 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365397309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122190116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673794732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385531914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021269882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124351121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112742158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098470056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087414481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678699569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973603579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326768042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98859914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326336251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680890299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07099109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095758466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072478357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004499766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099147518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071157804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098167319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653764965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374001566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099265227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326537632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097696654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073552042 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357533223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10000775 seconds)
  done (took 16.17733824 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074771488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148483257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078749542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086248548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103076302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072389141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102692938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072239852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153381043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071451542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116230799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070979535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102331654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073024893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089697405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100326085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072120572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097667352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072563479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071469254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117831873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070702916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09843014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073213891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070370288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110916183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071052228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097472332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072109286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072243632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101994213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071486071 seconds)
  done (took 4.008341866 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119281336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158053446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077371801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134053083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143171231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075003175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175704305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096761421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156951203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070717329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116208163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071092663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133520969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071891962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11951398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071643353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098916498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073047592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071363493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099787553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090716961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098608132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072198647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070949229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100259706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084190031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098983095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07467482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070573751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101870336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074620333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100269742 seconds)
  done (took 4.328934466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076040141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078270766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113999043 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087128798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099817055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075670996 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074907643 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101418803 seconds)
  done (took 1.861462286 seconds)
done (took 27.515364257 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083173422 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072315279 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104022375 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084174904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102210563 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083602297 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069211853 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106238153 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078549301 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075088228 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.107308494 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069700214 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102862217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071457119 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076399837 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099946639 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082925627 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103702571 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083266124 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110356427 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073496829 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078956976 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105448156 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08322147 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110479069 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08324957 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110329624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077271218 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071583926 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101595901 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079648105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11547305 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071933859 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081813559 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099773808 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070809584 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09871846 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070924145 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081998307 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10693431 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073016042 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106480981 seconds)
  done (took 4.869573576 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094056761 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094979017 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118406481 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064628199 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099772375 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064884236 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120550536 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064300637 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064824465 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.1217208 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059084335 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060222153 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089903691 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057291414 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060673466 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058731592 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092002566 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059512096 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060081506 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088574216 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064232923 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056695222 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089652023 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063278309 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058409931 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064431805 seconds)
  done (took 3.151115828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079310252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084166669 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11982528 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131558393 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137990787 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077911132 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110090159 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088644022 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116529033 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069983262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073336845 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128556572 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08776103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106588494 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070533678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115065354 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085478014 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071114316 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106398352 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091302698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115485632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081498624 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119062343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08255459 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068976105 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101337245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074751183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112425976 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07681653 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079151136 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103592825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074439703 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100458847 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082976702 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101843677 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073330676 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090034387 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109841661 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07929034 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098829523 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075606173 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070688518 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120187756 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11442321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098846585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07740847 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105210033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081460612 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070170562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118321362 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079981686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097828814 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074601307 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069043928 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098307806 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084894943 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098648121 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074686962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078987757 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101543595 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082897588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072748983 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116422682 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069610318 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106424885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070545132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070894288 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.098732236 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092953994 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100955144 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111495563 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10049507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072073135 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106756199 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079256761 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075781797 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099300887 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087247731 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107084323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075157282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080131698 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102597729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073491766 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116420052 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073909186 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071797587 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099629283 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077402566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072458435 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100442574 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083735875 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099421698 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073785945 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114140335 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071335212 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071620041 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104806917 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075768201 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069059836 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112365521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075426426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100375884 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079930853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097796721 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074650884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080150882 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103746748 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069244835 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102446231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077889061 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070315633 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101134256 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073648045 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099261476 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082769952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076959152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104004992 seconds)
  done (took 11.750030974 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203074032 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194016482 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074720073 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185725958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081054707 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112858101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187768518 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10153091 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101051994 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07061218 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099919513 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110313443 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133720077 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147193283 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084669944 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069997004 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119323733 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140485653 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189061137 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153274514 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.12105286 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077471036 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.103137459 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072402431 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071719853 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110317881 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086639071 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110484365 seconds)
  done (took 4.485337781 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086170803 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131181943 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077958542 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118665394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096749382 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098328395 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076839484 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072232657 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112197552 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082611904 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098876972 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077690118 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076843614 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109118765 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071308684 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108955591 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080289754 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100070473 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076044513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074890734 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106869973 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083528031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10338744 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071488485 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077108497 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099693749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068181128 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117247848 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070954154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121816717 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069468088 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106069963 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082159498 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071536796 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100511352 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073071263 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072247678 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102612079 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0722318 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097284213 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070168713 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060700914 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098638502 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084066444 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105066905 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064213224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075874402 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106038429 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075855921 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067152384 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103686864 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073255541 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102049332 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07932439 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074831245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105647149 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074808001 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096755102 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079511796 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072355747 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094983671 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070796299 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075148263 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098653275 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078626979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102945193 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070427837 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072250266 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104010883 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077178037 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071952368 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102198432 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068622638 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100828663 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076664984 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07530017 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103218545 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069969705 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069734949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100439509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058284393 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070046168 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086214384 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074283435 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096353857 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070945749 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073252011 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108859368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084272048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101077927 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077511215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07078058 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.099465075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073734845 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093779834 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074786256 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08498984 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116075114 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070507715 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098618013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084119676 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104467917 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071511834 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058841985 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106792941 seconds)
  done (took 10.239087558 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096713588 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.12194681 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074745086 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084230096 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12636364 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095090739 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108052131 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077638493 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072202637 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117862616 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071331825 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107956024 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075443756 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078962066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125235275 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078000487 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102204768 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080486714 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077745692 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136870951 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082827483 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11484883 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080684331 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100363887 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075802576 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082135434 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128147991 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080871112 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110199974 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084947428 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108690927 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099326146 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.0849304 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104784967 seconds)
  done (took 4.429602965 seconds)
done (took 40.071255905 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.274616255 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.459191278 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.226249067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.209735809 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.278824945 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.245223716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24355996 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.227672839 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.350574788 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.232433382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4696694 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.952829282 seconds)
done (took 59.343449277 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.300264529 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367299705 seconds)
    (2/2) benchmarking "String"...
    done (took 1.5025887 seconds)
  done (took 4.040654926 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.618206084 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.22825904 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.524516479 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.230271717 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.251446271 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.678779108 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.934863989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.116619468 seconds)
  done (took 28.136213661 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.238533995 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.614598751 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.709434354 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.708810357 seconds)
  done (took 18.444978117 seconds)
done (took 60.715316219 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.235689575 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.267730738 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.24162877 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.216084255 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.344952809 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.262640631 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.539161882 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.465714365 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.233510788 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.220199543 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.254979978 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.235180917 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.248276542 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.473411921 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.244135943 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.235499262 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.298824607 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.703525981 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624103745 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.233639224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.259480786 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304789689 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236087634 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.241176457 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.319897406 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.243250224 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.234148253 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.237979749 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.622611665 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.239652693 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.331080449 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764679988 seconds)
  done (took 192.788032283 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.231569237 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.380089036 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.4433014 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.292223778 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.714639515 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432954774 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.374191857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.824425536 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.253493337 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.258686225 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.548568833 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.231627276 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.596106071 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.219335598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.241554712 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.239656055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.580483455 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.595520665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.250956056 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.470709881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.238349883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.477754332 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.395385468 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.499966414 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.260847275 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.281357888 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241156452 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.238063229 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.426150405 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.523022102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.237617217 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241958906 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83491364 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.094855844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.237100172 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.240095774 seconds)
  done (took 151.822437373 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.527340492 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.233787163 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234057846 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232828026 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.263429117 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.233247602 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787503274 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79164061 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.736041817 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.555226638 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.237050189 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.293475887 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463244669 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.233152571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325642591 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.246000224 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.235259981 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248210554 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.261154723 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.236550956 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234687753 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786133799 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.249659523 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.463806496 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245077907 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.232823078 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266126694 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.627810583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233685534 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267740606 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552513686 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.282513317 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233285517 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.555998493 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.471514089 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347347022 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.235395868 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266591864 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.23532981 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.504008603 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23445597 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.233660164 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.238872039 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.234951768 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845622193 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.239654164 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790210739 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.239969301 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162133278 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239498453 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236119585 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.532642438 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.762334395 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240385361 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.236513984 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.238565104 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.236156598 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235821982 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.26642447 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.548931821 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.335357083 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235915338 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.239467752 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266451243 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.235536554 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.423708251 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.239533708 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.568188482 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.2998566 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.352713935 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791100527 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241208798 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.329589433 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35441998 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.237968148 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.236105094 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.237019783 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.236776217 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343178339 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.23716162 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.646172307 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244097271 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236461614 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.296669929 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.331565698 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.237836937 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561742802 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.242399587 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.237150673 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937253492 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332448954 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.238288628 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23933082 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.238038547 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.649301073 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795667634 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.436828424 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.242701053 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.558935459 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.24267521 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6618292 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76894323 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862829403 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.243378114 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.238489406 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346503286 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.242536521 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.239573584 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.238295809 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23908142 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238428538 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267076625 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.238158987 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.297174407 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.635729275 seconds)
  done (took 349.458994615 seconds)
done (took 696.771867024 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.924278997 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.87391731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.011028257 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.891652457 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871219298 seconds)
  done (took 10.752101874 seconds)
done (took 11.932556949 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433099465 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43716788 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304741236 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434113104 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.27176589 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.450749541 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414744963 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.261950857 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.343562537 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.321141641 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342246375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290354579 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.268449633 seconds)
  done (took 18.756029904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571808796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.56813063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306418902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581089801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282796778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561991303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448072155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.460045819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442887399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257031979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253653778 seconds)
  done (took 16.914418462 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575811864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.58715759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309544917 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577497857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284097809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568340581 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459118682 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469787617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444123197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257095492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252297645 seconds)
  done (took 16.965576133 seconds)
done (took 53.81718849 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.24850925 seconds)
  done (took 2.430620069 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.28135862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.447672779 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2690174 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.253957997 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.250583647 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.250544514 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.252347029 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.249374697 seconds)
  done (took 11.437217532 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.248763459 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.248075793 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245923281 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.248878046 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.249143026 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.245780668 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.245825052 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.247288338 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245882843 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.245325918 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.24569598 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.248186561 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.250073017 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.249383033 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.244291077 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.247125703 seconds)
  done (took 21.138597007 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24985228 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.246918628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.246633906 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.247446321 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24709859 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.246291035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.247991794 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.248535403 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.248119665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.246546055 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.246610246 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.248472132 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.247559794 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.246881572 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.247835415 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.248531081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.247356075 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.246491293 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.250301987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.248386513 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.249075283 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.24703333 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.249258501 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.248175971 seconds)
  done (took 31.1328231 seconds)
done (took 67.323850256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.3810528 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.080815828 seconds)
  done (took 9.647623753 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.250397605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.250461558 seconds)
  done (took 3.686663886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.250281954 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.250074284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.251703601 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249822489 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.250456843 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.250006116 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.250416441 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.251250851 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.249703863 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.249107336 seconds)
  done (took 13.686127767 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.251154519 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.249703302 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.247622067 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.251116567 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25265022 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.248638554 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.25008886 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.249443298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.250795246 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.249539561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.251827334 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.24838046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.250503648 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2483027 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.251497619 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.249664882 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.248166095 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.248330457 seconds)
  done (took 23.683952427 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251368322 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250248655 seconds)
  done (took 3.686035964 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.24898426 seconds)
    (2/7) benchmarking "second"...
    done (took 1.247405798 seconds)
    (3/7) benchmarking "month"...
    done (took 1.247823588 seconds)
    (4/7) benchmarking "year"...
    done (took 1.248952879 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24973308 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.249476308 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248000318 seconds)
  done (took 9.925009156 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.251905433 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.432063237 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508318904 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.835974461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253630899 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.255114064 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.11045048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.256271826 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.258249814 seconds)
  done (took 14.347782934 seconds)
done (took 79.847559696 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.259538967 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24364943 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.1794767 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.252737408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.262207174 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.587714502 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.261182617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.370242071 seconds)
done (took 37.607896618 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.246479594 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.946259987 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.994072336 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.247962412 seconds)
  done (took 11.374947353 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.234066494 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.186091026 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.236618413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271615184 seconds)
  done (took 18.116018972 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.870420115 seconds)
    (2/2) benchmarking "read"...
    done (took 1.57761873 seconds)
  done (took 4.634947851 seconds)
done (took 41.561900529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253547318 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249538204 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.25239462 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.253113609 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.250277509 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.25496514 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.251163152 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.25205989 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.253962688 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.253041794 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.252903288 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.25444547 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.254673072 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254323033 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251692015 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251548135 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252079004 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249894627 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250145167 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.253380644 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251600532 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252202221 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.251427421 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251743922 seconds)
  done (took 31.244408744 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.254481634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2528859 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.255682701 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.253989901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.253022078 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.254692239 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.254261627 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.25217637 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.253213148 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.255477767 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253148988 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.251336986 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.254789885 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.252145583 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255267653 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.253548048 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.254953932 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252414465 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253297878 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.251596641 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.255809983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253862114 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.252135463 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2542704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.252593842 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253364026 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.25554177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.254401249 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256464136 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.252711542 seconds)
  done (took 38.80155223 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.258545052 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.262954789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.256642861 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.255599549 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.255430793 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.255624584 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.255850646 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.255413956 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.255838661 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.255540181 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.256516821 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.255792567 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.255183474 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25691823 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.255697846 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.254998818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.257276116 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.255484787 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.256349936 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.256514451 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.255791548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.256007157 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.256861519 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.255368348 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.256414861 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.255734166 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.256381935 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.255079748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.256959972 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256132086 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257824343 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.257850173 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.256884847 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.257879819 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.257918127 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.25788098 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.261810233 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263561817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25631974 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.257395258 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.258143561 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.257762545 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25858882 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.256781989 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.256956027 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.258150176 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.257789625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.256696159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.258441036 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.257927284 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.257029506 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.258372335 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.256988621 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25707389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25823252 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.257571648 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.257684232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.258149937 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.259117436 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.258171559 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.25719751 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.25782479 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.257690237 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.257378765 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.259244229 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.258540088 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.257935447 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.257253785 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.258319049 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258961007 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258932926 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.259164886 seconds)
  done (took 91.720274764 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.2581274 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256113916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255826035 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254857786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254429776 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.257275108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256763214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259152484 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255874454 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26018053 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257925791 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257329118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256711813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259882029 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258471417 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255424562 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260345706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25685914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.258597114 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257252286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258543672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257779125 seconds)
  done (took 28.857106525 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258765135 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259894854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.255887068 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258229271 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25648481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25908938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259295346 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258282918 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258611106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256208111 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25644065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25819988 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256426263 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256837562 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257909017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258715775 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259009181 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256515026 seconds)
  done (took 23.834494149 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.259044115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.258461591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.260730703 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.257282966 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.257933638 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258627847 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258262022 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.261438937 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261340253 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.257010513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.261066937 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259955988 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.261083902 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25743741 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260527627 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257646371 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.26121351 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257532212 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260563964 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257919345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260566472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259654523 seconds)
  done (took 28.899649097 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261458488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260904702 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258969556 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257096623 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259846484 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.260887974 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.261742236 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.257403242 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.26168223 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.260935694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257681008 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263155875 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.258015129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258898601 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.258264711 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260048537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260837549 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259313422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261767759 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259795722 seconds)
  done (took 26.394901746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262500706 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26256396 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263729431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263471106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263025969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264359766 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263831148 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263515912 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263452869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264147014 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264450133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265128494 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263838627 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264954199 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263474879 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264872817 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26355624 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26512119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266107341 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264190795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264343691 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265237119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265295225 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265230889 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26373688 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265162787 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264532409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264674494 seconds)
  done (took 36.597145237 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265410797 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263433153 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261222595 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.262589798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263188365 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.260621699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.261592955 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.260504045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263580055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262426886 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266137804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.264216901 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262902804 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.264082572 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264262193 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.263671401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263960374 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.262780758 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262032836 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261669318 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265124911 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264099892 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.264693522 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26405634 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264070105 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265079288 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261700011 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263126367 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265348761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263538742 seconds)
  done (took 39.100528875 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.285615575 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284751288 seconds)
  done (took 3.770121744 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.262702865 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266275661 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.265416713 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.264014794 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262387638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26475939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265515831 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264476143 seconds)
  done (took 11.315872884 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.26708941 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.265820738 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.266985842 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.266601615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.266486855 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.26757505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274190461 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.284291638 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.267097792 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.267586541 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.273203854 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.274209526 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268452845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266513941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.265267419 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269710084 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.266079083 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.265778435 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.267434654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.266724185 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266210077 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270322256 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269845424 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.264708094 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.267874178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.279652406 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272133444 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.265657959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267159276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.271521154 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.267492455 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264292927 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.268597283 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.267675145 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.269289443 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.267991099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276059882 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286182561 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.275333387 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268275428 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267214171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.26589863 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.270246046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.270521535 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268943231 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.269733959 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.267462686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.267645264 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.269246221 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.271203353 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.273142369 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268412468 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.265577863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273187258 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.268936696 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277310049 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286543789 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273349214 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.277972536 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282278796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281944483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278412694 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27225442 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271331794 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281109624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29293616 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27685255 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285595885 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267804818 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.270331764 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.276074512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283346229 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279292716 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.27028366 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269442189 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.270298622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270517227 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269424091 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27701209 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291206862 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269787386 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269328756 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280931954 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29296478 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.27067695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.268115879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.270268683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.269331528 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.27314738 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281750918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288317069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.271061402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.270963489 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271237449 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.272302225 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.271049294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.270555627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271734543 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.268964646 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271467495 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271826819 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275256712 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.280049189 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271223241 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272088723 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.27844855 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270421124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270365763 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.277565284 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.272210536 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271312731 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.273716537 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.278378637 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268310138 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27635953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.280251911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272313957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.272991923 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.271862237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.27256133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281195101 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.297551187 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.272368109 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.272011649 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278323004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283838146 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273575761 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276744456 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271315041 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.270355376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.271272246 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275300965 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.273181521 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.275452342 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273361921 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275100488 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.270154443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.272713241 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.274604701 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274255311 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.27463471 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.273898841 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.274790253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.275945648 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273980457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275666407 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.280960268 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273784528 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275353253 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.274665514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.270893907 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273622911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274540061 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.274914014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.273918506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273097385 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273465846 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.273067493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272297486 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.274289612 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275958729 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275343875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278046311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.274233384 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.279158887 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.27495242 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271603534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274123429 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.274384087 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275899268 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.273571308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.274442752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.278884804 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.281310505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.274650888 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.275962683 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.278637865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274620346 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274777476 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274030648 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.277259438 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282908193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.273513218 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281274634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275679484 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275332413 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.274963483 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.275329925 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27452303 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275629001 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27954043 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.282082048 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288532462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284806253 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.277093121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.278946334 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27612643 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.280113686 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.278577184 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27650782 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.27540453 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276395136 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276275334 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275393951 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.278954354 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.27571354 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.276344997 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276208123 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.276747236 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276796538 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275082938 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.27822686 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277694981 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.275306362 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276699975 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275503194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276662629 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274837265 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.274917999 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277371143 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.277817719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277261453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.284936209 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.27388729 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278766698 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277078301 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.277919532 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276498097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.276370654 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278473869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.277934062 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284805636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296021818 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.278283369 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282629371 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.295251501 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.276912177 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.280292784 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278149655 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275860909 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.280753631 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284587542 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.277925562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.278379607 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.27881576 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277467712 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277424242 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.284091244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274743863 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.27876863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277526181 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.280137875 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.276921483 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.27894573 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.279282519 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.278212574 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279597384 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278334342 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278384542 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280025096 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27783078 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.278074723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.279708113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281794351 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.286045885 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284131343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.279583776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282704979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280648465 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.282588571 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28055239 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.280514933 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.27888545 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29079806 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288427734 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285503537 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280919472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280875941 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28623428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281732783 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284244853 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280247365 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281515356 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282030205 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279794514 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277969298 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281305141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279925068 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281612375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.282072678 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.283681535 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.281549575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.279609093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.27897236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.278861916 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280448198 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28205143 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.28042085 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.283416223 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28240892 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.280373918 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.282442236 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286605362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.30018266 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.28214846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281526871 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283456923 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280479418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.283921806 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.28098262 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.284781064 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.289311152 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285128241 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.2897031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.283948864 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.289810562 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.281802469 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286276992 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.289692795 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279141019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281192881 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282334552 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.283002082 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289595028 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.299641702 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.283957013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.286540015 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282703584 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.282327458 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283096065 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.283232712 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282171758 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.282850501 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292332827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.301612604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.286830087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285443218 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280891849 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.283488836 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283429083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.281977423 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28622198 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.282852587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.284302908 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.283630714 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.283617637 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.283388624 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.283127596 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282985387 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.280593516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.282638963 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28921672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303831023 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285533422 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.284833839 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.289509773 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283082259 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291083528 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301255284 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.284658988 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282872116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282897678 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.286016118 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.282440492 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.28523546 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.285789427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.286989791 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.287114604 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.285266631 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287215328 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.284714032 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.285026998 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.285711298 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294257839 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310570121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.285626268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288476073 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.281804861 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287296691 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.287420103 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.285411043 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.285414604 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.288215746 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295553524 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291988239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.285117991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28485738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287233536 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286305212 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.285434174 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.285467927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28631382 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.285569252 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.285541402 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.285443573 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289178747 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.285874051 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.286989949 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288184524 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.28839193 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.296429786 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287154638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.287177877 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287005254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.285912721 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.286937627 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.285948604 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.287095927 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288256267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286532381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.288640015 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293451872 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292888513 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.289482879 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.286863387 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.287472645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.287899273 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.288200703 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286477942 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.285992617 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.287550314 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.288998644 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.287156811 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.288301862 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.287141339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.285511124 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.286245559 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28842915 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29082775 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.294068081 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288452716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286368325 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.288505437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287120838 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.286858364 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.288385358 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.29759618 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290129644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297863443 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297931618 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.292317276 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.287416411 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29144715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.295049655 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.286333652 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.289879768 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.287367349 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.290105443 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.289334185 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.292270836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28943065 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.295908176 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289354631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.287452016 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2969842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.308315227 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287342544 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.290530792 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.293170303 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.289771074 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284898381 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.288374332 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.290476397 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297464803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.308663169 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288477728 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291315232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.289077368 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.290937732 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294666762 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289943192 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.290403557 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.287405686 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.290724369 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288540352 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288613699 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287321845 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28935337 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.289782931 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.29318279 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.297133022 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28695441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291456451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.289933615 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.290937106 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291189866 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289585559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.286783923 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.287299563 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.289984571 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289881202 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.292638714 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.292365811 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291091783 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.292792953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290502198 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291503158 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29358018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300464357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29755259 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287648551 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290052429 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291541395 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292600449 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290638125 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291569626 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.290820795 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.293616053 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29077514 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290841924 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290789481 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293716549 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306765056 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308775356 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293032068 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.29163754 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294381004 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.29168214 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.28853997 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289969419 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.295383496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.296002643 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.300469213 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.291268402 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299326624 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311368362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.295008492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296289307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.295462281 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.300200095 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.296225028 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291851599 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.292784854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.297226888 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.308392235 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292140905 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303111166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323288245 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.314135545 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.294590819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.294077257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294281043 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292273199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29500192 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.293349141 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294202086 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29378948 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.293249711 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.295039618 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298891506 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295700058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292458727 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.293856724 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.294006003 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294924788 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289932273 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.294058274 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.294153142 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294880701 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.293600103 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294329549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295577372 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305117095 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304264239 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.294549066 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.294743017 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.291656724 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.298282565 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29633509 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30517238 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.300763096 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293500021 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.294312061 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295810398 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293511273 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29191358 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.295320669 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294901303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295515403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291543401 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307416339 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303449244 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.300307694 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295797645 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295192346 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294624298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297462752 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295174369 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294921105 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.297001668 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296495119 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298471626 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.295410017 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29495654 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298438264 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304349582 seconds)
  done (took 766.098238837 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294325053 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293327361 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293679126 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293312993 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293456495 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29313281 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29298394 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292936135 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293416525 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29361368 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294229421 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293277739 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292116138 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293846238 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293915106 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293984456 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294478808 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292997699 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293072577 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29444279 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294449565 seconds)
  done (took 28.392868977 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297220196 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293791449 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294939193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297240249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294281611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297311821 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29554675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29582648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298100399 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295031643 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297516996 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297398127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294849346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.29384187 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294423892 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298987689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29850582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294212804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297125727 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294831007 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298641103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295171718 seconds)
  done (took 29.745357635 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298199712 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29707902 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297813383 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.294979123 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297697175 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.294967999 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.298443324 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298199811 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297945296 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.299936861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297303231 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.299957772 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30643929 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303219183 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299941631 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.297493108 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442089268 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299125232 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298869621 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299073238 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.295312104 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303766159 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.29576899 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.296339801 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.297123094 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298538731 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298207656 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.297691646 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299777484 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301455297 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304978923 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.298644334 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299893048 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300857362 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.299655854 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299319959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302640469 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300323307 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.296949202 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.300155117 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310041638 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320592445 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299082871 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305744489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299951894 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.300098493 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302659123 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308253998 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.298747192 seconds)
  done (took 65.082936285 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.30151344 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.2985016 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298904204 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298908833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299762245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300187647 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300468781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299614708 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298745587 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.297084262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300523772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.2980821 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298842655 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299741943 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301644363 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298332071 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29846222 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298276156 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298074202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298958106 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298999195 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300346807 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300550937 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298659515 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299800093 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298438064 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298970444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301704375 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298754217 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.298265443 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301280715 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300856859 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302252495 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.29936265 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297247681 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.30220695 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300811493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298237151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301462571 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299698992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302403829 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302199157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302042668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301460287 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299395411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300002722 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299769249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299730017 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300237036 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303167932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.302580141 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299812045 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302049934 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300717637 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303174315 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301895061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300324142 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299763356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.302609161 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300582608 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30114497 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304339357 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300708042 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304022826 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302258308 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302357944 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301033937 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301491891 seconds)
  done (took 89.658867092 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304524069 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304088291 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303963657 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303553982 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303000199 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303831182 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304684827 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304680821 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30569294 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304565738 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304263455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304686609 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304245505 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303756837 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303418251 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303998216 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304477264 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30419952 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303594656 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303524478 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305070727 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303818178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303540642 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.30402702 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303837033 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303550066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304087009 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302664529 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304312344 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303225848 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.304463202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304730021 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30468706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304607165 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306506996 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305168455 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304835746 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304815527 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30500022 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303325307 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305131121 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3054361 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304698517 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303946398 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304355818 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306830341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305701506 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304890851 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302928419 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30555138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30457262 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304003309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306473632 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305420861 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.305435477 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304860179 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306095721 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304911037 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304040789 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305091667 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305639144 seconds)
  done (took 82.118057739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306366304 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303920251 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.302272918 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303616979 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30614307 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303885024 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307539609 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306149877 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306051002 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.307394985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307912189 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304136323 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304715462 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30604149 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303613269 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304524208 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304886187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303643659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30732369 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304593015 seconds)
  done (took 27.343091064 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.304238099 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305875013 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304460359 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304298471 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307073667 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303394717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.307613909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308162425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30594083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306292505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308095499 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306621283 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304582386 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304924377 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306651825 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303777543 seconds)
  done (took 22.131053192 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304279577 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307855186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.307546447 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308248851 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304170977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.304267056 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.305751119 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305838268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.303941192 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30649518 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307088681 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307961256 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307963813 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307617557 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306358958 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307230001 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307115059 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304500731 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307612137 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309740052 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.306663015 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305309087 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308254255 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307112244 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306257961 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307053266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30538481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305884712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.304833875 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308870945 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306737157 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.307506122 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305533697 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306284882 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308935219 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305951418 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308389213 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.308033793 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.308245556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309646459 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307473613 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306772475 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308343706 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308701711 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306259213 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310195347 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307942639 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308038709 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306905158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308379701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309517307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309345054 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309390285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310005314 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310809982 seconds)
  done (took 73.142740903 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31031111 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311059948 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.308070006 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.310028199 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313667631 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307697457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309326037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308125234 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308976158 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308852874 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308398922 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310633248 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308571349 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310417639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307565748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311067271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307418253 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.30864728 seconds)
  done (took 24.811065721 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308197863 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308676806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.309434709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308155054 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.307828626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309844604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305807632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.310463301 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310827214 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307343054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308534829 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.309355416 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310443717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311096995 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308315339 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307692439 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311551304 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309988089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307294998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308125761 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310682813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310535776 seconds)
  done (took 30.0431279 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.31175141 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.310668007 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.327068995 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.351919511 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.343432649 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.311046788 seconds)
  done (took 9.19825902 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309928552 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310314489 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306218444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309426914 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309140919 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307412578 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306465525 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306281457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308092348 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30966711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305512951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30865021 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308214704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30536122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308906377 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308653771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306841865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302385997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304489543 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305783826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30334329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306061568 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301803892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303024382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303238807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302689565 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306107488 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30320423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301571284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304940262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306036849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302426838 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306715901 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302935843 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3048177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304437806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3039514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304416183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306166068 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303012556 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304938437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304415025 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305640178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302283134 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304382461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300571873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302409898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303257366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302055031 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304276322 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305229297 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303717792 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304505624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303257845 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305279454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306676425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302762799 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30030336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305227723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301877686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301660015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304382185 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302810241 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300397411 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305046471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300891522 seconds)
  done (took 87.363118305 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303146594 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302410019 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302347832 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304427538 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300343429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302121788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302022787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301285796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300482328 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303599054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306427691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303135501 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303638602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303185611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301246582 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301843527 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301574202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301641765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303539952 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307236389 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303526966 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302711278 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303377817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30270779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303207898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305632716 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303426312 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302236658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302843322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304782575 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303354651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304211414 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303206778 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301695162 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303516237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303112541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304180853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303152472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304676103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306600658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303170584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306007278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305444811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303978096 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305110008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303614914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303313274 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303236924 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304679879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305417612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304213413 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304286297 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303878666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303547722 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305326539 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302772702 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305707011 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30517273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30432806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306158401 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304117562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304358819 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30816267 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304060031 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304930119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305857691 seconds)
  done (took 87.286353885 seconds)
done (took 1784.13942357 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.39880459 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.315024454 seconds)
  done (took 13.951331899 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.467680668 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424534303 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304416467 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.354856778 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305940078 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.329153191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.321038144 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306150991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.305317741 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305511864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305294383 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.494298687 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.304851339 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30732877 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306112233 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398829243 seconds)
  done (took 42.781126441 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334131012 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312715731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42672131 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330156137 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333155589 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49522749 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.370404143 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311289244 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484434161 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353862171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.857161865 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.33317609 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311318762 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.437478783 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331005479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492644236 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560432496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.929379884 seconds)
  done (took 30.24681844 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.755144614 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304842239 seconds)
  done (took 9.301901143 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.313329802 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.328046232 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.322360671 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.346113077 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.316250804 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.374401855 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.383345755 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.347486496 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.315007033 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.363536548 seconds)
  done (took 64.651290675 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331049503 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.313294461 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309254907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307840373 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.300742735 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.300836265 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306557521 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.302574806 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.870168451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435762016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.328141722 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314022723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.308844128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31191642 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305835217 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345932295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.443577506 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306139772 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304969985 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312472186 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309851068 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392937148 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351450189 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.311301479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435084811 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.88641491 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315333719 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314355266 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418579254 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305647763 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306949383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308944456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310914868 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.879867432 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.761148663 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321102617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331773117 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318171197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304157913 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436337485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307880667 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312582986 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300296746 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.726436465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469419821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42520358 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.571930616 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.31259479 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308760912 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36858296 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310831137 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31365443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338131969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.066418148 seconds)
  done (took 109.754551943 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328068548 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.787871927 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46790548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327541926 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.092613815 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.908804648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30034993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.573191639 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347278053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299322605 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.629373667 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796591508 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301332234 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.303623887 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.975660854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3091378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300497219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.033863702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30262638 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300009919 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712769808 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31715404 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.303938217 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.461449089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337864372 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747032078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.68220944 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.591032778 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.301452161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.29883548 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749426298 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.303627843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348128424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297953293 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564863942 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640864566 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626206415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301927759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346888471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300228097 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.3032696 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.745619318 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.631301008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30020974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301777669 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744645154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.298056575 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.297741973 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.304616334 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49952244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.258548899 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301614608 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.637769889 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300203471 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.645548094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344525497 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363936658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.764166053 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297201461 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.258786869 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32561559 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298123066 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298977324 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297742573 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301128333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.631309313 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.428907547 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303877976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630878812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.739454096 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300237637 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826313276 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.209827503 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323065806 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.37488536 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298091741 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.834254834 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771986061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.325833612 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2982562 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616089269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303770279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.612435414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317372165 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302776572 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716629005 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323772474 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.362357862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.299020811 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314766163 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.920781932 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317687811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.558538874 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.330341976 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297518913 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299032183 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.310082057 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299497291 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299890599 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.305529817 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811676786 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.309234054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.589982406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321276239 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307038088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300707561 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299304723 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301712129 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519113671 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.785610325 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.30434692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302266686 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.298586523 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307699673 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.436657442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301471998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.590375109 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305259589 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300694637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321861826 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958260149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328915963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300804797 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.310040201 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14981225 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512817782 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322684794 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.303609457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300994359 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329069148 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.590166721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305207335 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342873105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302699499 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986162966 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309650404 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.3117986 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.917609089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312475946 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.260067426 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323802163 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300975966 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605204752 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.572869995 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.345592068 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301499986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.30269574 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978330478 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.339073636 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44865657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.323492423 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314920023 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499179485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.696718311 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303249365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.871403087 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.301842588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512817646 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317806628 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618784626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776119798 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305406707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303859829 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982488144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974676245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.950218648 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303068741 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628859394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.29972829 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.746273032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.30218128 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302107447 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.741735206 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.306023955 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302789967 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.303546318 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30201241 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.457204359 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476975075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.811389164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304171668 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74533113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317534941 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304591679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326241007 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306741906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65521173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36870199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.307393483 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.338674644 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.304513674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309069661 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756806818 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.23764599 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.305761958 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.458343847 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920900413 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.307221933 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305169352 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.980317397 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.61845065 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790749063 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37161648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595911835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.3141534 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341525465 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018366669 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343110396 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759376771 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311294818 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308671163 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886478285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.307568505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.672178755 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.30433266 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305767237 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822552524 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307035788 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303238026 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.60643577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308220784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554951225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.306940621 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.309652405 seconds)
  done (took 1103.648418251 seconds)
done (took 1375.575617225 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.304196685 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30641549 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296794081 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307689737 seconds)
  done (took 26.460001724 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321317244 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312582703 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313818964 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.3107684 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31295403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310722206 seconds)
  done (took 9.125461882 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.367325747 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303800441 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310924783 seconds)
  done (took 19.226220235 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.515239964 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.534615458 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.663531838 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.372661279 seconds)
  done (took 10.330366543 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312777915 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312520627 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31278845 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314359445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317101797 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.317602178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314358468 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31426719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.31666107 seconds)
  done (took 13.07579417 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.021982796 seconds)
done (took 84.485532297 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.354458941 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.312905226 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.675602096 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.939449485 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.577414191 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.400385431 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707127322 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366711168 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.182075498 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.357235009 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.308035696 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347446089 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.848795647 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.312111279 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.317504501 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.882118719 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.29730756 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.396883737 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.497195797 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.775166464 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.510132858 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.406772178 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.408778723 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.90004129 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020868186 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.393215732 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.591615355 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.333896307 seconds)
    (29/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.416771117 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 4.317621388 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.166426017 seconds)
    (32/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.321368782 seconds)
    (33/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.650259205 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428717303 seconds)
    (35/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625840984 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.311595994 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.187509306 seconds)
    (38/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.026364669 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.30865691 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914857876 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.321660534 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.39140494 seconds)
    (43/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.121980224 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.4008334 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.833552203 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.30781308 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.327668133 seconds)
    (48/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335698177 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.908659221 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.312056111 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.435469831 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.309735884 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.628491514 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297496582 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.566031247 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.367655667 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.053334715 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.146392735 seconds)
    (59/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.821865804 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.668412856 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.329544508 seconds)
    (62/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.673540007 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369268348 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.023825524 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.026054651 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.334171263 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.470137467 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.511027418 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.033068703 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.943787735 seconds)
    (71/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.312939882 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.338555161 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.310007603 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.70187024 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315719428 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.630623481 seconds)
    (77/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.659959339 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.414156669 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.1217537 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325385221 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.19099285 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.339313667 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391573278 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.392527206 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.92384009 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.61542554 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.644592102 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.460247313 seconds)
    (89/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.298525431 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.317402059 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.334407727 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.316719347 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.142168879 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.311417662 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.673155664 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.453297714 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.622207757 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.327460698 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.451605428 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603386478 seconds)
    (101/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.400724155 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.436860454 seconds)
    (103/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.507502463 seconds)
    (104/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.375156458 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.41881841 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.413521704 seconds)
    (107/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.58026528 seconds)
    (108/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.298670844 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.939178883 seconds)
    (110/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.300525655 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.739496783 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.402479948 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.699732971 seconds)
    (114/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.354180561 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.776240504 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.036738104 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.559654286 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314000579 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.527979303 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.60099563 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.300002459 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.400424293 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.313092291 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.312140325 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.618298607 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.501009377 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.715602251 seconds)
    (128/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.313894227 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.347061701 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.822931525 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339057709 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.569986454 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.303445054 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.882239227 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.34253733 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.312118416 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.721514206 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.035953138 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.573090039 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.322320984 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.380773017 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19774738 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.337087888 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.41531875 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397621721 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.376207333 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.311535825 seconds)
    (148/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.888935902 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.513498537 seconds)
    (150/309) benchmarking ("sort", Float64, false)...
    done (took 5.58062535 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.026387366 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.337833687 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.30965456 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.330445879 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.117496236 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.513285662 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733150512 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451819733 seconds)
    (159/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.679416996 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.654804525 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.334653913 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.312431197 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.867027196 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.40744009 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.313045071 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.421334239 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.035960566 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.176740593 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320060234 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.316119043 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.848568843 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.653340467 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.778597954 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.156921313 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.829950079 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.327796607 seconds)
    (177/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337442664 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.349516438 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.733514687 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389259511 seconds)
    (181/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.314037453 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.870398087 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.313898507 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.187062182 seconds)
    (185/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.041691999 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.592412561 seconds)
    (187/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.6264943 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.826162242 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914743442 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343508447 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.387727566 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.314676786 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.504478594 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.358786123 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.324396597 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.545898022 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.10067595 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.543301042 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.647847368 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.744848405 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.120245386 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.299264739 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.153893465 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.327424525 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345201131 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340193852 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.373548625 seconds)
    (208/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.029648248 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.312063546 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.325456909 seconds)
    (211/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.505004691 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44176258 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340790532 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.790642147 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.805155271 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029074585 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.959708389 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518580419 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42105592 seconds)
    (220/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.731026545 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.119022603 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.669043497 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.451525917 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.667908257 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.705066004 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.743828716 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.621781568 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.010339922 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.370247977 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.341280675 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.752490767 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.878217285 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341911008 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.890213937 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.061907783 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.421614534 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.378924016 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517592058 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374047902 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.594967766 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348125689 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470427852 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332215201 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.315424445 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.316482329 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.518243739 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.307555812 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.121126569 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.733554579 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.425091575 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.181214617 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.54262092 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.681284378 seconds)
    (254/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355589597 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.327626137 seconds)
    (256/309) benchmarking ("sort", BigInt, false)...
    done (took 6.322776529 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.519382743 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.953541171 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.115603004 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339342409 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.414999436 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.322116574 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.424758358 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343233201 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.700855901 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.317473009 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.917941811 seconds)
    (268/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.403562153 seconds)
    (269/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404062093 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381249906 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.303824183 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.307626786 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.60831255 seconds)
    (274/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.659701999 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308676371 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69476124 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.334864042 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.946192318 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.823692176 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.331971628 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.591216589 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.539476181 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414739202 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.501966649 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.559049326 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417946213 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.43334403 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.343163788 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.081287352 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32895145 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.607090331 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348976222 seconds)
    (293/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.037376478 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.598278764 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.434610752 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.30826308 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385441186 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304722546 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.604883414 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.322046908 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.545990467 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.66495065 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.365958584 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.999464883 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.400984152 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340072746 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141166102 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.788262452 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.106406513 seconds)
  done (took 909.051460707 seconds)
done (took 910.299666386 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.350329987 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343351278 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.327074697 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348685583 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.439375955 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.356738056 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.33799568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.330255987 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375524907 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.37950196 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.326408494 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354785529 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.329373886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328239852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326256121 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341314406 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.286535926 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327318184 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343572688 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33764599 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34326253 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.326671154 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.377389384 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.355448317 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330645248 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330850886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.332109313 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34712515 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439678042 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331437266 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.33250589 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.339648693 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.287012451 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32496488 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.323583098 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347281621 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33891093 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338006079 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.33232811 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360302672 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.669088934 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.33127838 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.329019212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32949339 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.33002147 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.334162598 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.330179362 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336642446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342562018 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342836785 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.673768148 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.345293989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332678505 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.330022626 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340580238 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329956747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333000124 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346779209 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.349821337 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346331465 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.279494631 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333865717 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331434257 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347257644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336978963 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.719052291 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.327543915 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334551401 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.676192609 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.33659349 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.719957086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342465887 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.333454511 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343705202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363292974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.29596623 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325398834 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329792373 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338460811 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.330304142 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340088875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345048481 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.336372732 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.332387739 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34602308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.359774066 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341707046 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332984242 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340803006 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350734361 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338366955 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.341352429 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333876162 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326985349 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341628824 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335897017 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334231987 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.333631822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336644335 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342527326 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.678339988 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350122121 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328352546 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328307674 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331133514 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346397991 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.681013004 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.336194015 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355573374 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380547789 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.333962971 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.284124991 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.336591066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348227691 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342363245 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334341644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327297168 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.285962688 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.684872099 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.347557257 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.332143829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.329465236 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345875172 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333816296 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.328237906 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.299083946 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.333675056 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345358472 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.451630393 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341526859 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.362143119 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33104358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.334945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.364396357 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348653503 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361594528 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334526529 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346175106 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.347286161 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.329256176 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343554164 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.341681711 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.332866276 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.338078716 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329308732 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.360979354 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345429155 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344206219 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353871617 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.45483286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.330891747 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.286259091 seconds)
done (took 223.739853216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393307828 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.330695568 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425550302 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330800557 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.429721818 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.427548127 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.326590512 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.327057709 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329426113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709387891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32917424 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.32845513 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.324386487 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328333671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.412947321 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330725837 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32802377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.67544559 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332702854 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.403314476 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.335324977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32956674 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.332356319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712466719 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332993058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.33065854 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403370951 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330697457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677076155 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.329405086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.335813781 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.677623794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42241606 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.350381979 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.342188764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341032068 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.432958399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.348592018 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.413137337 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.412742288 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424437413 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372922211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.326997794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.327743529 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.333240704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.334406574 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328911909 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360024771 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.33198403 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332170743 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.676847291 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342376404 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333984214 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33152875 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33300723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.363093934 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.330890175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.3344906 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.423158495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335095758 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39788968 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.712675085 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.725555842 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.335788037 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.334572217 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.333949947 seconds)
  done (took 148.396748931 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402192688 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409008525 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.44205984 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334655669 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385874324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447432139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338751211 seconds)
  done (took 11.02340801 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.341563173 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335351155 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383353639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383666071 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.336196045 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480654426 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337717514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347074151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333683633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387436526 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.336939237 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334119872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344171539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.329089602 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385679986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346676795 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449950644 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337131804 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.338641435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489591104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334224311 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34273307 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.387651453 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.347115429 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.336111837 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343600205 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905316843 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33686086 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333927535 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336534007 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333294948 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.375415235 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338322021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.334495428 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33445776 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453034796 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.336994822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334363162 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.336831295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.326793685 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.328694888 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.330875636 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329521398 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325978461 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326841382 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.350827185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327607677 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328827432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328361675 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328575311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.378788081 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328533996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327937671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326387193 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.383769159 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336102174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.328756542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.326738512 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329477301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327084174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479142591 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376465481 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.32962945 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37749169 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329362339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329548571 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.330214382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329574538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384041623 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.329861095 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377400212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.328005151 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484848971 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.35312862 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331141941 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.332718079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334104824 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329331403 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.328147806 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.335965987 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329357085 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.332666669 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.337302327 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328397056 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326840185 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4312135 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4347397 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.325180902 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.341803396 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338092898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.328865605 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381052833 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330930203 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.327669162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382591303 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.445047319 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.383366353 seconds)
  done (took 153.067927361 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.335980288 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340820342 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334007477 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3476532 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.332711585 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331882798 seconds)
  done (took 9.285026223 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.33454636 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332980746 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.333115186 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.329048671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332027178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332620366 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.332787147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334317556 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335643513 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332021993 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332926125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334735311 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.333669665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.331777653 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.333112686 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.332819692 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.329124724 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331205136 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.333540822 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333841149 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42875798 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333503415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332972495 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.335371095 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.333308031 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.331179145 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.341561238 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.3335276 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.333012582 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.339746574 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.334027241 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.331958584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.335091205 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.337342272 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.337485652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.334537663 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336537782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.333761199 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33127334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334009886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.33474848 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333999241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334467897 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33552754 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.332933148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.337240301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.338512067 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342523981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33463826 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335814113 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.335808098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.334750492 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.333837908 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335804476 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.336971233 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338748357 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340266468 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.335115861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.335607666 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33609625 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.33587567 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335182936 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337136181 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.338412154 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.343038737 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.337254297 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.336438911 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338197224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335775962 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.334393688 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.336370904 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33155801 seconds)
  done (took 98.47142685 seconds)
done (took 421.505996041 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.586498727 seconds)
  done (took 7.853025676 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.420506023 seconds)
  done (took 7.68775053 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.886444814 seconds)
  done (took 21.157125332 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.378571358 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.371127372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.357383752 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.326903844 seconds)
  done (took 26.695821399 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.570181745 seconds)
  done (took 7.832054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.331965074 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323912959 seconds)
  done (took 13.92073162 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.851674743 seconds)
  done (took 8.114514316 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.992963523 seconds)
  done (took 8.259857795 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.350709088 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.347464437 seconds)
  done (took 14.212293987 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.314080915 seconds)
  done (took 7.575200545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.475023343 seconds)
  done (took 8.736859833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339385341 seconds)
  done (took 7.603413482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.389929676 seconds)
  done (took 7.65260285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.971225661 seconds)
  done (took 9.233358852 seconds)
done (took 157.801874006 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.329395829 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.329603785 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.331895548 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.333080975 seconds)
  done (took 26.582121754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.368574955 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.369095877 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368601052 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.378951767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.373046988 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370134058 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362067163 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.361860155 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.37879857 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371680351 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.369193244 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.373465516 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.369299626 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.360696822 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371942308 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.37191431 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.38236176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37256259 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360264868 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.374343237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.338479868 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.381823296 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373954148 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336883424 seconds)
  done (took 34.104546454 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.536002954 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.409470696 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.489626814 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.390142952 seconds)
  done (took 7.086747369 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.38865849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.390853839 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.40114615 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.439973408 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.466525024 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401709304 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363024371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.357026809 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347226181 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.389252037 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467105398 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.405379674 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.473700862 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.337369863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.519861589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337129515 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338166931 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.387050662 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.441051702 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.460184 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.336848682 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.389726282 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.392438656 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407473612 seconds)
  done (took 34.901593582 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.34014111 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.348448495 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.345126048 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.337274005 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.339088688 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.337240867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.342755884 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.337887877 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.35859252 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.340045691 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.337091915 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.338741582 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.337476224 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.340331397 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.338307272 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.350864007 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.351716165 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.337759313 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.343094463 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345768784 seconds)
  done (took 28.11421816 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.334029285 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.185830761 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.68382234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587188797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.332787361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.337038144 seconds)
  done (took 27.724978064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.402135302 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536971205 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.342547842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.674715957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753708985 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.342196801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338941006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.56910979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.854641697 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853366265 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.390671321 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.403315223 seconds)
  done (took 19.727445517 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.342649391 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.335406251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.336865568 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.351111987 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.3941178 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.347713505 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347372304 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.332815874 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.393889013 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400076226 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.348361912 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.393814365 seconds)
  done (took 37.592158076 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424126598 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381011138 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.212081013 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136085727 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461674352 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547679439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.104749802 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797180075 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338548284 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608125116 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336982461 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428842949 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593008599 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334500545 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336936947 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.308912609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564528158 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818394663 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336093326 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.195197151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360816132 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335334879 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.366144705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.364264558 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546412932 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314726442 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.597205462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.112018085 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61107268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35098815 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347321392 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33735052 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611590047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973859087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434344484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347355636 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.108642194 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883705766 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.326027391 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.276312502 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.185756798 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342764234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344547964 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336901925 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.270823745 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341262271 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803534784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345324318 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.048161102 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338390806 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347234559 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432464583 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.338569837 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.908131304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428656716 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345577207 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.337735805 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341884636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910458118 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712801585 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347287054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.270319651 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.785223475 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.29340406 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95992338 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.434123411 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.334581424 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335105771 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261654098 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.246322597 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347210749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477818041 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.347802681 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975621002 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099554488 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332674274 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253931813 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865510422 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325812008 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.255832874 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550997967 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09205369 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252420757 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.274625029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246257758 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992154731 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321489141 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.664059359 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319114397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770445924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.324216775 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327429042 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333678091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.535446793 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.194367301 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310898868 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.150083472 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453257488 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329478162 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774057488 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244683577 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.31094508 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565813051 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.520493371 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315959148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273021292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523447889 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309819538 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.329090762 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322286723 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.319804765 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.893813461 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324014368 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.683082946 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326734212 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.086939465 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026751207 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31515171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.412896994 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322390542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549424616 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.055455563 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210038846 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378647662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313421228 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312273138 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.280194001 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163743473 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.220093321 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.31357169 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319861223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.321376099 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.311015647 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261811537 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.318870672 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310530473 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.090570465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537215453 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313212782 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587909591 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246078933 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460332694 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320079276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530913131 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.47681584 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.311520992 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57240227 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321088741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322186575 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322903553 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330243276 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408345011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334065643 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.323532284 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570611279 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.314751686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.315809095 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.276164297 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.094059893 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315598143 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.319252461 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222532186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895238507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290841146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31963963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202341988 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.325230173 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380904931 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319080908 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.32405711 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.03617871 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198912818 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.317754633 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.310051622 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550388815 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323634188 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.266185218 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396633009 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.522467226 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902612799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326836628 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.248848292 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.025098298 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.006598953 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313814811 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.502243476 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314869391 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322496085 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326558725 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.885646027 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900921964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316232845 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.192955401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.320645837 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324572224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.319436049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31399474 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.014645788 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704147183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321586104 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.325979518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456338369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.328105952 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248112677 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.83002957 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321447219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314276921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.090611146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350080358 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.198295212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875817264 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57559095 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.071568248 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326974794 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299545648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.346841942 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.317843362 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184628459 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334571862 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.315027869 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325991921 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.325376379 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.207962514 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.756269122 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883573944 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106352404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851625369 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213727905 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.32999624 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.217060759 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78297995 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24976744 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973331735 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49668055 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783337927 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2616802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525366898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.484414578 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044961163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326506103 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543540074 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210351165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.190816936 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34208836 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528519299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351474881 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316801263 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258404387 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.61717887 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595399574 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.182682355 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397500911 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78250814 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193785977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110774297 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.315856092 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613962191 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487294617 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.94431482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.704641324 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319152573 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320876973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869585604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324397121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.843850768 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951765666 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318652955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.528272166 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25371838 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.32777012 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327790153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.318836763 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.530076664 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.327417633 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57409369 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328499633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251933822 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323911007 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858542946 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.174391793 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324852114 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317478017 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035381224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330829487 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590101797 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.3354786 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.012445628 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319596513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.252656149 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252708126 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.010921277 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32173578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295022719 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803672003 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.745088743 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.387140588 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339747197 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165539519 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.572832136 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.3321888 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910095251 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545688445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.176712569 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342183391 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.419490299 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229870787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.319763332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.217702771 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554385495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232435941 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541678975 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.19987251 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.224112713 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.318475976 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531629039 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.221285354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320849001 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577238803 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.030536996 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.333907072 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107680075 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344775453 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321015061 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351464765 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.766909361 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326597491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391155825 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330330772 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33226319 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332196877 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488869826 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321428656 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324036941 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.335126707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413689827 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.728255941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.015535811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.094138549 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919300587 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124987083 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915918206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332269453 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321962377 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320216089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256713145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467841688 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.847924288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595364087 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451749616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.870689448 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34387229 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235295441 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347279705 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534621596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59644309 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.19295187 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32611281 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980335767 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.204193231 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333347033 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.531789292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811341867 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870130377 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439760928 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323679469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.78772098 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597877388 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41267634 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321130708 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913271683 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.341319305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632164983 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.327562822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334034597 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471475199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332077804 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961241093 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.330505569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.479176415 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.095898661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.233573328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579305473 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.775060533 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.332609043 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919068199 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037706473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584044537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392710909 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334438685 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.434897039 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471694344 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.323438473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.205723755 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323407019 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169471438 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.033859148 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333437807 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922703576 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585585969 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.321799323 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.325473044 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348035704 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.332706532 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545444701 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012211856 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547086753 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335604487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32732342 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.894629002 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921020595 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33713386 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258478389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.326121956 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561152541 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.558822817 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349459183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.777835645 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.036407121 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873468774 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.295555677 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345624417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329026063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041948412 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920073454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.025187631 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810122061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981786445 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328105961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599385957 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328864356 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339790299 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6008923 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.328075163 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324044116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338013755 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.920524266 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062020876 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.347301949 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.248908934 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.263358873 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.553903382 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02984817 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263832796 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323524366 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.512322773 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326307184 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45737011 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335580267 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.3254471 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326262074 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.06044784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607243114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.33094633 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.313361389 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.279435057 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34183565 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332608647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616402695 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332913299 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.004031628 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.67702641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581961126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328635707 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.31160783 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.330712951 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326912967 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045589241 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296119267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.914401518 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877186621 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.329963606 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.339547852 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330758215 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.542317297 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539214206 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327889366 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354933509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332859863 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342950926 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.232868269 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096037037 seconds)
  done (took 1576.641996644 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360130656 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.359524147 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356531364 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.368792008 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.390399945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39702272 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.405594889 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431376639 seconds)
  done (took 52.329331217 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.33873975 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.476717584 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.359258235 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.333618023 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.338295587 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.328427524 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.772209106 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.335876249 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.337101944 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.338837954 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.33710435 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.336115708 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.973262264 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.339390457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.330378189 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.316027611 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.33614084 seconds)
  done (took 65.19922029 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.329975043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.760449277 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.422595838 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.330396099 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.087186827 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.328834807 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.880004975 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.38954636 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.32691453 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.435624065 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.979900618 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.362794328 seconds)
  done (took 83.89778831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.33987119 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.338733662 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.339092985 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338147092 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33794828 seconds)
  done (took 7.956533931 seconds)
done (took 2003.12381172 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.685324846 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.010149809 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.94014111 seconds)
  done (took 5.212977615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.476895776 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.526328935 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.645997992 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.654185411 seconds)
  done (took 7.566147043 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.61948984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699173016 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.519804151 seconds)
  done (took 6.101908543 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.662624908 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.334806786 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.460542286 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.330021678 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.32909799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.331687637 seconds)
  done (took 20.255069858 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.335125745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.336179228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.334466883 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.337249892 seconds)
  done (took 6.60719777 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.315615227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.033618504 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.318415089 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.330075847 seconds)
  done (took 18.260108359 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082138213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.094356314 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077421987 seconds)
  done (took 7.517669972 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.343388528 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.173655175 seconds)
  done (took 9.78058514 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625691929 seconds)
  done (took 2.888558957 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.465936305 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.660258914 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.424786471 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.286241443 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.441910918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.937453715 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.869121636 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.476368959 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.272202976 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.368074635 seconds)
  done (took 27.467256849 seconds)
done (took 125.065638749 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.989970184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333935687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.539772838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.954537085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.558520885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.540243633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.744635232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.924835327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.536683197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.456892219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.955562048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.556317602 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.480590419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.338608449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.480003028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.339118257 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.556559324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.039636924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.674043292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.840179294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.746122359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.595176972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.784877269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.697140681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.563776879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.491329731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.178077033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334470146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.850203686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.274798143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.491058523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.015380273 seconds)
  done (took 187.129001637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.33361427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.330834858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.331190099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.331112174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.331560921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.332161283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.332094737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.357203885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.332512754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.344662196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.343633398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.331304012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.332181527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343995763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333981123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.34654298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.345179071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.331975739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348606136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335576877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.332747487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.331908069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.330939784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.34516333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.333135648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.331106985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.331938024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333872822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345293482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.332405317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347963818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.334770803 seconds)
  done (took 204.048633662 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.340705815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.345404348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.336446119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.352350983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.33307503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.345788901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.336075903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.339892579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.339483027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.334686924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.3332307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36009915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.333734065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334401945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.34662054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333643948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.334000767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.336311934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.340148272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.336748603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337095442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.335212074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.334462821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.359846321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.337376646 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336464091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343436651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334171044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.336008312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347183046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350386044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.336901546 seconds)
  done (took 204.150384078 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.538634942 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.344013498 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.345162465 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.299169311 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.34519221 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.34355992 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.340848161 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.534003841 seconds)
  done (took 14.360290041 seconds)
done (took 610.953605869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.566399725 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.280040297 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.541345383 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.362803828 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.10422963 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.364597845 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.364455038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.527944635 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.268909298 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.530221938 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.57731557 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.364139614 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719230796 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.362102372 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.605504614 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458511763 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.218611344 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.322567535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.664679583 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.852211129 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.616540861 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.782590906 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.526815473 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.282294328 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.719241364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.789422735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.016999782 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.216352571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363447336 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.669221327 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.975246951 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.285953231 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.419587439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.400184618 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.455192052 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.437615011 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260484068 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.399927524 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.546144098 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551079816 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.867532854 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.089781323 seconds)
  done (took 90.998212617 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.33299325 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.333972579 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.33197443 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.332321796 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.333541987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.33402904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.332252962 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.331263796 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.333148265 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.333206987 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.332684737 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.335146563 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.333125396 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.334462659 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.333772635 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.333921177 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.334375905 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.336122585 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.332800228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.332975347 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.332606849 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.33398544 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.334820789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.33413456 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.334915157 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.334753163 seconds)
  done (took 35.946648647 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.348610934 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.591203754 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.748945511 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353403595 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.346106286 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.352164134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.420138858 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.348373538 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.349796685 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.350707281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.495613567 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.349985417 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380269855 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.765328639 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.347746957 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.348501293 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.349259234 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.346284264 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.595292172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.355085451 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.435535158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.348858468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.420511362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.357708806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.365287795 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.34888383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.352804724 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.869758228 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.348936132 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.498732556 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094093824 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.419726878 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.815908273 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.755849537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.098461164 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.353542588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.350014301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.503859211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.351369175 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.349028876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.421698189 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349894839 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.755024585 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.960540624 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.362205054 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.34900711 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889206678 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.50348759 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.581464013 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357993921 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.774408763 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.349021488 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.351204087 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.349737003 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.580290712 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.356435801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.348332038 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.869699563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367018885 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.421438224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.348655684 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.349014809 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.607142016 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.348523645 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.593480396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.350388092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356129871 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.349348949 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.755594907 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349642633 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.989714431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.363377131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.350916589 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.500571069 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.595798895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915526772 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.351311337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.609492815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829026887 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.421613536 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.355285794 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.856581413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.42642824 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.355737725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.35308706 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.353632211 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.351413755 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.395342182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.422630557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.907799061 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.974607733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.884420355 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.437685947 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.364951365 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34983325 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.868785495 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.364996466 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.351574378 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.751999687 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.980699086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.363832559 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.358702428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.972790215 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.364016306 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.424730189 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.357711556 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.76417754 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.352093929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.39828972 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.352630484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.357889356 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.354160901 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.425360002 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.356694493 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.350971993 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.955573085 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.520132839 seconds)
  done (took 177.027883549 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.348718996 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.342781995 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.349377173 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.343237084 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.345292687 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.351105959 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.345306751 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.345109768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.350845111 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.344692343 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.345644424 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.346748579 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.346524659 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.347194993 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.352414572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.352737154 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.000124214 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.346156026 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.348681286 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.344529272 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.134812926 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.347920997 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.34538371 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.343826122 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.346509985 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.345796813 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.363504849 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.346152673 seconds)
  done (took 152.45129431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.351494017 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.894436097 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.351071974 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.476133444 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.374901801 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.351220131 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.47492118 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.407912828 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.355281704 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.350639628 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.351064362 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.639157138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.353887815 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.838686346 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.526397587 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.476176258 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.846588902 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.35564672 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.351890871 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352957299 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.478143404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.361302449 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.644465504 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.897994709 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.354902926 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.896219533 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.34500884 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.355070709 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.354532295 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.900384568 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.353868007 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.646036282 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.427228091 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.411632455 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.900372593 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.848637211 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.842529357 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.490746524 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.355996739 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.351094678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.352641824 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.342108251 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.891300478 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.354336673 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.356547166 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.88559085 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.368848117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.355700022 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.363392401 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.352328876 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409686423 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.411922893 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.649075913 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.896019519 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.425887777 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.373322227 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.478967587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.732799017 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.357782782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.850104602 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.344297779 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.902418707 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.360093217 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.344173513 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.354939127 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.35967322 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.49704414 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.481206508 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.851553982 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.356407123 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.852479914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.49799134 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.354721538 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.354293433 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.357488439 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.90245191 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.853694077 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.498216409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.482442096 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.539133614 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.346141004 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.35522507 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.345543151 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.430463588 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.356341068 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.906423899 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.854309611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.358254361 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.358496493 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.357266619 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.359806827 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.521716233 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906318772 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.430112283 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.846254106 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.66628309 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.652849286 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.359684541 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.412570978 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.355700268 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.652838893 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.358970644 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.411932241 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.799224395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.652199036 seconds)
  done (took 160.78619953 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.591443953 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.481100704 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.444864059 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.465384029 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.942233232 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.908205216 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.631657179 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.485240906 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.460593113 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.591656097 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.470421962 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.447201664 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.527806463 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.429890586 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.055739847 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.422098231 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.445349003 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.480404046 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.446768616 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.339481883 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.955935305 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.640618189 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.521031332 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.230418239 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.447763165 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.093691875 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.891801758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.936563278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.524032727 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.601368051 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.877953292 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.435548487 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.303273803 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.018916124 seconds)
  done (took 64.83142382 seconds)
done (took 683.313045217 seconds)
SAVING RESULT...
DONE!
