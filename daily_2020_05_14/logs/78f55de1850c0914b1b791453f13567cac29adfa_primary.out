cset: moving following pidspec: 30400
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305321426 seconds)
loading group "string"... done (took 0.644284581 seconds)
loading group "linalg"... done (took 8.169004092 seconds)
loading group "parallel"... done (took 0.168298224 seconds)
loading group "find"... done (took 1.316197478 seconds)
loading group "tuple"... done (took 2.004457455 seconds)
loading group "dates"... done (took 1.354288377 seconds)
loading group "micro"... done (took 0.204649574 seconds)
loading group "io"... done (took 0.950757165 seconds)
loading group "scalar"... done (took 40.876510641 seconds)
loading group "sparse"... done (took 12.884627719 seconds)
loading group "broadcast"... done (took 1.021487225 seconds)
loading group "union"... done (took 14.635849584 seconds)
loading group "simd"... done (took 5.240582024 seconds)
loading group "random"... done (took 10.103861641 seconds)
loading group "problem"... done (took 1.752411834 seconds)
loading group "array"... done (took 23.56331097 seconds)
loading group "misc"... done (took 1.762182254 seconds)
loading group "sort"... done (took 3.746756858 seconds)
loading group "collection"... done (took 19.502940473 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548117693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125095943 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140690418 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123219055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154398336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119316264 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12845977 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086345629 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.882907863 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148838838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118142254 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419838396 seconds)
done (took 5.380501607 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173209798 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087520714 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081983924 seconds)
  done (took 1.21605386 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067688538 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127640827 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068658378 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069149278 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072179604 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068657465 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068489374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068790305 seconds)
  done (took 1.589665831 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07281542 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070444476 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067756224 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.07001189 seconds)
  done (took 1.327689082 seconds)
done (took 5.432988671 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807430764 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214896738 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189442955 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417848592 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138822429 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183066916 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664996927 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36366458 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198063315 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097135881 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116104178 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.400365706 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127637244 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.658368773 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079885026 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099549104 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147029866 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433075815 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072013212 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086130811 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09559644 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131648974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08345901 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078693395 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153206814 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070917459 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145851564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087678704 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071620551 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.262963492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177691308 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670605781 seconds)
  done (took 10.609469285 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101508125 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102478213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070835159 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128206877 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101516607 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072290351 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077564152 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069743304 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093150542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132144356 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095104234 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111647098 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068520454 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071899079 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085931444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201297732 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083631429 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084575665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072976548 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080575887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110911508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081342568 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082536732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08272199 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131467885 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.175222673 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100066157 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100949319 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069861125 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084766925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117415421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131501924 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069124129 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06884278 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128212526 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097628191 seconds)
  done (took 4.629609083 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.012516875 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15528162 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093016465 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12165011 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13897397 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067604424 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113587581 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067966957 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086332406 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243185057 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.381189054 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635580632 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126696028 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120347669 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108845608 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073579876 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074171916 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070751874 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279323472 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102477768 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116442772 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086642886 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072810279 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072418284 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067094741 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074669875 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066319489 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07129768 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090629238 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078520783 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333448198 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12943274 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071049184 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95619271 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171085765 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070265808 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108981529 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164076543 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097082127 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144004911 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069590961 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065504492 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065301151 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160677678 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065344832 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071806942 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067315509 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085281178 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110024411 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120233716 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065919537 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066890321 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167903527 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065973876 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081727004 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.16375079 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151046301 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066759945 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288770075 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091875084 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071522813 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064831307 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18851704 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109627293 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066605605 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06838056 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069323224 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068977699 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367931851 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.064756811 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.971614729 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069278191 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077837037 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071128317 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07220624 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079889515 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079702445 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091098363 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067755823 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074224038 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067145736 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066502816 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067433643 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093517007 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375600945 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067128155 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063845421 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072413063 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063861544 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064756984 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090947744 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10135884 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067456957 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066065313 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102271131 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067353328 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064030715 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068116548 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114928318 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069751106 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112185512 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067499774 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.29374632 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103439325 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075421537 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106224998 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085310641 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076798014 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.478081501 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069832359 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076329905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069834215 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07167286 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070759318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082679028 seconds)
  done (took 21.873688047 seconds)
done (took 39.17281076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252964811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088026781 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088092337 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.088301832 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088524233 seconds)
  done (took 1.778168817 seconds)
done (took 2.947908413 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132126195 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103484922 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067269952 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10186194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067164733 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10754752 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107907758 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087041625 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103869609 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067546997 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101167714 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067498177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067024403 seconds)
  done (took 2.352612128 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083372522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086098679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072045335 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085230184 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065390559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084781881 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083617835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091415466 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083898793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075101672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065866432 seconds)
  done (took 2.026365655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082645518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086301671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071920766 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084008172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065322343 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084445431 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083559341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088483601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084098106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076071305 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064926265 seconds)
  done (took 2.018088224 seconds)
done (took 7.541317032 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076623354 seconds)
  done (took 1.21111395 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.550275441 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.520699595 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082131257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104618543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200501418 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112429855 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240833269 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087300651 seconds)
  done (took 8.210951993 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111036728 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072083593 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072594764 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071788507 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071786181 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073578659 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072227231 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073138926 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073561609 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073772335 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072736603 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073532426 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071763758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07319489 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072455783 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073314661 seconds)
  done (took 2.424042133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10033138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099667482 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076632107 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078480968 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075638445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075335355 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078034247 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077214911 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074373212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075744528 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078909713 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076802153 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076933084 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067177888 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077467678 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079508345 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074513615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07764888 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078042532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078737131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078524891 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06673573 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076859586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077516693 seconds)
  done (took 3.125399109 seconds)
done (took 16.117116991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10764428 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070837402 seconds)
  done (took 1.319107759 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079564393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08233591 seconds)
  done (took 1.312876914 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077660815 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063435857 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087217152 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076993276 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066181322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066032386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086195524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066342018 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065821623 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066076867 seconds)
  done (took 1.874672446 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066155382 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073028768 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071269266 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081769131 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073073663 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066682348 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072230157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068031061 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076659546 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065606186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070929011 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086112128 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071308892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088252524 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07172366 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070688231 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073158035 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070137028 seconds)
  done (took 2.472976865 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063493336 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064416578 seconds)
  done (took 1.289068065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067332182 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065740971 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068764132 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069267689 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066003477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065502271 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065879041 seconds)
  done (took 1.625642545 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409664984 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127157286 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342475372 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073316798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083465755 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26615126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067653751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072784254 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072551149 seconds)
  done (took 2.716217294 seconds)
done (took 13.771215884 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081608097 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088958166 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100724333 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.430629761 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095435744 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070415292 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118137782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180279686 seconds)
done (took 2.33870965 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208993699 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.827931305 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.49914371 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216435253 seconds)
  done (took 2.707203954 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349622623 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083996855 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080111604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.184728582 seconds)
  done (took 1.872136845 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067584548 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072721093 seconds)
  done (took 1.308999866 seconds)
done (took 7.266005728 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065832213 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092856439 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066208654 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067055056 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066812826 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06736826 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067172859 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066826445 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066740629 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066757977 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06694269 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067164738 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067361203 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067156306 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06760917 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067733891 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067497715 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067124031 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06765512 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067548594 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067455021 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066942503 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067899238 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067762707 seconds)
  done (took 2.842404181 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082301835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069199521 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071438208 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071107103 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071112642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071279138 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069369922 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071718351 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069231702 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071873399 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072090606 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069178549 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072318221 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069470446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071914421 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071579138 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069556218 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069613267 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071812691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071235316 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069501511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071586668 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071522715 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071714069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072219798 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069525063 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069487037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071286964 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071741675 seconds)
  done (took 3.316799612 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068949372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063654915 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063677712 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072718857 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063702141 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064197896 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062976552 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063739436 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064977087 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063569643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064811018 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063607228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064006164 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064434397 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064424877 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06775513 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081699344 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063879051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063766534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063958353 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067608168 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063363982 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063589256 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063345184 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066029219 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063366739 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063858339 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06346002 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064181437 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06393333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067810453 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067930679 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063377899 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072131702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067981607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063601525 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068531963 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063173646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064656586 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063527912 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063283839 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063506371 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063418786 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072920878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063560572 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064741089 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063636694 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065074643 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063967989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065330467 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06310664 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063348288 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065779302 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064348404 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068476833 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063081067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064184459 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062934044 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064348936 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063698822 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063014839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062803431 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066510979 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063853028 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081600622 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072974564 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063400603 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065113142 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064438298 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066787439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064919209 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079906433 seconds)
  done (took 5.908896353 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085804382 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087925828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06892904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068907077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064580563 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064572562 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073146633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064384835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069050337 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083778651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064369777 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068741684 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068833925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068578105 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064659948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069044667 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072917785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06470959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06404188 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06838393 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065143514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072460349 seconds)
  done (took 2.732118003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146305858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07027421 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10964898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075315961 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07339999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07503151 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070285824 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070306989 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070326755 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070929637 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070833134 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070108773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072916018 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07133397 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070610615 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071132093 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070458019 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070917181 seconds)
  done (took 2.582685188 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078856791 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069417001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089787919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069767313 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069775341 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068809681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07366823 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074609345 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069683633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070115013 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074939811 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069467159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06982036 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069814887 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069609314 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069802928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069304576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069439491 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074675549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073588762 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074115453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084240389 seconds)
  done (took 2.786497531 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079575472 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06847617 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085633987 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070583857 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064629297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064438558 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070056375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069005555 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070450559 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068565831 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069672555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06412458 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071678308 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069070637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071622423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06939097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069096092 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069275747 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068854647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064498169 seconds)
  done (took 2.582624253 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084355321 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067165557 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067304991 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074095588 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067286518 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067087503 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073997546 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06727635 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067350988 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088801096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067814723 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068194087 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074179255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072417413 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067512853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073890505 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076700008 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07373372 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067271287 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06791282 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088647469 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067274948 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073956039 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067917569 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067857706 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067569587 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06739562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071612898 seconds)
  done (took 3.192414705 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065771156 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066979546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066822142 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067285495 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067035526 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067135581 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067311442 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06699954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066717789 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066993587 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067056828 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06723148 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06679174 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067098293 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067057154 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067284412 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067298075 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0672266 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067463983 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067673757 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066805107 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06718211 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066798199 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067067278 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067359159 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066882369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06713686 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066880045 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066603059 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067147248 seconds)
  done (took 3.200948704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07606264 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074245892 seconds)
  done (took 1.340276193 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063952456 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079230325 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062450927 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074674899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072894005 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067545548 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074085473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073489279 seconds)
  done (took 1.753678202 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086140032 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076011297 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066981716 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078828357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07748778 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087933173 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130403814 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066710114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07681285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067335707 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085560707 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068534553 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077146108 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071974024 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076982167 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080619958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064194125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071377132 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068153151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064655891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067107353 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080245364 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076282849 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064403685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071653223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095026414 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082777315 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065621604 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073212279 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07867111 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076352988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063273045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065862263 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066205669 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064193898 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077579384 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085147546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073778584 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079325844 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066924646 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074892596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064096415 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075269178 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077503832 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082717168 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066424146 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066443683 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063963637 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067321926 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072157918 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063896068 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070965395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063390891 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078693781 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074291268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08166181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06486362 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071987051 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072836294 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073502817 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077700969 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072277551 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0760758 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065660164 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081786459 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075947924 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078328149 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063948038 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062933158 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064016378 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08045127 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095769899 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075957724 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066466695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066576779 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063808337 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073497674 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067082395 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07571534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077847875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065793001 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0707995 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07866612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070912088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072814216 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072968023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064286552 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069765951 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067436726 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086414383 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065103989 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064099462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066890465 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081715851 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075477534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065290433 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067704223 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077735064 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062878364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065955558 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066624866 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072112017 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079546842 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070089537 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070133803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079224777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075025706 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071337884 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072663613 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062508367 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065730332 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06705481 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076541806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062086918 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072311619 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069432693 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06557664 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07715706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063899437 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064944871 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077947194 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077097379 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063587526 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062333305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072501208 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06469236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067211867 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078872725 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063930459 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062725542 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063090817 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073090004 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064580526 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072780561 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068673114 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072014633 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062462804 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.190302082 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071956272 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080101329 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071032959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073115286 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077293953 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07277884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06606036 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079111905 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073515614 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068658697 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076305371 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07076711 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064150259 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068524878 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073232117 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065095918 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073803925 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068450959 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073117405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066477059 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065769874 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072654691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067239211 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068688127 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071526202 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065057611 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081541468 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072879413 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064182466 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06338115 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073583855 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068182152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065823472 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068564408 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072787669 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066590626 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064917481 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065898164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072968471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074599498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070348233 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067119165 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075838486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084192256 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065322378 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073162481 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065428934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067137898 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067216991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081086151 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07748884 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070603376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074003325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063372636 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076308668 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078585856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068829688 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064405565 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068377165 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070063016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07805393 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070129574 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067035875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064863614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072301643 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068546384 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073397973 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065727372 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068936335 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071237937 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064553094 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072221898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067073744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081573679 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073664435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064137734 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068544241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064920916 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078091432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064189037 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067629793 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069376632 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066943154 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065180864 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073054821 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063892729 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079370676 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079751734 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071456838 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06863047 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066009595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078638164 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071654975 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074271103 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073381087 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07664079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081543896 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068308621 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07296929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081583344 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066262195 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063054417 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075724891 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067337828 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064768097 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064825281 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064635691 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072626055 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072888176 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076269262 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063047953 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072324852 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064032154 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068027569 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063911753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073852266 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072071002 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069251413 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078001775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065725992 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065615007 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073081324 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064906759 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065844893 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065844749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072344399 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065452484 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071483824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067831177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071790638 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067683148 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063089221 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071220127 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065050002 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07075734 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074249036 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064736622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070711201 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0719557 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064546205 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070595072 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068685295 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.19866888 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074583711 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073399102 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072040041 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073477725 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065232233 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078705507 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06573132 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079584988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070966611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063312002 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072672581 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07309892 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071621087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066469191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066495739 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071402595 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065660525 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073346025 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079457411 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067604251 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082407608 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077914654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072022697 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072998881 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071507173 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072118649 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068172652 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070221785 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066774516 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072533291 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066165615 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07492002 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07287121 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071391085 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072326043 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06665017 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071599872 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066845837 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063183733 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068822041 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06890804 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06611807 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079756315 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066398243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068766484 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065271522 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066772137 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065829777 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063576755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07313478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074136267 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067410118 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077118846 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068948603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072512187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082760483 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063880127 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065239211 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064220818 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067819418 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079172853 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066527759 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080766528 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071573436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068549796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063664146 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066889499 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065250052 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063520501 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064411761 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074570873 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068644056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065142815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066104974 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072999317 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066945379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079343143 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065299746 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070272248 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066120729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063674679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068528217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068503801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073226745 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066848519 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067120874 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063583679 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065425939 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07034829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072499094 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065968225 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071672882 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078911724 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065924561 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073278754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068610154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063934697 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073241383 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065916067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065515555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068298155 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073670548 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073596349 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066894879 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080787371 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065735403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074930665 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06633136 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064235717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065580354 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065612458 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066140396 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068595103 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066945614 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079477671 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064267638 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072055946 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071220934 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069558035 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076265822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06593951 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071632976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070237321 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066785848 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071534597 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078789294 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068917302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072726273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065622393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071126386 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074893567 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06761315 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07744456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070649299 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065813274 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071019905 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066433179 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064762194 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064539588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064104983 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075127486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064902615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067392913 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066966362 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.197966477 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071036269 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069739045 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07982004 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073804047 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074205436 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064706961 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063484459 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066854161 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067623587 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071859136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073516978 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076438409 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072794711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069991596 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064929795 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081161233 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07608264 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073949375 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067704912 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073902848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067375628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073078322 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071173629 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071449964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067149208 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073886653 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071877734 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068721131 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076443393 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073993956 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066741762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072349217 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071772241 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071569559 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064355645 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06618912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073027411 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075345115 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073382061 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066252822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081816802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06808514 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070913207 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068292379 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06549309 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074543953 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063934586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071958604 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066828381 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066779628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06397073 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069492715 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067630922 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07264903 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068711135 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064337349 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082325984 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081076462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072481689 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065195435 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064754979 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064283668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064077301 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068066542 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066833633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072266266 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081533866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068367696 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068326403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064025685 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066159887 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073179422 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073986648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063459316 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063973214 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068737434 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072412627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07763909 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06465024 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066254362 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073653269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073052142 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0641877 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069161891 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063184912 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073907768 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082907966 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066180307 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072019361 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075821218 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079560675 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066177817 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06429822 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066622777 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072849964 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071772071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066767398 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066856777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086010711 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07400678 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068555001 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064856396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072989192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069348108 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080350032 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066766618 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066735752 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075117183 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075306604 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073609899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076224581 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077376962 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072272441 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072169844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064726424 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071021599 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064800292 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06868835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066515674 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066194499 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069491904 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071575379 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070217101 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081269259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080187982 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067743259 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062782445 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067991396 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067889498 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064036403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066429824 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0641677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064024561 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063780063 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064463145 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071341859 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074381253 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069167435 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065577142 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065348687 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062694123 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075472675 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07186435 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070601866 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062474978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.19835138 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067890885 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075930973 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069595599 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068544102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073122646 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072445621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072187014 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064527099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078209815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065755559 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073303362 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068957407 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066821431 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066399796 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073434648 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070224436 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067143633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072917132 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073112655 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068545466 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063631388 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063989265 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075585349 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064019437 seconds)
  done (took 43.794236707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10052215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065862748 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06447778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064524675 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074663477 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065509164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064719649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06583843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065541997 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067625854 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064973415 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0642848 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07247035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080123217 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074954682 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069549697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064629819 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065466092 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064768515 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065966452 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072435812 seconds)
  done (took 2.727309262 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070689572 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078694535 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077271873 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082201271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073493523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069654395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078087804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069608122 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078222044 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075119272 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077857595 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069477901 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074862352 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074835663 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075249496 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070320982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07925969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074118232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070296642 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077971885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070050094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077920754 seconds)
  done (took 2.903291427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06424635 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065138815 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071970086 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063503146 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065749095 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063917893 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069183488 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063784508 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069042265 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06863255 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068139587 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068039974 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072213867 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064110212 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069256007 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064065335 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112148853 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069028235 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065629761 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066659655 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06444964 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072972976 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064096527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064537377 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067579461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068193298 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066121392 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064431437 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065242727 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06792922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065184167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063532457 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072678015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071416299 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067661351 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068363411 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06545502 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065417606 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06432355 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064066394 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071425379 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064622832 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069194922 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072105269 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063787982 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063880347 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072472347 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065606298 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063611804 seconds)
  done (took 4.586103442 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074708062 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11338933 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070717008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093606968 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078999994 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071339838 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070019965 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095222151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065452054 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066936244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080449665 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080796728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067840635 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069721287 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070347064 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068228581 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068851434 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066982043 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071161651 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067220953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07113868 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072016001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079236627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080123655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069121421 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084566487 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066809458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069052336 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079017971 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071297239 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069095388 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069970754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079183551 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072839911 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066979246 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066926085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080056902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067872041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067475757 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065592344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066949296 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069314692 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07187346 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080273164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068076756 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072791129 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067923111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06509607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079538626 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067254708 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072023747 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080788158 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06882103 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067973718 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069314842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079283739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067448215 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0660607 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067745571 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078637309 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06547163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068282491 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079888858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067054561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071125356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080634663 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072744961 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068576288 seconds)
  done (took 6.365820247 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07302722 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096037565 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081161473 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08164341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075526513 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075688058 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075565538 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075736283 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075564853 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079669616 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075763266 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118219521 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071719934 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077454155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075379029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075916081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075992439 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075609953 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075553512 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07521695 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075680278 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081483322 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075809147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081541358 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078632349 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071951648 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075511636 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075384653 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082067643 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075305912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078469318 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074954701 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075318688 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081797383 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078399952 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075768356 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064956085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075282735 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075311303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075264055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071424363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081858977 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07518417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070971417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075381204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07514371 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08180509 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078360499 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07695576 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079250419 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075190682 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082247429 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075232813 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076200085 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082177259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084642462 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081882245 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08200046 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075545822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081648652 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081987108 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08439445 seconds)
  done (took 6.153715048 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077916738 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070616419 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083858457 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064069865 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063910864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074480843 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063831111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064355222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072717858 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075519161 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07464015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074656906 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077147648 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074730967 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074450546 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077581891 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074486315 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07451299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072493743 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07457682 seconds)
  done (took 2.767026904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076265825 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083333309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069483663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074336862 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069371232 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074137228 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0690375 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070042107 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070029924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069738802 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075920671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076541839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070158848 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074646175 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076028652 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074274922 seconds)
  done (took 2.466542841 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083849251 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071966094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079490047 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065689761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069267401 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064428168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065522167 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063443871 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06470085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07917674 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065271357 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076823531 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065592768 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064745433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065087716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071152759 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064887537 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065294738 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06513283 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079080932 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07229091 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066585626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06914044 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065401798 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071530502 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073387222 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067284517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068916669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065639868 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065734507 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071519139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072195355 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064879485 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06573866 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064503488 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065086897 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064811593 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06534249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090233831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065324539 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064017358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070356691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0652341 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066512344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06476565 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065520799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064359935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070935162 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065664373 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070800617 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065195314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067844827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065878837 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072756286 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0680822 seconds)
  done (took 5.068867285 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078726669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069042653 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063108667 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063498657 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069408204 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070418374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06930076 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069557302 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070270994 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064058731 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070274971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069055672 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070655919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069788188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070271814 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069738872 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063812607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070022196 seconds)
  done (took 2.547844115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072778783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06881992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073537803 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068413489 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068936419 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068418853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064222324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064142099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06420578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068839559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069278002 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068413692 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064106353 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068140825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06955245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068802817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0685548 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064275218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069074817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06417181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068561464 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063934354 seconds)
  done (took 2.786925997 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096414265 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086035893 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144089095 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081952126 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088863544 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074693452 seconds)
  done (took 1.871234034 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092225321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100328054 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068942017 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069066678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074891698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072465762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07285724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072555041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077260921 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07752256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073021319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077753961 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07709405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079038585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07531391 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074820593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072695376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075363961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069402897 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082548636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072902674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07710821 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073320002 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072497529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072789699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079349448 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077406175 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07746293 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072504098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077128436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074776552 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072638267 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077709548 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077538222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069303377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07699728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073227992 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0822359 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075232601 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079740007 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069765492 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075398417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077475356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076830342 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077341267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072981093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076705938 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073351749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073093526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084172487 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07529558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078514742 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075318503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077172956 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076763172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083640725 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077252083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078852505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07454766 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077338016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078516786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075019504 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078505162 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077297446 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074626358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079048448 seconds)
  done (took 6.34494163 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103892743 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069923072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072427762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077555751 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07906933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072774337 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073114259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073529788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072772115 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069956143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108409216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073334991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079400208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079570926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073258602 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07357248 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073187507 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079681068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069792487 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084379581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072948608 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07910342 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079460567 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079245706 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077911564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075017147 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072861484 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072556999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072661722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073118122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076441855 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072792176 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079104787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069723372 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079177007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073048962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072473252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076849731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072846077 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075086955 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079084957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082116464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072582776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072500934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077743853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072688709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07281508 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06969336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073212464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069834665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077645516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078143589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077952177 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07920217 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073078173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072644182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07266189 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072615727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072650554 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074821735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078918299 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074690636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083836936 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072552547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072750791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079126135 seconds)
  done (took 6.341311317 seconds)
done (took 130.136665904 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212711414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185349566 seconds)
  done (took 1.686503264 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074502184 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107130947 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085080746 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136144559 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071516279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108457608 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104569247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084022325 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074086986 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07366764 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073625356 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07617935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139269025 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071483026 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073976501 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0763105 seconds)
  done (took 2.736328263 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104584778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171379901 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111333971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071119703 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10727628 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079758127 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07119288 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084942459 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078905653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073237106 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080186815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07756716 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073096624 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080270181 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078663532 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079634615 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073118282 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080240819 seconds)
  done (took 2.890226805 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103180847 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098986825 seconds)
  done (took 1.519594586 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178402122 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136460269 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205727054 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346477771 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156902322 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.426942198 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143214839 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140928879 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115711619 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136031134 seconds)
  done (took 3.296434504 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104041298 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173175128 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300962266 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124206446 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078753748 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094326701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126621747 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084493013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087094823 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086437878 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086351532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081602932 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105848449 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079436386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078661965 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081386346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109250248 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077773326 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078643279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081123944 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109366657 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072189303 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079529476 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076976524 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083116203 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083007228 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073885503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071391517 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08078603 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077787447 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081794248 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090708927 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083607409 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109632963 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076430002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109828883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081029975 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078795529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077651364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078710513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082458513 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082319626 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080652747 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08067317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073182865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080759669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07344114 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071504553 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082816892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073097544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08338365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082156253 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109203583 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073195554 seconds)
  done (took 6.263655299 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108426435 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106808953 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072723978 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115875865 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107200486 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072748326 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108863223 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102340242 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110834992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073666106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071649906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072797333 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082069845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085294651 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118208627 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108434858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074353256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072381882 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110749964 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111109699 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072190546 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104614226 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101045963 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11094007 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071243113 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073467118 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071610386 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072722185 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078639326 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080607675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071939445 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081696315 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090266853 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079320018 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070877542 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071057437 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071369439 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081079125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081375819 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081004606 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079468079 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070553338 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070851038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071984889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07219972 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070173695 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079820648 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081480267 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079833288 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070955006 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072467361 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071223612 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071883521 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080895259 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07833652 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082131601 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081747206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071684557 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070714957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073594357 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082203801 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081267297 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080862973 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071996087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081494272 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071141247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083313654 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084715723 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071368612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074877364 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070970976 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071167715 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072403782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078570164 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079180053 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072501892 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071593157 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070855022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081106925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079563666 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071236835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078319833 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069772125 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070671239 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07210764 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072133451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078476384 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080834517 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072831684 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071197721 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071194453 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070623713 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069732806 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078392685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080757747 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080325654 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079225706 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072016851 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080086316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079302243 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072456628 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079519268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070922753 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07256475 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07179843 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078712293 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078003901 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080170588 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071729309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070584482 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07825869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080958229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070995903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078225666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080304292 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078213828 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069940809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081229103 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07075959 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079765443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069691795 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079724786 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203248482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081625725 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072928906 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07164436 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072083836 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080641619 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072861563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071517502 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073159926 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071545694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080215043 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083940187 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073338676 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080083781 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080316738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073570785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080497687 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071520729 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08082181 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072170157 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072577771 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070373618 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082896403 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071851999 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071155952 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071634598 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082190196 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071529276 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081364529 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079345794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070654896 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084846928 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079697664 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079309407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081841361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073124312 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07114161 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071471851 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071332251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079041953 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080916031 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073230858 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071249561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079479057 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082625152 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071153046 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079550756 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079809084 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080207767 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07224421 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071566721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082718102 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082976847 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080298751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080085742 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080618471 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072822132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079715396 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080208629 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071847517 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087250819 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072250664 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084012004 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080898319 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078756416 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080385931 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081914016 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082116643 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082677006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084487869 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071259592 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071380453 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080363761 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071341771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071699039 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079641012 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072861549 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072780599 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085979914 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069817032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082093723 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07075265 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080623413 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070661357 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072452816 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085458182 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071725929 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07296661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080468403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071503266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079452385 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082440484 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079537236 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071043808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075451006 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080928481 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08055245 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071952377 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070846182 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072411207 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078373219 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078509667 seconds)
  done (took 19.007050129 seconds)
done (took 38.726257108 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209292244 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157287485 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190255195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119167977 seconds)
  done (took 2.09382986 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107606507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101681722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090643359 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067810248 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096731722 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06799732 seconds)
  done (took 1.88153498 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28474206 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197610868 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18033198 seconds)
  done (took 2.009628794 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211186169 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194334205 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469436131 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287332117 seconds)
  done (took 2.606985279 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143489833 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085270765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066823435 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085161077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127343862 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153547276 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096007513 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119848099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078502468 seconds)
  done (took 2.356959898 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149552901 seconds)
done (took 12.466960667 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10682045 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074589308 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132029873 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.2017072 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070733865 seconds)
    (6/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.273028773 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.236986702 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079091199 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09360048 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107108926 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082606983 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068391809 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206581552 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223531955 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07696891 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093145179 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.371977402 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076863764 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07925103 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077923504 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108391894 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.195061487 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.12368959 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107192983 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231702368 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087277886 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090789824 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107629063 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103187156 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180582933 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.246671478 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077893847 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.130598409 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080436569 seconds)
    (35/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067442302 seconds)
    (36/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074274265 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.155025875 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084006893 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.159380744 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.229914757 seconds)
    (41/309) benchmarking ("sort", Float32, false)...
    done (took 0.13542739 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091716456 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217793928 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.149085694 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234911955 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069516521 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095351718 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068729362 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121168974 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.069264676 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198654319 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233598659 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075466542 seconds)
    (54/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.180101243 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071674687 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18374494 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067606459 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076796093 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076567253 seconds)
    (60/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13015443 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175692354 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067932805 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076130585 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21540598 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144020333 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066749407 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.233848064 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069007046 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185479903 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068395619 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176575874 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076234529 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121513766 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068148703 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0786421 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075233094 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078743378 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133940199 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089454995 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069122521 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069050114 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.095874592 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205181969 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156951039 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107875484 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.20498054 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073812534 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168250692 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068205632 seconds)
    (90/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.287373985 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079971778 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078210052 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151542687 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184237038 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.070141838 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09443101 seconds)
    (97/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080956699 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131865048 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.225596273 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079617043 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083505576 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077563899 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075485997 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067518308 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076398194 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095173323 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091043617 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072549005 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075680988 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068909203 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075142894 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 0.134452036 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122284475 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20924994 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200085794 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068794919 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096379825 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177990878 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.0915908 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075174074 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068265555 seconds)
    (122/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06955933 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075534699 seconds)
    (124/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083437632 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075219561 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067880769 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075927902 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076831547 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076966768 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075564061 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083081195 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075136327 seconds)
    (133/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07201504 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071971147 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068367402 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070804447 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130276028 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068941872 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069165491 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068972072 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078644651 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07676827 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086000905 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 0.162066609 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075086366 seconds)
    (146/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.145796308 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123786289 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067906944 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07619525 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0685031 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142251488 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135746597 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074653884 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082608397 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075741822 seconds)
    (156/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.131067771 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089203146 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076183712 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093196309 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177487974 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172905429 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079386977 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066901763 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133664585 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088827229 seconds)
    (166/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080845539 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183305992 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068338404 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11563864 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180697271 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067765576 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09047633 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143405452 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16900336 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174530253 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068555313 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175348724 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066932082 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069278315 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076161742 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075515282 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067964385 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069388588 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080169251 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122980643 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194503114 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094036667 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077767954 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076068523 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066899923 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067984674 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067257639 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068534462 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087771094 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069286999 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071061385 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067675592 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068875656 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06685567 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070651398 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070090788 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074891989 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075793937 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.132202419 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213455462 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067402067 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094221703 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070420714 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067376696 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073894878 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067810829 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066730562 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068337174 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.235027687 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191990717 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071191667 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080171408 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077871493 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084588564 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.133791068 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080249678 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139524999 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068981204 seconds)
    (224/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18447694 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075054486 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068854963 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.133825062 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076839916 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136814077 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073670278 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068305793 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07774313 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069066406 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071742059 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079492561 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224691266 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068451345 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06861868 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068912918 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131570414 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069418043 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070290237 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124765548 seconds)
    (244/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.131624356 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076772995 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067328278 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067735565 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136405074 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080976447 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069039158 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070376026 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.13564628 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068818755 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174568074 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092497866 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069283331 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068520802 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069619138 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072923451 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081026674 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06847477 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077368655 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068706158 seconds)
    (264/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069420843 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075184733 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095399883 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073388608 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091624886 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0803989 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069832805 seconds)
    (271/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.139795475 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068358749 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069859984 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070389103 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068364988 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069318116 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094266016 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069671648 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092630346 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069574029 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07365218 seconds)
    (282/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081320135 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074807374 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112345833 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069197551 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125883468 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068741168 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070533275 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068135537 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07587244 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090283593 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068143686 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069335946 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081147284 seconds)
    (295/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070758453 seconds)
    (296/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080259508 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081901254 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075158253 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069154824 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089241718 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069455239 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067634008 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067826448 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0671216 seconds)
    (305/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.080914436 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068274223 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130004646 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067549123 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067876898 seconds)
  done (took 33.788052211 seconds)
done (took 35.150354853 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088086676 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100971543 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076058568 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096723329 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084234852 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099423224 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076459718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081552007 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083645451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082449774 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081972448 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075422288 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077825998 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077601409 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075572084 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100585385 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082815027 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076693581 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077063993 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06806005 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07685719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068502951 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067744015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075004295 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079934605 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075438629 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077783983 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077651701 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068607309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068649057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073869785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077280092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068246595 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081061086 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0773982 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077028897 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07842489 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080843455 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068214875 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068976398 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078286493 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068265549 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076187821 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074549248 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073020438 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075201676 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07642629 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081074045 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101089989 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073917277 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078682886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079450689 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080112933 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073661601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073749885 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076277336 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07442268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100242809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07656855 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073542622 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078739016 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07741689 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074452246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076145246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076195674 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078716486 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080254831 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074881909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07845326 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074837008 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067982016 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076262477 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072654662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068236899 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079578754 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081056351 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067973754 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072401498 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076278753 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076554298 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067861157 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075902616 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068245581 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073070425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073311578 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074961562 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073249612 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075504632 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068057639 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076170806 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075310365 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076197468 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067739113 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081197627 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068330442 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07418686 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068147876 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068161448 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067626541 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072986117 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067802273 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073276645 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077383546 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067214298 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072765902 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081658912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06822076 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075545328 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067158345 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067679805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079694894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078070148 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067591497 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072820002 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067341653 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073217235 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067799793 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067622301 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067503724 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06744743 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072021631 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067200581 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072387231 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072877765 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080430839 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067478718 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072162133 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072843125 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067569015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074875815 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068127536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06720135 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06657641 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081245861 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072607721 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067442765 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072857369 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07297997 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.0756309 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066707697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074805109 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07297454 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071880735 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073740363 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067017631 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079150597 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07185427 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072728393 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066405694 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066403435 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066330602 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066495407 seconds)
done (took 12.861495428 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069733611 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119222579 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09574425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096302028 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085286216 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069281741 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076562533 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094693259 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070619212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099948426 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091431069 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091039983 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113199424 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068026206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06897523 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069992181 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070230778 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081191192 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097559999 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09143785 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108998324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068750678 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088959839 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089601021 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085871707 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093394526 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069744316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070361977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071773864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090214104 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09478334 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071895952 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069918357 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093822122 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08753031 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082934347 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0693352 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077950629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069756829 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068672399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07032419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09054079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077602063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080036289 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070798738 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077159179 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070721596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085565291 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088468753 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077917005 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085213194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094113444 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073396546 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085982911 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067981938 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085322172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079036922 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069230934 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069486524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074088203 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069423153 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071249416 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080890013 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07869048 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074214841 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084812358 seconds)
  done (took 6.784306545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084893741 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096711158 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08594064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086365001 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068747432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068970616 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068983606 seconds)
  done (took 2.013773227 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067315356 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09336641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092769136 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093296897 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083173159 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.0943198 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076885126 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069440712 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099124639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068234135 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089556932 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101119933 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073018619 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081287979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095185339 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069304299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09463995 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069766816 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070741511 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094157394 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074288349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096821188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08086985 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069547892 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082369209 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069938187 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102356222 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077208961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07081656 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0705424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070149955 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097095112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081969274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083529301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07045695 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08463783 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083485951 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072687548 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080400774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079038623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082874367 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07040998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06810937 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070691842 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072142244 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081139149 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068155361 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070686806 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070242397 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089445664 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068240406 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081771991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073300134 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075541557 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075367172 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074908391 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077853643 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071015606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089759651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070794602 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086782639 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086060255 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083185407 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086269707 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069866243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081937467 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082646078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07056876 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071266593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07063868 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086158184 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072507207 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070953108 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081171744 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069259148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094057937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094191827 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068749378 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083788333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070086127 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070529672 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08104412 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093839549 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075380815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070791978 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073523053 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071661495 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072566429 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06822137 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072939445 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070783816 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075014607 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070723132 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073469564 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07215153 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086582108 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068889412 seconds)
  done (took 9.064955325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06954273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070683128 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071872223 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070310179 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070401564 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070652752 seconds)
  done (took 1.899954912 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091405289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070587057 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08378312 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071032663 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10685025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086583308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086589708 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080656905 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084361032 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.0824802 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0865117 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089498294 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091445614 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072929744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086246977 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071402771 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086550248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075239829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082563649 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073343899 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084301999 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072732157 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07384317 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090224091 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074674889 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071503762 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080112806 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082017146 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081729801 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08065968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072800089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074575177 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077717287 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080155824 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087072266 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077813664 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070623948 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077097709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073765229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074639101 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089000397 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072868987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072853607 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076736534 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080483866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080448399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07657779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079306368 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086204492 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076888689 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077468119 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071013434 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074042952 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076986713 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077747333 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080266624 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077180054 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086170344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072486021 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077604832 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070565111 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074307809 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079570133 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074393409 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078343178 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076631369 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077285918 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072398459 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07307235 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070080603 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076864303 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070447543 seconds)
  done (took 7.124502084 seconds)
done (took 28.356380981 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513195804 seconds)
  done (took 1.944300229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611465993 seconds)
  done (took 2.074462672 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.374949465 seconds)
  done (took 8.830261154 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381949819 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468071535 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748783738 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133929882 seconds)
  done (took 3.23193391 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710696598 seconds)
  done (took 2.175996748 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236003836 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230512232 seconds)
  done (took 1.939701144 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348450196 seconds)
  done (took 1.810353038 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086876005 seconds)
  done (took 2.548482215 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234609261 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167221201 seconds)
  done (took 1.867288167 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452315334 seconds)
  done (took 1.91551422 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.212109426 seconds)
  done (took 5.676143155 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224217604 seconds)
  done (took 1.722310008 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234780006 seconds)
  done (took 1.701137725 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75542527 seconds)
  done (took 3.222234904 seconds)
done (took 42.133902994 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082802583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087634615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088453767 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084314501 seconds)
  done (took 1.789388569 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074840523 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07356268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07705612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072852183 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076631338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07325447 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074773094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076156279 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073020531 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073388462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073171693 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073296084 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076283776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074687772 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072289632 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076045933 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077462849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073828724 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076775785 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073065117 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071175785 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07620677 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076060314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072184899 seconds)
  done (took 3.254423909 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078387593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075821585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078202772 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07481964 seconds)
  done (took 1.780202313 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076637401 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090189655 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088911914 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07963509 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091315677 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086440288 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069729711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069562546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071290472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07946603 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068760001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0960387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088600701 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079378639 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081491015 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065966416 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068259236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087836818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079963836 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079866666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070721897 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079191064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068850003 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089920053 seconds)
  done (took 3.37880686 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081562724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068550927 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083387887 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094342287 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095912296 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068628919 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08280876 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096577656 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139991328 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068783897 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074803523 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069274521 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.115186403 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06868581 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083969582 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112593952 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115618278 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072208002 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101948215 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068855779 seconds)
  done (took 3.243545472 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083182055 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074462117 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072670933 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068055344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078286892 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076227263 seconds)
  done (took 1.935230492 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068307237 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068799187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070369342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069250282 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074886188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069974585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068727157 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070597584 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070210737 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069837819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07065106 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069004458 seconds)
  done (took 2.317985804 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190440226 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07183542 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069500186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068909086 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07323662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069215727 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084622407 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070119381 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097275365 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069495764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069109955 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072049614 seconds)
  done (took 2.484738035 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192117652 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076318047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223114878 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147735405 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105894083 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112587572 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114849218 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111325466 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136334286 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099425957 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156913474 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162258837 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106473448 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131071136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089972195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123231897 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146314994 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158981533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102395506 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157633746 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138764181 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125395316 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144248733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099974825 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104072361 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11581818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07399346 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079997616 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161962744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125618523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139081636 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10827994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093006342 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169055829 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164952311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134941976 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145251275 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084301529 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121280188 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132317561 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196857791 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08939086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152236466 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104962366 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079784942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126043382 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111579456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117153019 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101825754 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088426529 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276937555 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173502446 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129355726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086905242 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119948668 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108336352 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113256554 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117184633 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172218354 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151335942 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124214023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072179955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110208502 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146151661 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128701986 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107505805 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121187421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093044821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126944425 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151289325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121065102 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139077696 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11571868 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08691396 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118401231 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133587779 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123475486 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165221172 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120189338 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073757848 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118786021 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098580935 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080832035 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14626297 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076214786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168070052 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099045614 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124430703 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128224134 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10870901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10838439 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153206346 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137451516 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104337866 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087253165 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102528021 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117596612 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139837635 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088057411 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107103511 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111839488 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079532342 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129394154 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075134215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117981324 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096341144 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117165859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122409079 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07921066 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118087121 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245380295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102687406 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126519829 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15294897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088304508 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081791201 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160608607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120395798 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103423601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138060862 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153092348 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120965409 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097665618 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140546705 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166796312 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090933254 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156311543 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103081759 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084663743 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105922306 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120999949 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110196279 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122548537 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081461924 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118746498 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158170445 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075616934 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097152481 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13000958 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08171753 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080999346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104600374 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103218088 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097042958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101427929 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103793148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133946117 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120504632 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105280248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120837349 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097558048 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159337449 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087822081 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105172372 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104204148 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073381196 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12909216 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148329747 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079768084 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154000284 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120525786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114023667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116118907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08351408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132292707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079220638 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073995013 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135276761 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11080173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106481621 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143597022 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257290229 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122041721 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119248747 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127866637 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125240157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126228183 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107049364 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089493688 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114061548 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126777369 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074129962 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092531285 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082576807 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102550643 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094409256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083988589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135276823 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117881161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109866985 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113394488 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096198997 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14438775 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078873578 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120666228 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120305679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094985282 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148979349 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14497588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129164136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101130331 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131420294 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074068765 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075125308 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089725749 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121253868 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084737641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084614071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11231103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145188368 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123232957 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132836768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122083382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11517642 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152810072 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0734921 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119519983 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139165275 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119059567 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104744808 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091912466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09773428 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138739067 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103710172 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173774777 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111845319 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119152552 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150348877 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100628486 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078909486 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102306561 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126178827 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099393649 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.284430663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099466251 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087953189 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107711769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078993478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099486937 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122565602 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116103219 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13489239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110770068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12700935 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078587651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110735975 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121370906 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119042151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084489545 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114410124 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159781243 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096738534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114424479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144424288 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079531744 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138020884 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165943299 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139014364 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084969115 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104200483 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120005227 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123901507 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116078819 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134469217 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104135243 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134704244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110013173 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085577045 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086743224 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09586574 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103317614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112902919 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104097711 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113636127 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096334638 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126360611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101754265 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10985584 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116275305 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10002901 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095783109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096260905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167172146 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115342231 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161764239 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099419318 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137337325 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153319528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07618642 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079627484 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080930595 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132284911 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084101329 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12471776 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109373602 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260509531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123097165 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135216257 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097078421 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072590852 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109004809 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129618956 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121181265 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096667332 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103718526 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152401577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118283901 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079431857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110636204 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115014131 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104091892 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165795852 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082368107 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108959065 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077857335 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080581707 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123580145 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145014065 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084067164 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104827677 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119172062 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110594287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124006492 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098524063 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110975326 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128306913 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142749147 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123648968 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091243298 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109497671 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125781608 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149411444 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103413304 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100784667 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168107122 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146550611 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15353096 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088563194 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115918886 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112913383 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108668558 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13365474 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085177765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154408508 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082287752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130594738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099829531 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08922769 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124254525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112052304 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087800971 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137755129 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113982078 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082097834 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079360629 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257235425 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11779273 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102735678 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076681608 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132348232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074422848 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131351278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163959277 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081252396 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104625103 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095941527 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082546884 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102988789 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101472181 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086750358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100227672 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160910079 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088065088 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141435143 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129004477 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109288187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132774709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103433464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643950243 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080647039 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146293513 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115294081 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169790503 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099061451 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116590295 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109588619 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119108434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137814088 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101653168 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178979713 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126568878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116349254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080132548 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101464922 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103814747 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089413854 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10616193 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113112624 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112029024 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095358012 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116071371 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119771353 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083438549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095625543 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149229795 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114534045 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137667617 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133346306 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084408312 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115066314 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131693097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080257464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115405974 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14254479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252112918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101591287 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0841192 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101277144 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166457907 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07403437 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152873963 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118414086 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109474517 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114304796 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10931622 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126779796 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102253697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119250238 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093280487 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108853035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149345859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083918886 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079794303 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10493621 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109553938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097495074 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098182856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099714722 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146690794 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073337066 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098500651 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113898784 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139891476 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164938647 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106227867 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08452505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116819329 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115615399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113220392 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119693145 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082631855 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081803782 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082755812 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.102300381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123438406 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113005223 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118495006 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10854137 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154974079 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084822534 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227179351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096438554 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104802344 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090269199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080850935 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096406757 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096643244 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104096169 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110896953 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167939025 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095532761 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090868803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093097688 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075712808 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083967146 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121910574 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107237493 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114281674 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102423177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082394116 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10164642 seconds)
  done (took 58.029278587 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104313854 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08116011 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101857634 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146421538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122193117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199986724 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150939083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189253119 seconds)
  done (took 2.661740281 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068479297 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095443848 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106745337 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086181615 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069906907 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071124708 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232057104 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08418267 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070155061 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094956974 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080826178 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071918148 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452991914 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072275676 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070118483 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079918275 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070757465 seconds)
  done (took 3.445974871 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383451201 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611953625 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347053654 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078321447 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.013094447 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089231333 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222365002 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138550588 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082838985 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542114377 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370678626 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136066993 seconds)
  done (took 18.598384649 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082054016 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078958469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09326013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093667692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080438927 seconds)
  done (took 2.00577324 seconds)
done (took 106.561292804 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0821422 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439223839 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072480657 seconds)
  done (took 2.115826581 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091357731 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0918618 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091768375 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08980109 seconds)
  done (took 1.952983681 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074758737 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079692014 seconds)
  done (took 1.735143731 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231992811 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178769432 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099728959 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083571639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083182639 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084025887 seconds)
  done (took 1.836688364 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072847602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075338255 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075718487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076236385 seconds)
  done (took 1.880780442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068265178 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069195282 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.07138951 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074213047 seconds)
  done (took 1.864690575 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084780929 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087579047 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0818769 seconds)
  done (took 1.835878732 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100810571 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093460398 seconds)
  done (took 1.776992255 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081919812 seconds)
  done (took 1.665505002 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089641902 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102397532 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136434029 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118820484 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142544117 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118531238 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087426123 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08897285 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082180884 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089320144 seconds)
  done (took 2.638237446 seconds)
done (took 21.475083124 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079388777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378992359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363440269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094830013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671275642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36012461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00086396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09795177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144960129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071268789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089181346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652293485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987672457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329665882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975418251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3330687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65294519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071543331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071103915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071339768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981712376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071226396 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071281799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072336311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65149566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376569975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073090018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334710161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072886905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074253375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360205588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072794196 seconds)
  done (took 16.271228644 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070958537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123781703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07589668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088823847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074089493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073059909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075446878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072668488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12470372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071260167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090388419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071427917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075215251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072217494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09227237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072123308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072598039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072878327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07262191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072895944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0928762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072898811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072429186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073613438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072835709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08526453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075934504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072708889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073446207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074921897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075954637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07341355 seconds)
  done (took 4.127398176 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117249467 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129441659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077499483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110583001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116061227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07424288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151406407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097559292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131732652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071623015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089586003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07198842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107132624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073162532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093420935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073180156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074075387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073303574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073023104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073297846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093560793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072977793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072834995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073353996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07355772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08694441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07319596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073233524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073263982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074821008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07655481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073805165 seconds)
  done (took 4.394832474 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070618501 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075582223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083764243 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084236581 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06957755 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072620272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074237019 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069719993 seconds)
  done (took 2.199387295 seconds)
done (took 28.583433609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07851411 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069811281 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074457252 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089227374 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076400387 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082051389 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067599572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077405456 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074670662 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074739063 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076351748 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070283774 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073035584 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068081221 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075094722 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069151346 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084493717 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073814179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084493072 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084278558 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072840026 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075860573 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078236932 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084023439 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083800594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084164159 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079886194 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076299045 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070731099 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073066179 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073992553 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083667716 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084400567 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08456182 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070023337 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070405837 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0748188 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071954607 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085174745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079737294 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072007099 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08007396 seconds)
  done (took 4.803896138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084773678 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092929774 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086385541 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083124514 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093986684 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085811174 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09035181 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081317527 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080557911 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090458904 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078096146 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085054732 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081887484 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075787076 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080870699 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078485606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083581118 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076931259 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.0805491 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082040741 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091177219 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076479423 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090962158 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083191682 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078719909 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08378736 seconds)
  done (took 3.786825795 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074194459 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08836558 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095963536 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147809755 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114520728 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082565443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08420868 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095613513 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099257978 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071268296 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075719759 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095577212 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096141824 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077279743 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070933292 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087544801 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086935305 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072877813 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078248338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099870085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091789859 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088776438 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097272981 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087547483 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070179678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073093456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075570697 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087444603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073053134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08220264 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073492457 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0773471 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071738774 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081767286 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073886036 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070101606 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09533016 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081961863 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08296477 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071097852 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080622851 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072457715 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096244039 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130847793 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070079886 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07524524 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074403873 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081737133 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070313175 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098171428 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083048565 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070132667 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071106552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069737782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069740883 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073168743 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072681701 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073380132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080721043 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077353359 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092880264 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075650701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088360685 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069798237 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080920831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069883694 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071919116 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069722444 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099343377 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072155121 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115939584 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071560173 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069268415 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081888445 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081072167 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077281505 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070316943 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088528854 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082627191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074507797 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079294163 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074403236 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07486008 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101836269 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070935536 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070077957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069407928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074412508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074346597 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071112338 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083166703 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069734954 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074195278 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089258632 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07010619 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072082519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075021009 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073591622 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070022472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08222388 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074896499 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071682233 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08146174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071415119 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074298942 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083996241 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077658927 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069537648 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073258949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07512205 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072191663 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072172499 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074187588 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072709698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078329292 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077145237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076773399 seconds)
  done (took 11.004139226 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165440241 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162116254 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074867576 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15418143 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080849157 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084030229 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158047368 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099608129 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071837989 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073666487 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072186762 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114338918 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109795134 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12445212 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085096494 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072778793 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095535085 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120584817 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159998157 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153347338 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095508499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080726667 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075092285 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073978211 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073901297 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081410194 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092382587 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080673477 seconds)
  done (took 4.606407608 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078803484 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106161671 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076036678 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095001794 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092000261 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072592808 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07436214 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073813065 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088731795 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081541643 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071893796 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078052781 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076482452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075272496 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072804241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078966932 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079532723 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071496918 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075562553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077762927 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082255219 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097560036 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076064468 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071969259 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0747192 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071994771 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08022333 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084896141 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072254895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10836889 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069832243 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077427353 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090074079 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072806237 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071605044 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072081746 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072270868 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072094741 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073545789 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07051029 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070886505 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075481437 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07130241 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080559464 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08530952 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073814653 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074211635 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075079148 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074820003 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070027695 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074704328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074561268 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075041798 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079628251 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076246791 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075144416 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073119767 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100734973 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078112885 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071223919 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071089952 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070727762 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074665321 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.08162978 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087520314 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074075701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071018047 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072027514 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085370826 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084878853 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071164928 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076742612 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069686523 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073974088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074794879 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074397168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072606369 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070464091 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071277984 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071763633 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076797939 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071436441 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071186428 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075411393 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070229101 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070719013 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072317868 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074147361 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080889157 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071131287 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075826518 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07292253 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071023604 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074965962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077964647 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075608372 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082956146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083311238 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072159145 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070224927 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086083948 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074774996 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071243101 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0779573 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077065513 seconds)
  done (took 9.703163862 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092204578 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071290571 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089040328 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096296488 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081986003 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078033973 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082280701 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07162067 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088759689 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076986217 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079856538 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07064745 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083227187 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081941114 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072387331 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082311244 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075141251 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089741136 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086901078 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07057149 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08059659 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085221209 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083873646 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087231899 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086044854 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087433387 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084164138 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082288527 seconds)
  done (took 3.953121025 seconds)
done (took 39.452056198 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.686528609 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.851901847 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.67119542 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.885478157 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.737772766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.89631722 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.765814008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.687222284 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.799038597 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.711551283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.948252983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.896154263 seconds)
done (took 64.284096375 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.714192468 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.819748255 seconds)
    (2/2) benchmarking "String"...
    done (took 1.918688435 seconds)
  done (took 5.344975923 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.866551325 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.332702015 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.902070089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.664480129 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.671459632 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.923350995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.446044183 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.114516794 seconds)
  done (took 29.661685524 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.848295972 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.890090799 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.396918225 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404471552 seconds)
  done (took 15.190946525 seconds)
done (took 61.476497305 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.714649837 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.66891778 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701742842 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665407576 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.758996968 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675588902 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.900610377 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.72493761 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.667130546 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.672569476 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.669772259 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.152935392 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.674802537 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.796986305 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.671742467 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.667359858 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.717190556 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.154856105 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.819447324 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.678598357 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.677523458 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.845838027 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.672134944 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.671140964 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.678531503 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667926024 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.075250612 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669878902 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.280078188 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.672002328 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.707682105 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.148758638 seconds)
  done (took 200.528181434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.666193237 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.661383011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.738967635 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.685533315 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.282887391 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.858401638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.763685306 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.304705075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.66955697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.670073754 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.894690631 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.667584285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.920928698 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.613648725 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.703672441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.701626634 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.779775224 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.92841064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.709753346 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.814035328 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.6884231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.732457524 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.678316991 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.876109271 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.713829526 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.703866309 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.673122717 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.676295616 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.851753278 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.753504873 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.692616587 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.705973039 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.867650518 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.538179329 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689897002 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.674326247 seconds)
  done (took 166.160693691 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.855588321 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.670155102 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.668196088 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.671145496 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667500483 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.67468825 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669543234 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790035638 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794100323 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.315468642 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.081046062 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726050216 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668259499 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449481262 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.668219536 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733991112 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.681071154 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.669504242 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684425983 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.698272512 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669982237 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670258063 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796318316 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.680903204 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.6729028 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678549401 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.670593352 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.674989916 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.058046642 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.670307541 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.85321928 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673347541 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674936001 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.910555349 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.671297996 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670725841 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.504854878 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.208685306 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75022877 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672036823 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675758543 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.671088017 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.670600027 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.888622443 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.670964762 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670403531 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670990812 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.671161215 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78711885 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.675017993 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791931249 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.674617662 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151386223 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.675185781 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.67111054 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.271880696 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.538153137 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.676482452 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.67392114 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.671396269 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671572278 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.68389441 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.231320934 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.745207682 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.672691285 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.672966263 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676322405 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671404532 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.869039677 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671297215 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.923615705 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.689743971 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.802492424 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793322894 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67617789 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736120887 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764191484 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.672607995 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.672001255 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673383016 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672035225 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.752665535 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672448584 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.779984306 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.682699267 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674025318 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.671761828 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.727556197 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.672981965 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740402349 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.67327145 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490436573 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.676492716 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672649783 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9130848 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736204378 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.672728575 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.67418615 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.759794972 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794528719 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401262476 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.676113871 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.099452023 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.760725985 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675804268 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.798502361 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678299451 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752813688 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680108227 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675755757 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707620814 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674527734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.684469427 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.672263661 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.047474578 seconds)
  done (took 389.354473068 seconds)
done (took 759.564241809 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.306056608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.270277385 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.375949658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.28786803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.259290104 seconds)
  done (took 13.113010861 seconds)
done (took 14.726562095 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756497797 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.758901101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.694922717 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.7576203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691649192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.756249308 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.740600998 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.696068537 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.724737251 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.696404265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.724506995 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696339767 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68270273 seconds)
  done (took 23.991045682 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902832382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908462969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.7392619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907782941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715214284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.920734598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832390645 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82379499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.812531495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684921991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681913943 seconds)
  done (took 21.545016974 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.908914705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911770394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74526338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.927050458 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719002382 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912007848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829805457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818345444 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821579701 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.686130862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683517747 seconds)
  done (took 21.578691018 seconds)
done (took 68.729651127 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.678633743 seconds)
  done (took 3.293289082 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.696725926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.852109605 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.678708452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.679295286 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.678740663 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.67995287 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.679742271 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.678889263 seconds)
  done (took 15.240719509 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.678986123 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.67811319 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.67869519 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.678450255 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.678687489 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.679861296 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.678104541 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.678537471 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.678888191 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.677856072 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.678610581 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.679597394 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.679300343 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.6781789 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.678565886 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.67887467 seconds)
  done (took 28.476272729 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.6807049 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.680553381 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.679621511 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679468955 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.678929248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.679339888 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.679669558 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.679578074 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.678908864 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680049795 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.679794492 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.679230122 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.67909205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679895143 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.679650693 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.680315445 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.680399241 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.680261664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684895611 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.680196096 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.679381019 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.680070464 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680839546 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680962867 seconds)
  done (took 41.940570174 seconds)
done (took 90.566586537 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.451407402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.290700953 seconds)
  done (took 9.360537109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.68472429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.681236291 seconds)
  done (took 5.053209412 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.681248176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.680287518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.680902835 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.680713909 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.68149835 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.680311082 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.682502037 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.680610748 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.680687854 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.680536516 seconds)
  done (took 18.42720391 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.680687498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.680925547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.680887654 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.681319194 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.680822589 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.681282768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.68082278 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.682325871 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.680650939 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682141934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.682121703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.681458194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.68075817 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682040644 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682128317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.68135895 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.681470617 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.681499785 seconds)
  done (took 31.882386013 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.682809308 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.681660359 seconds)
  done (took 4.983048571 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.681713515 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681305163 seconds)
    (3/7) benchmarking "month"...
    done (took 1.681994327 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68185632 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.682580732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.681473859 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.681579068 seconds)
  done (took 13.391733761 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.683268686 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.827517477 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.890495345 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.293588601 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683491664 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.686092555 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.601238276 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.6856342 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.687738329 seconds)
  done (took 18.659139421 seconds)
done (took 103.376635985 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.518307901 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.682902247 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.965812519 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.776178304 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.70098911 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.018664991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.699773825 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.960476237 seconds)
done (took 41.943198599 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.710359432 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.492786538 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.511122521 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.827374355 seconds)
  done (took 15.45090124 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.68084282 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.964375484 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.704280741 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.516486059 seconds)
  done (took 21.48890169 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.044363513 seconds)
    (2/2) benchmarking "read"...
    done (took 2.027554581 seconds)
  done (took 5.69630227 seconds)
done (took 50.96894634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.683461864 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.684581718 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.68392258 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.684603728 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.68350614 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.684137404 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.68411801 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.683834691 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.684366344 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.684267185 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.68420425 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684095306 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685227575 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684541439 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684865932 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.685064068 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683905465 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.684116226 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683796938 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.685084993 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.683669688 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.684966686 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.684131057 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.684806174 seconds)
  done (took 42.044947044 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.684905915 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.685278459 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.684756323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.684780335 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.684999137 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.685324275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.685023127 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.684821793 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.685785592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.685116502 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685539812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685567516 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.684637313 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.68596805 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685113379 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.686346368 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.685151842 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685653069 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685404371 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.685538951 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.685550312 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686590343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.685418277 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685490218 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.685885151 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685981929 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.686024724 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.686533054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68645673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.686520095 seconds)
  done (took 52.189801544 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.689769927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.694198326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.686556231 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.686380783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.685634248 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.686558949 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.686605024 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.685946771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.687191963 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.686724118 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.685960851 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.68682797 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.686948052 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.687818368 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.687159383 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.686726723 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.68716797 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687663597 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.687382555 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.687138715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.687309888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.687670236 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.687930482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.687826312 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.68771634 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.686980702 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687399572 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.688481728 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.687110024 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.689950028 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.688481651 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.688868195 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.688677135 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.689208403 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.688977686 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69055192 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.692637458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.696555426 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.687866123 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.686524426 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.687160589 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.687565726 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.687810279 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688196358 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.68672499 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.687993985 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.687509847 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688102765 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.688294796 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.688173527 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.687825828 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.689263457 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.688608562 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.688791937 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.688287926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.689376613 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.688953245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.688659543 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.687478851 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.689555234 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.689420491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.689148414 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.690046241 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.689406822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.690292958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.690662818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.689446201 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.69024667 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689414916 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.690209967 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.689480416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.690345704 seconds)
  done (took 123.191125307 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689785022 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689750882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.690001779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.68956667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690341468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.689817471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.690196618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690200498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69052947 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.689268496 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69041803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690691473 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690262957 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.689943867 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689701888 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.68902676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.690175589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689938826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.690195176 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.690817657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690853357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.691615703 seconds)
  done (took 38.811019374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69177993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.692471854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.69209006 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.692536507 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.692913886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691471463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.690352789 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690261514 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690157342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.68929647 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690290796 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69095423 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.690813629 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690689018 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692492455 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691553031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69176543 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691981612 seconds)
  done (took 32.073747372 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.69194034 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.691799725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691733665 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691456822 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.692434014 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691606391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692242612 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69213404 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.69279364 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692728578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.691838078 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692065599 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.692804255 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692240984 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692670251 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.692742751 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.691915285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692442013 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692482662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692022329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692072341 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693494141 seconds)
  done (took 38.858760957 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692123473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.692509974 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692163005 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692749539 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.691439946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.692948115 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.69323997 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.692290641 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693032182 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.693479814 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693885214 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.693281823 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.69441432 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.693577967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.69365384 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693621073 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.692376325 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.693274478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693445346 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.69409724 seconds)
  done (took 35.491321901 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692627168 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.694217728 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.693268899 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69393145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69444411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.693335714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694684977 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694048366 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693561478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.696155924 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.693957087 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694465139 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693756316 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.694520804 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695461907 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69475756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.69371608 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.693969236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694034985 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694008506 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.694714421 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.694605228 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.694069026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.694153827 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.695325978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696308589 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695751891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.695431487 seconds)
  done (took 49.074967223 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695695934 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695225047 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.695857941 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.694836905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.695627562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.695398266 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.695213948 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.695511906 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69635192 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.69500475 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.695167169 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.695458992 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.696489725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.69587827 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696007493 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.695955695 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695647202 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696241566 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695631699 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696198946 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.694932406 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695432276 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.696860175 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.695706955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695157801 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.695993532 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695558842 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695957668 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69609508 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695601849 seconds)
  done (took 52.503559072 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.717919458 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716992079 seconds)
  done (took 5.067145001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.696768936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695804598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.695946292 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.696290278 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696036131 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.697363477 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.695779604 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695941183 seconds)
  done (took 15.202642922 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.697473262 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.696290416 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.69629846 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.696589446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.697080686 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.698680609 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705321009 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.697021567 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.700226238 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.699385342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.704831476 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.70601461 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.701464215 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.700304546 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.700132407 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702276752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.699022673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.699710837 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.700556695 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.699122103 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.699080441 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.701887755 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.701162825 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.697555553 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.699130606 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.709588918 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.702704489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.698476586 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.699984241 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.702814579 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.698827936 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.698331055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.697546692 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.698378019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.698852201 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.698749526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70841522 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700711022 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.70640484 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.69903296 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698200758 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.698146501 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.700821101 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.700835415 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700605484 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.69896202 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.698149816 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.698583292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.69864148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.703394717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.7071637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699979076 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.700187318 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703523365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.701723459 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706614079 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.700764187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.70247802 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.709064806 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.711396322 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.712140116 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.708646489 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.701510111 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.698635467 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710181697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.725706288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70828683 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.699624263 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.699599382 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.699594701 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.707644912 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713558786 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.710179314 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.70085199 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701163905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.700320618 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702171692 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.699898111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711173235 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.704960637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.70013667 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700938673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709876233 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724225828 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.701186548 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.70153281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701023458 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.701346216 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.702107111 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.713097263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.70148514 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.700780665 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.701580097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.702716753 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.703331243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.701010993 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.701089794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702504827 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.700738079 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.702080146 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.701959441 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.70478196 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.711156096 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702302811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.702021688 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.709459025 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.701095454 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703235495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.711884873 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.705388495 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705419233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.70549212 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.712164332 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.704443215 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.708794982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.714727465 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.705236647 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707443839 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.705610959 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.705495133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714229529 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.731950092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.706254326 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.705579928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.710933096 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.717689526 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706320859 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.709066416 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.706323988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.70756062 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.707074831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.710571836 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.707244253 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.70871886 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707705204 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.710785494 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.706845246 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.707145816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.705889356 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.707885344 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.707811039 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.70756537 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.708484175 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.709996988 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.706306204 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.710147006 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.714527583 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.708866525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.708946451 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.707915428 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.706051473 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706655245 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708146371 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.70683943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.708090932 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707504752 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.708009712 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.707372237 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710009382 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.707504977 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.708053946 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.708337017 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712792839 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.707916395 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.713553451 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.70837351 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706417864 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.707003449 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.707325491 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.708120237 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.707613129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.706991727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.71162383 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.715870683 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.707065343 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.708480181 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.711365429 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708367086 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70847262 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708841785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.711952907 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.71707017 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.708895479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.715949844 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.710369268 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707755512 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.70826653 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710205653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.709666394 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709576482 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.712509688 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.715965952 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721014412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718311684 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.71010246 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.713466852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.710971582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.713241846 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.713978434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.710178551 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.709163298 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.709912487 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710172347 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709171155 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7119363 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.709730593 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.709414806 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.70964914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.709069486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.710343547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709180365 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.711164203 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711991484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.709960029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710212081 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710879187 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711620994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.710360042 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.709444252 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.710543282 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.70969246 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.71064096 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.7177148 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.710391719 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712818007 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711826119 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.71162263 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.710656914 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.710149845 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714357631 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.711361147 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.719996037 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.711065435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.711983496 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717172569 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.7112578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.710773172 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.713928952 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.711402653 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.710599797 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.714446295 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.719000839 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.710763886 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.711339883 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.711666342 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7128671 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712225624 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.719650718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.711505718 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.71212976 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.712357101 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7148084 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.71221214 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.714348772 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.714189996 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.713926112 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714369848 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710891269 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.712530723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.713187996 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.713490565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.712530717 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.713712306 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.717247839 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.721034867 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.718433655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.71372955 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.714903581 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.713531841 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.71685907 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.713164275 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.712665837 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.714280991 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725936533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.721762255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.720586703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.715422279 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.71211693 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720276574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.71448912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.718440977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714031218 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71431212 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.714785599 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.713785506 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.713716127 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715909836 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.714745744 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716835029 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.715190161 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.717494247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.714479071 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.714081634 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.713561476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.713569713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.713328497 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.714642453 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.713464834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.717697196 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717232171 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.714263049 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.715494941 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.723484321 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.715519721 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.716293775 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.715775725 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.71482777 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.714388615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.714681607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.715194328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.719394343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.723567281 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.718094205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.724833557 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.716744913 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.725544077 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.715186689 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.718541863 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.723871497 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.71499036 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.715266871 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.715568555 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.715473145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723899233 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.714912948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.716068304 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.720029971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7160416 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.716061793 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.715726226 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.71548483 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715311586 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.715314259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726391826 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.717968671 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.720390608 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718859697 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.715372188 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.71678251 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.715030336 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.715674291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719952028 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.71678747 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717776944 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.715855432 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.716707484 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.716248964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.716912931 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.715347715 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.716993481 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.71723863 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725525242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.718802614 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721382103 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.716794738 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.724652043 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717458575 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726314326 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.71738142 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.717868951 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.716201838 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.716704362 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.718436151 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.717556409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.719696684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.717989998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.719477496 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.72125524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.718233595 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.719910883 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.719549767 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.717865441 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.71890518 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725803416 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741672675 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.720510902 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.721960378 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.717634664 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.720321597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.722861837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.71840019 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.718865019 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.721707869 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730532826 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727612413 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.719813233 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.718180291 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720354464 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719811112 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.718054353 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.718346826 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.719517674 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.718435206 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.719799333 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.718010185 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72345806 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.718331197 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.719325778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720340628 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.720424333 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.730655232 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.719321209 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.719564315 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719063925 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.718359521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.719747955 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.720341292 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.719410496 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719353594 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.719770869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.723905893 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729533536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.727314325 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.723244284 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.719726816 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.720146729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.72103099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.720767637 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720295024 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.719784035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.720300903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.720998933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.720482989 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.720505942 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.720238378 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.720357121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.721021507 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721158924 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724580515 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.729757157 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.720808617 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.720148071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.721123552 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720893708 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.720077413 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.722667158 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.72975855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724336562 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.73233957 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.730399555 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724895117 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.722399968 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.724117523 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.730177962 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.720605492 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.723544899 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.721500023 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.723955212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.722285928 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.726764738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721273375 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729011538 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.722580647 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.721289258 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731529343 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.723659033 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722535485 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.72371826 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.727244469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.722277191 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.721372784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.722072815 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.722916532 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73110677 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.724443297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.72206433 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724551385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.721740637 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.723050543 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726553006 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722484811 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.723233133 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.721893471 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.72345766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722240305 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72250861 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.722759974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.722397366 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.722788274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.726253217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.730394963 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.722935449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725667995 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.724001182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.723062005 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723295294 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.723370966 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.723854425 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.722820887 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.725098343 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.7235631 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.72556979 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.72678521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.723786558 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.725310138 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.727373443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724800512 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.726571622 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.734254573 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.731028155 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.723369185 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.723521967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.72485163 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.726289491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.723468736 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.724009617 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.724757813 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.725897414 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.723765666 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723124401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.725973912 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.727564681 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743293097 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.724099454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725890603 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.725891431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729709636 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.724787506 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.724867953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.724775323 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.72748536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.72880454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.732472494 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.725135077 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732669408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726440142 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.725519837 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.729558878 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.727927177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.73380481 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.728915893 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726032418 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.725853283 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.730384088 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.743469459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725384577 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735906536 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758260652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.727218563 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.726718446 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.725775731 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726056962 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.725619541 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.728241659 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.727006773 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.726066037 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725480083 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.726242353 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.728835341 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733897016 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.72849391 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.726160292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.725908847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.726267319 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.728058079 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.726777884 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.727333687 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.72618635 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.72695091 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.727096512 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.727120217 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.727996954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738568372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.737316337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.725859802 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.727843916 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.726454035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.731671833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.730184825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738461087 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.735118434 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.727545311 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.726030552 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.729239794 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727648047 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.726345454 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.72799358 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.727767612 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729433608 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.726696755 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.740080084 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737198108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.733928783 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.727515932 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727130334 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.727621866 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729043004 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727756596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728425899 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.730562197 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.728827044 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731791891 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.728055096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.728668259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.731668635 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.736255465 seconds)
  done (took 1024.403358592 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728889739 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728244664 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.727595164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.726414919 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728104164 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728419017 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728727902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.728774667 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.7287912 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.728380619 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.729007957 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728575748 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728687293 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.72891409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728230346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730221178 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727912888 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728726922 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729487337 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728876088 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.729527049 seconds)
  done (took 37.965215429 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.729638579 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.728901807 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.73029335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.729022817 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729162341 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.728872177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.730013326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729508146 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.730448756 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72951082 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.72961611 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729310485 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.729905318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.729370535 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731045716 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729176891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.730061974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730443144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.730506515 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.730694241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730848347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730435494 seconds)
  done (took 39.72186473 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.730272867 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.730915912 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.730125347 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.730479044 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.729896557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.729928101 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.730769094 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.732513799 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.731237793 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.731948529 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.730814235 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.732435356 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.738829462 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.738973355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.733415052 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.73056742 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.877401861 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.731691822 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.731702955 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.731748248 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.730663219 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.7388584 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732079356 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.731291997 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.731203867 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.731673409 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.731748044 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.731304489 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.732629006 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.73368521 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.736840157 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.732865537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.731846871 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.735075065 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.731112209 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.73278257 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.735752486 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.732616058 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.731056265 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.731345473 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.741435216 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755517647 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.732043788 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.739347316 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.733175812 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.73175959 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.736320649 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.740928239 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.732608779 seconds)
  done (took 86.752715153 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.733114973 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.730685013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.730628421 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.730538472 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.731316582 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.729759943 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.731487869 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.72928978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.730410288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.729651691 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.730730394 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.731066865 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.731497819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.730775073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.731747793 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.730954448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730890606 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730876748 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.73080899 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.731427632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.730161845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.731271456 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.731390932 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.733727005 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73046806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730451482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.730250572 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.731619044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.730834276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.730322735 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.73121743 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730804612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.73047898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.730693934 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730533704 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.730067349 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.729318159 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.73041411 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728867649 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.729555981 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.730580834 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729717159 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.729919953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.73053324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730000927 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.730506899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731101875 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.726193 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.727469829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.726455403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.727029257 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.72803287 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727753105 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.723295486 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.724435842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.724770445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.724012056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.724475361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.724963792 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.723821396 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.723610365 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.723290992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.723995409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.724973668 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.724259905 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.724182643 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.723610617 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.724150156 seconds)
  done (took 119.237594121 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724107864 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.724298693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723551251 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724220941 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723076828 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.724203437 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72469226 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.723549318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.723426379 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.722968404 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723758285 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.723913144 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.725123701 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.723808548 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724249637 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72432857 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.724185471 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724500484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.724691904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72474957 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.724561739 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.72366004 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725057296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724177253 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725803371 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.724454354 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724626481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.724856744 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725115222 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724823301 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725445363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.724889364 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725139317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.724841506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.725035512 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.726315146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.723658434 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724150727 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.724332686 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.723972013 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.723793447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725862896 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.724090644 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.725376692 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723765315 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.724518293 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725137884 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.726331418 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724216728 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725963595 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.724076178 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724738606 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724965957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725959555 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.724373921 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.724547825 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725190578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724570304 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.724727132 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.726492078 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724478967 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.724684896 seconds)
  done (took 108.587067822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725272782 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725719664 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.725528896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.725135008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725358901 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.725733103 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.723553852 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.726796918 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.724947884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.724089223 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723966076 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725091176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725208436 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725374977 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725327751 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726027272 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725475308 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725257632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725430893 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.725902779 seconds)
  done (took 36.166785218 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.724204151 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.724705475 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.72316125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724035784 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.720253542 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.715980326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.71598744 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716008736 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715514409 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716709968 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715799198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.71431893 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715189876 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713962712 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.715403958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.714819976 seconds)
  done (took 29.147983476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.714261011 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.715850111 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.714345208 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.71348797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.715167972 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.713306522 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.713548177 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.715952023 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.714188866 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.715150306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.716082258 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.715366764 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.714330533 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.715148234 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.714173281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.714952566 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.715263514 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.714552826 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.713969074 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.714522313 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.714720705 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.71421324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.716414218 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.714762386 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.715519732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.715124174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.713795568 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.714844045 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.715327465 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.714252876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.714845801 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.714841084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.714884462 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.715795968 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.715475261 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.714761788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.715276755 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.715287582 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.715526625 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.715877474 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.715189922 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.715302816 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.715640459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.715344064 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.714931746 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.715658901 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.714738667 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.715694863 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.715055755 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.716609475 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.71530195 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.71571357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.715686636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.716553529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.715381334 seconds)
  done (took 95.980246159 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714633813 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715978098 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716542762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.715758788 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.716321735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.71659635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.716094132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.716703553 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715444664 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714518952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.715913375 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.71609304 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716476491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715133122 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.714878471 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71501585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.715215847 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.714393318 seconds)
  done (took 32.533307019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714270404 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714568077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.713447276 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.714143354 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.715102394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.715824924 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713447442 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.713641035 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713777327 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.71348695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718622113 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.714257486 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711286976 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.712286229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713088494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712342139 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.71203651 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.711751381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710959972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711510793 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711752035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710371115 seconds)
  done (took 39.345073871 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.71217123 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.710776366 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.724960302 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.731297484 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.731686252 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.745274892 seconds)
  done (took 12.00239692 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708288682 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708937661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.708786899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708757445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71036805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709370763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709694987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708618273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709630606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709703415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710361472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709146135 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709499024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708459764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709110002 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708983524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709588204 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708684987 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71070186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708895169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708576508 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709139689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71042561 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707587729 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708258955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708377736 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708291167 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708667129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708339925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706796894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706566054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706111485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7073614 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7080495 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707434708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706577676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706592762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70746143 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707721167 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707996139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.706753764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706467185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706967126 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707303519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706547372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707334148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706411285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706281326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706723025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706455391 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705653359 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707077687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706458105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706455708 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70694018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705945325 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706972077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708963601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707337313 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707129525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706706875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707595868 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706930316 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706353657 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706855293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706549585 seconds)
  done (took 114.365554092 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706434089 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70589534 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707000164 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706949901 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706570092 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707085857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707076538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70612866 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70710255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705168898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70595424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705255258 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706034869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706077513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705961723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706284015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705240857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705513437 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706888456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704947073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704682689 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706014589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705597739 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705619254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706088459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705677203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705586051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706274605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706892358 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706091709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706450742 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70626878 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.706136174 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705339416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705385313 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705320644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706396627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706021222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705203934 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705807765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705176605 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705768238 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707189696 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706733516 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705731754 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706492347 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705607102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70587992 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706701352 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706218495 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706411032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705980802 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706010504 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705580772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706280027 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705463311 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706223502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705314023 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705101911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706203639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705546053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705742581 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704914908 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705807753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706059905 seconds)
  done (took 114.239932903 seconds)
done (took 2376.582832224 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.757935206 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.714174137 seconds)
  done (took 15.113333071 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.869568143 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823372811 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.707250538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.720081249 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.707766896 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736444157 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.726687189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.707957381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.70760876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.707927568 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.70925616 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.893708904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.7662994 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.708406609 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.706251833 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.799859156 seconds)
  done (took 49.643559351 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.710085149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.711948292 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.718549252 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.71260627 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.710298994 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.721286589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.740700392 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.71418251 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.742063291 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.719664263 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.775069826 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.720542767 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.708869002 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.759762102 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.7216067 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.723152056 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.800388262 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.784088582 seconds)
  done (took 32.836931863 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785155614 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.713794924 seconds)
  done (took 10.1472473 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.706262318 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.769141577 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.71022924 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.717644258 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.736945006 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.723631094 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.719614718 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.717947602 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.717570081 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.707449166 seconds)
  done (took 68.870475835 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.714155832 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.709827303 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.708116889 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.706258386 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.704577375 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.710037451 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.707504644 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.706375413 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.365364323 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.745218479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.716832262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.712642422 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.707690726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.709254334 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.706750649 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.731750917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.822568749 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.706604524 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.706255478 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.711693762 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.709049956 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.758117327 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.720433266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.709064209 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.739583899 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.36664804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.718133072 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.713922219 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.821462904 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.705434417 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.707365537 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.893965262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.712191479 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164736228 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.964840975 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.715016629 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.721992996 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.714800436 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.70671513 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.821858644 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.708996458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.713593165 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.635749342 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.945320772 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.814003236 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.751075419 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.011705064 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.725518022 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.708799226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.73594983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.710108329 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.70830471 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.722638118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.222278841 seconds)
  done (took 123.851537049 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.704656628 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.053068023 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.872302826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.708149582 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98897714 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913776789 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.708412645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752531864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.708728487 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935746623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957488186 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812407466 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707814383 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.706846502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706497482 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705692194 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.860908667 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779083931 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.711857831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.707689819 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735184249 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94393842 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.827427036 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.709561345 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.73612656 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915958509 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.82806379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.808611895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.480625285 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.706002819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.76793211 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.709329535 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.709194473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.706438576 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.882622014 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.802290563 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789190877 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.709755873 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70757071 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.708371913 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.454844695 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90533094 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801310543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.836804138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958240291 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.910512819 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.485475457 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.706610755 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.440660275 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.869927504 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.934536509 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.936082393 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.828151784 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.711492139 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.237340027 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.708071657 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.708260614 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956599235 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927702588 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.805504648 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71133773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709597623 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708549634 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996392739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709755333 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804104161 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709913811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.707577177 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80319453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805178085 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.938594416 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919475026 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.739176513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.048205661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.238320236 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953614816 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.773353825 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956880865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.712001529 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708711023 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785541855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.548937256 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960621363 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991898063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952590937 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743252946 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.429222739 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.708866351 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.932967272 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.928696689 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.96772872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9526912 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.948055516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.049842945 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.707759308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.709122767 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.937742317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.833934459 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714968174 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055984765 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.937497038 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.239561463 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.736298475 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009946634 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.839932202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.714802292 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.341883166 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709856693 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.936258379 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.749750075 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.71142304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7094933 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.927141914 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.697553182 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709105556 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.708134061 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.770543603 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.716013652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941631432 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.713856316 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97614672 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712025623 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94385551 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.138314311 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.740381684 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.938959115 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.956692241 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.718574792 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.949167052 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952374028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.826123129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989486384 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.609677695 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.71229998 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993969594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713219135 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.711545203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.880282205 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.712253202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.851653584 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.717045992 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00093635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732687964 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962140049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719116703 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.963190797 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743781223 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760708408 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.7150839 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.840610634 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715073513 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.546292976 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.868369966 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717281685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.711719665 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.508656934 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.712496264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.860369581 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.354132749 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733258221 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782164037 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.372450488 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712125741 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790233728 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73475135 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.099320572 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.712454886 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.961480851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.718794367 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.712506745 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.712514076 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.998211495 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.949153172 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.71580799 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.713950895 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.615281748 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.711411893 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.713288843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.892144852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.035554847 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712370782 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.914607965 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.714961141 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838602455 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.719788708 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.78212828 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.049427273 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712269842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.712648021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.712494628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.715049536 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.714173997 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974464539 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73782038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.20559136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.849789555 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983222108 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.019648596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.953210858 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.754856506 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.71456079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966807185 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715504001 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776401667 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.715359944 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.732592193 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94005548 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715869747 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923635704 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.982683384 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.559356509 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.760523116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.717027455 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716688492 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.714945782 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.857859081 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799642076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.717583128 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.715314641 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.828118025 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.839202227 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92558633 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.717012602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.816206243 seconds)
  done (took 868.509566853 seconds)
done (took 1170.616821067 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.716469427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.718375747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.720686492 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.719634668 seconds)
  done (took 28.527267724 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.72663869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.7160893 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.716893667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.716648467 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.717583144 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.715522216 seconds)
  done (took 11.960668964 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.705152885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.720211343 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.71819026 seconds)
  done (took 20.79387472 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.784511272 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.09571229 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.846411415 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.13067382 seconds)
  done (took 9.508098816 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.71602413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.715723482 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.71556557 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.716932578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.724945176 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725241768 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.717233645 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.71733222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.725038329 seconds)
  done (took 17.126504557 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.72417265 seconds)
done (took 93.293739626 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.859363632 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.785663296 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.324549434 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.898711253 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.860449809 seconds)
    (6/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.064808021 seconds)
    (7/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.045202455 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.746245053 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.669342569 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.042047515 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.724201422 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074010849 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.034786023 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.943384634 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.883328752 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.683885383 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.73127008 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.748444406 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.739256107 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.744714803 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.719969058 seconds)
    (22/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.104251929 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.725131304 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.501882897 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.72613694 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.815657262 seconds)
    (27/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.729259088 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.33706302 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.057217671 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.833884691 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.525618649 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896020911 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.799752486 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.854995775 seconds)
    (35/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.823950275 seconds)
    (36/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.799442458 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.849190684 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.880567971 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.726405361 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.724274288 seconds)
    (41/309) benchmarking ("sort", Float32, false)...
    done (took 6.78531302 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.81416744 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.726331807 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.661091625 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.723732819 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.161564954 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.508876427 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.968132856 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.859409705 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.4093073 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.910827756 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.727794837 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.68667909 seconds)
    (54/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.972363124 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.788258019 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.723077594 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.881752543 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.743733334 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.875066589 seconds)
    (60/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.824655758 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.725410623 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.118736061 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.875681911 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.917183976 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.862835026 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.812761289 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.1187179 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.051363695 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.729671665 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.033319042 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.729806401 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.730033234 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.273811571 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.066491851 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.728665619 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.95155845 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.739962041 seconds)
    (78/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.722954286 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.972205186 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.727045337 seconds)
    (81/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.603920138 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.559541369 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.103707497 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.729340575 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.707465518 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058582885 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.820150731 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830740932 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.953961192 seconds)
    (90/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.872509694 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.74392832 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.748462627 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.726057026 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.727979845 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.904745013 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.406933326 seconds)
    (97/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.731780668 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.003974779 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.163257509 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.733363914 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.0060619 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.813845463 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.041030642 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.856709266 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.821945236 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.506418624 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.042780055 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.795066139 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.860872064 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.094120745 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.747372925 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 5.453480666 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.738053163 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.180945184 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.10051502 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.485059245 seconds)
    (117/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.752437604 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.918462083 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.085415109 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.95986351 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.064174741 seconds)
    (122/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.058555192 seconds)
    (123/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.755594315 seconds)
    (124/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.604487336 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.979749922 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.052658666 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.923183497 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.74861668 seconds)
    (129/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.749534109 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.861566753 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.280338965 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.127247919 seconds)
    (133/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.790022325 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.786749774 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.042320261 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.730162514 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.510631972 seconds)
    (138/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.727059463 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.449508003 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.871082063 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.756689226 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.748993627 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.741414695 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 4.618820673 seconds)
    (145/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.736035637 seconds)
    (146/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.918371541 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.736543106 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.881543353 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.98429782 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.730154281 seconds)
    (151/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037273894 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.863938827 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.739772145 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.21388899 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.989058542 seconds)
    (156/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.833952808 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.657090913 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.759130437 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.727770211 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.032611278 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.832707332 seconds)
    (162/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.191633511 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.750779071 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.762424433 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.647343051 seconds)
    (166/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.965972666 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.897175374 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.912449894 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864134907 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.91455494 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.938039426 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.068340206 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.731642093 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.883285958 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.980976912 seconds)
    (176/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.816277365 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.649068662 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.817357469 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.92007043 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.755669675 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.752303166 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.809846981 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.736185729 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.82484861 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.803742884 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 7.88771224 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.732640832 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.092235406 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.806460432 seconds)
    (190/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.807181447 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.466608234 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019822501 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.952650711 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.679129118 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.739590764 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.608930706 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.127100691 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.09721701 seconds)
    (199/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.824467268 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.728232258 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.914897059 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.796298031 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.753020056 seconds)
    (204/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.912793759 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.043498546 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.044039353 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.771314607 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.729601643 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.199014076 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.962461025 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.9207128 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.113456594 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.732711838 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.937191138 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.737439657 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.732182507 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.409034096 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.934969804 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.576053454 seconds)
    (220/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.858491298 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.738292493 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.11415614 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.736777769 seconds)
    (224/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.985926283 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.735201177 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.979680774 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.736055656 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.926304501 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.747534902 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.82203657 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.340911851 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.733690066 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.843047402 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.993727867 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.195198392 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.188141608 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.926706004 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.74072348 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.995091011 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.830694667 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.029040518 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.734356749 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.829528869 seconds)
    (244/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.940329457 seconds)
    (245/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.817994732 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.864647328 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.866295122 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.755289527 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.421883301 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.736923771 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.831182796 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.755253267 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.198322685 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.980193586 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.729579036 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.713650087 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.412305497 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.849244211 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.821233117 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.26076544 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.736795773 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.15975266 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.079260182 seconds)
    (264/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.828681611 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.760174365 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.404633597 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.077277322 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.685810381 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.744986073 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.624500133 seconds)
    (271/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.874659223 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.007494444 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.736640312 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.871865333 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.012906287 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.821426757 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.355578839 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.742856892 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.933816993 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.050969068 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.8462575 seconds)
    (282/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.995204755 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.756193698 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.858851829 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.735365199 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.943405102 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.110746616 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.741955312 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.942580469 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.895992043 seconds)
    (291/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.77420944 seconds)
    (292/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.893458366 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.967564226 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.996267981 seconds)
    (295/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.821703479 seconds)
    (296/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.868342883 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.740973849 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.031918875 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.156694725 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.856930807 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.859006332 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.139333744 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.085153633 seconds)
    (304/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.746374735 seconds)
    (305/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.900311573 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.854170385 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.842818972 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.947271973 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.134483558 seconds)
  done (took 963.25683447 seconds)
done (took 965.199319865 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.763715859 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756534831 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73880338 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.760666921 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.852949466 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.790308542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.753096915 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.74346621 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.789278712 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.78984834 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.737845041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.788491305 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.740920609 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.74006143 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.739235869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757022343 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.054507036 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.773206637 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.759930689 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.751860502 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.758550041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.738559477 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.791859009 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.788615661 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.745361245 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.744765569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.744028802 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.761458603 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.854220228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.74445869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.745923678 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.753615198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.053160139 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.771215543 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.739414909 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.76101186 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.753360509 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75307297 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.745045519 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.775810122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138069635 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.782486422 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.743742494 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.742243597 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.742317653 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.748653708 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.743756722 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.750047661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758296413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758843351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.129338106 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.798834479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.745749764 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.742419349 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.75561483 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.743126345 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.74754648 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758977068 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.762948421 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75963524 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.035909299 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779522211 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.746636485 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.761180297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.752009686 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.165121953 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.78141907 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.750359592 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.139935044 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.790960668 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.164962396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.793490076 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.747525522 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.758477391 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.777080903 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.054554896 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771669103 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.743068388 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.753932267 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.74209813 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.756502917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.759039624 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.749545868 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.745374672 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759867251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.793633341 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.756399615 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.744486845 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.756085873 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.765118941 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.753920299 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.756951533 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.748861634 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.742435525 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.756580528 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.749850609 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.749295145 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.747626651 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.750347354 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.758087315 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.138571314 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802374082 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.741596318 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.742835057 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.744092594 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.75992225 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.13860206 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.788686875 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.767959979 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.795548335 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.746377658 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.037816885 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.779559352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762463172 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.757699913 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.748938342 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.743251255 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.038429773 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.162624711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.802274858 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.747644171 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.743695703 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.76324176 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.747246803 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.743351517 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.058707994 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.78013417 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.7619425 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.868015604 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.759287675 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.778750894 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.745296458 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.749370226 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.799373626 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764281805 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.778516112 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.749185825 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.762811506 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.763908729 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.745348293 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.759001379 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.759714032 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.74688588 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.754545668 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.744851776 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.799776539 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.762501107 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.761483495 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.768460625 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.870102749 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.745069626 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.040097876 seconds)
done (took 274.870855341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.825581439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.745068712 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.838668667 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.745179794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.837056984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.823278038 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.744818731 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.74578503 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.745137267 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.230403131 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.746463229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75320011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.744973103 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.747785611 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.818865129 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.748039914 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.745733343 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.177511007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.747531903 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.827746515 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.747441191 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.747733095 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.74685258 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.235099958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.746875607 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.749013985 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.828153577 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.746288979 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.182444356 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.747701056 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.747717206 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.183561582 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.829222829 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.775078702 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.753933124 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.754679745 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.838432541 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.756426263 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.815153016 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.816683166 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.844446351 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.780325913 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.747182322 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.748926821 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.750024497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.748002523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.747504859 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.779999457 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.74843715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.751909139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.178648036 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.754880226 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.75258457 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.747201973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.747478015 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.775316906 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.747576255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.751075693 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.828365376 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.748831193 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.816828513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.235470171 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.23333292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.74879946 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.750136481 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.748397322 seconds)
  done (took 176.980246215 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.814190681 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.824896294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.813918752 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.753602686 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.797688433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.815434848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.752772117 seconds)
  done (took 14.254360605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.756248029 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.749256664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.799218931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.798785142 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.748599679 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.905162232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.750312534 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.761234013 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.754148331 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.776918878 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.750299906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.749282029 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.757402561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.747790382 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.798673505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.761960546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.866129066 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.751866309 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.750764486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899078062 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754362058 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.756980704 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.77561246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.762295907 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.750618412 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.758007657 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.328128063 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.750479961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.751013764 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.750002126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.750335998 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.791784048 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.750989374 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.749606556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.749568398 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864568523 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.750529993 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.751125948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.750925391 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.748975369 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.750891136 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.751012527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.751694589 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.751936213 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.750351797 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.77452335 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.751402267 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.750047732 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.749671131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.752410086 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.776061872 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.752206455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.751137453 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.756697576 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.793386254 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.759464845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.752076634 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.751679726 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.752247962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.750877298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.899352964 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.801291941 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.751777858 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.799864242 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.751753612 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.751577813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.752301616 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.752113666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839315152 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.751993131 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.801781836 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.753060151 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.911950018 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.775740059 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.753138042 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.755793959 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.756621208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.753413328 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.752313639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.759676353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.752879344 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.755050331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.760076769 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758556517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753102812 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86690462 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893728078 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.753353346 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.755211345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.761563142 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.753413067 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.799039585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.753056639 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.75336412 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810343349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.868445815 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.780158631 seconds)
  done (took 194.19806177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.760201479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76002566 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.755332598 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.769488666 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.754344334 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.754066853 seconds)
  done (took 12.240176494 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.75683962 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.757145227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.755292345 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.754580144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.754182697 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.754824276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.755394013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.7567677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.75928173 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.754335123 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.755054576 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.755650108 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.754798553 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.755448255 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.7556456 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.75515843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.755030913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.754447406 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.754489116 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755166092 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005759886 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.755111917 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.755018666 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.75890383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.758969077 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.755140357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768532471 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.755432366 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.756092115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.762819474 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760154276 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.757827964 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.759903451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761809406 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.759858922 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.758882453 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759016031 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.756619125 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.756310569 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.755569386 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.75640254 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.755700688 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.756706067 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.757264593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.758710447 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.762679029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.760715147 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.769635205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.757250126 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.758123053 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.757882824 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.755763203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.757092546 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.756742132 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76098435 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762723787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.760137119 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.758518683 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.756468547 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.761750252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.759740235 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.757277664 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.758923536 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.760575515 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.765678633 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.758597392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.76048844 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.759850851 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758580275 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.757392676 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.758877762 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.757296356 seconds)
  done (took 129.511660761 seconds)
done (took 528.881725077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.98261484 seconds)
  done (took 8.672566514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.846564132 seconds)
  done (took 8.592360262 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.234083374 seconds)
  done (took 9.927402292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.785705749 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.796715102 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771550968 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.764672067 seconds)
  done (took 28.832918581 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.992112173 seconds)
  done (took 8.681793208 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.779034928 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.754445914 seconds)
  done (took 15.29026238 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.901792702 seconds)
  done (took 8.592250746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.862274393 seconds)
  done (took 8.562504836 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.773829772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.77695377 seconds)
  done (took 15.264501529 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.758549554 seconds)
  done (took 8.44827368 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.911538514 seconds)
  done (took 9.703876477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.781495472 seconds)
  done (took 8.541494441 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.815472211 seconds)
  done (took 8.505435101 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.805189181 seconds)
  done (took 8.494871978 seconds)
done (took 157.800735582 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.758031342 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.762130722 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.760757814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.758643933 seconds)
  done (took 28.729941679 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.789254563 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.789689061 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.791802556 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.800791303 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.792651973 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.79029885 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.782892712 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.782472153 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800308818 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.793128821 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.793111454 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.791528929 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790399378 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.782255517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.793512538 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.792282035 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.801926991 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.792361046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.782638654 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.792732816 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.758281881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.802172108 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.794060265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.75932097 seconds)
  done (took 44.631055875 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.948765346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.828987142 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.911957317 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810605837 seconds)
  done (took 9.192108352 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.809164655 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.810469987 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.822963511 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.861463066 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.884418249 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.820507515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.780711895 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.779239976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.768301873 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.811995137 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88715458 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.806437987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.896390485 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.759449386 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.94512425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.75843122 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.758221106 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.810437134 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.861734562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.874162457 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.758860674 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.810481556 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.813109137 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.806907147 seconds)
  done (took 45.388966229 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.760252708 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.767418782 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.765886935 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.759947366 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.760387985 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.761283757 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.767378913 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.762372649 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.781997981 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.761973251 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.760845455 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.761030203 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.766319744 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.759384386 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.761030796 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.772801295 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.776245327 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.761624251 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.765064875 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.768291102 seconds)
  done (took 36.995822136 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.758962803 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605738037 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.106145803 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.011774374 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.759596299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.76431626 seconds)
  done (took 30.699769999 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.77323837 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.766092647 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.75968157 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817253605 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.900776013 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.767993569 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.762585469 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.771942383 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.806036996 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.830863337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.780655957 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.78893463 seconds)
  done (took 23.219972226 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.76086276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.763760703 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.763180706 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.775279293 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.771774534 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.770048801 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.768483594 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.761892422 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.776476251 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.779508181 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.770679406 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772925468 seconds)
  done (took 42.933130204 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838100327 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634677135 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21231383 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227699297 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283835843 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965075369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.76105898 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848739672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.762561141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032647074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110713971 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968056641 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004134628 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486901449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.764658615 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.232681075 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049118375 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985307726 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794679786 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381329416 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870356652 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262355058 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.441604992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873168742 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963988334 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.881365384 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.019102868 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.715781162 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811753069 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764198138 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766515746 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763679224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033572908 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883816792 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832075049 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767209599 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.180042507 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.467910109 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.769875767 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.44631286 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31762722 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886927691 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766500677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762549117 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.689235108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259132711 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852966219 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.766714989 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.462298843 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.762318865 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767927932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836165475 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.763414932 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.570289969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445720719 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030375888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.763538084 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763266569 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323695131 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78072981 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356044758 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.693499746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.855528992 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.445675818 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217706256 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.921279321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.764310317 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765753749 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689503692 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.444710387 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880048155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899361589 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.780073859 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403070688 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066592383 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.171110805 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819455613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048460851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526104407 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.694930783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980754845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.70770234 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691382141 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.593959018 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.691055834 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985912762 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801110435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.368984425 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800701892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846777567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771797504 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780153528 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766583214 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978810273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.660234759 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766901352 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.056290436 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022819724 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782451833 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850980962 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691801086 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.766766433 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010405086 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.968544036 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987072995 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.243876001 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852921208 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.565542582 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.884016046 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.651788031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770475376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036443771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829539986 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774950454 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887783775 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.71504336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015359513 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.596914574 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.969388823 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.125379676 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006836775 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128024076 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01451749 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827840355 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.772042765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.767170574 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.454788632 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375930213 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981753323 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.778433481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.235834792 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.769660743 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.768128875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702033622 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.422538697 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127713799 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.854587744 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979841047 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.702155411 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038947908 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693132412 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90350168 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.765915326 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.981698213 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.427331363 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.858932706 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015494318 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874181561 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.975682557 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894679414 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782412235 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859732637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785053831 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.048134462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11484809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.769259356 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.769423009 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472482676 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829583078 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771787653 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.770453472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291512731 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04385288 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795618627 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771028499 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642202365 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.781108353 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830045294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770573483 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77408914 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.288095039 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273829491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.773255865 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.437946207 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989216594 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772698658 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.40899125 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950852456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.780765473 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040286847 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840312789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.697513896 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.469612322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.470344636 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773185204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69690711 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.772523116 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773609516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77758597 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.956228789 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.046802701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827528442 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.471568404 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877754704 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774867454 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.773345665 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769675906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.260424023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795057146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279684472 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881797431 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899955522 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.781071845 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696884593 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.77254702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772882958 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.770422484 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.722603044 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81849209 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.447964051 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978010725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019300613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.174529899 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779396799 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.463489946 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.889196151 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.786454583 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.070085552 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273186281 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.866978467 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837917015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.777348848 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.469704574 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510351333 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33642899 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078226123 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091522931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123392674 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.11437681 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.09154136 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856244492 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998009898 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.291482116 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826903123 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864395838 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707757478 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786558684 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.43260881 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132893191 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782319775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988741864 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06027767 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.151174864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909831028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975687566 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802920323 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.542361101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795473246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.308074484 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788969376 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.22933559 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979688158 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858047658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.085741696 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86199735 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.773344829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116937328 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81731165 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.475215468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125336975 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.13241377 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.240556345 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001102615 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77543841 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.213393546 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129593222 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.920204322 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.889319697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700487639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778679252 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.779370797 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786137581 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.745914159 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.618467556 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.018455919 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779063871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999543921 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.855226843 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14215521 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.68144771 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.776841256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772847416 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051438852 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440908748 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923944314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.034696699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.34112148 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783370048 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701428565 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700017336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.47465603 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775720596 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739673684 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988537113 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.881814825 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456269899 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.124644765 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080094729 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017751037 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.786581719 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046400793 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053466577 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.267629989 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795666127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.872520004 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078938918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.526838545 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990365395 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001519051 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307737914 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993050261 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232662551 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.748476509 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776339824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981056849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989614224 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.150865351 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953964409 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.48542265 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.78322618 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137803258 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838967481 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.150173876 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966321245 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.870406734 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78164051 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852889827 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780026262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781105296 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.781731129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786126068 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150405214 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899193999 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.788231777 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85331918 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801030666 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.348789867 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.784001835 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048914737 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141547576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11380902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842982892 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776994655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784959484 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702910316 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908474118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216559377 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047506535 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.898219981 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.909716954 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797246779 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100684768 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.994300541 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083214779 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049829856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.660248433 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362397202 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.892420906 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.99375161 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784035678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.979440427 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99727297 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084905095 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337685986 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.869282078 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967151295 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049619202 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143002648 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778968731 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3622544 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.789373606 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168865376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.81374495 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150307538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038915667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781325068 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898976083 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782320537 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.977730992 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.228355534 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435064818 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123528856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637152473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781946555 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053648167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11420866 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087092301 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856270094 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785326434 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.471151552 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911507127 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.639345886 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004734154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779449973 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982400734 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.48880825 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782643532 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05634561 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088726685 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.780995439 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.673568084 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807005609 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.782921014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994261905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997302425 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02598198 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784435878 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.786888212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.587664723 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056767826 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843943984 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707203066 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.781664135 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825070263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006135119 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800174283 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.294095309 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.480761283 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068663017 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.687427496 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798245728 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.148063987 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156215497 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118375236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.305060736 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012658584 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335448996 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.58706514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15356848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.783904461 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.145542371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155348815 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.782711817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.243805623 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888021341 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.052752676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111405796 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.800020567 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489908116 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817070568 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99572923 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.138979122 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711742962 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788222424 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.829023901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782997192 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781388873 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791523621 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.702052074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221859611 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.61818953 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33843848 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.783765606 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.852659868 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.134450958 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281611674 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88556387 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799818237 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792511125 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.482484743 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.070506498 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025298695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.243585533 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.87430702 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.785013006 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7829538 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701506058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966006396 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.969950774 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068759903 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.075042303 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888764861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784758017 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.991151742 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986708227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.166788399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918560765 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.868890761 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892695392 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.724388099 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492092186 seconds)
  done (took 1613.519884324 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.802046287 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.792947148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.801625825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.809765793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.81321914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.800522948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.85032861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880257177 seconds)
  done (took 56.269606636 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.783088375 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.945172506 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.788621353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.785983223 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.789523676 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.784307002 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.95063266 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.79903651 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.791150467 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.789760264 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.784828847 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.785525871 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.543541065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.809914855 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.786510186 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.787176617 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.790574329 seconds)
  done (took 73.222352398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.787036928 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.225152492 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.81975388 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.786622338 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.865168683 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.789389287 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837322301 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.793972753 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.78951066 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.039057695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.082170431 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.818895925 seconds)
  done (took 89.354471664 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.800784802 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.792457187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.791549014 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.789887578 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.788377304 seconds)
  done (took 10.692649068 seconds)
done (took 2106.557870563 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.016195187 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.980460486 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030371049 seconds)
  done (took 5.731689556 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.927679799 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.978075223 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.091043742 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.09669423 seconds)
  done (took 9.81717988 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.088991279 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.17737206 seconds)
  done (took 5.985682467 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.111182994 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.814638658 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.200666668 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.787854574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.790927759 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.793949176 seconds)
  done (took 22.097314239 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.787794366 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.787178772 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.788686507 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.788119403 seconds)
  done (took 8.871125676 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.786039178 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.465624347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.788847347 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.800486389 seconds)
  done (took 20.560190567 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.935353309 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.904549456 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.930695045 seconds)
  done (took 7.49120599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.930061358 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.019229953 seconds)
  done (took 6.670024079 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.943015547 seconds)
  done (took 3.663911701 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.816528309 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.058035325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.275957261 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.30711748 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372086203 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.667782176 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.119536347 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.008954616 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.231889731 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.233393693 seconds)
  done (took 23.811730877 seconds)
done (took 129.562912609 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.12801338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816385045 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.992025838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.136810096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.024624766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.991018193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.007528756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.12628993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.819397201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.807485473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.140615842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.027183782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.961529736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.805718354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.96414933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.810072674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.023990278 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.152160885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.82716501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.041262667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.020032579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.785920856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.980179456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.800996308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.031460864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945697746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.331065053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.81380229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.969914246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.343326912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951052427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.208477651 seconds)
  done (took 165.507534439 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.791794648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790600962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.789742131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.789882589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.324835533 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.791143909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.791548762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.789818296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.233878085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.229904376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.790254881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.318804924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.789749489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.790027289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.789785392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790437919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.407036256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792539677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.792070345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789599803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.789984799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.16886415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.790394453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.179442478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.398866014 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790636796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.791314347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790172336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.791263167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791703401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791922768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791557262 seconds)
  done (took 206.963940581 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.712134729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.792306948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.791308705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.792067449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.793178801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.792916762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.793288443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.791406881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.54931447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.540480585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.794461705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.793382473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792840443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.793575973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.792561154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.79393221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.793487062 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.752687655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.794056352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.793445771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.794640711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429551211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.795228588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439932356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.79384698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795283052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.792597912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.79495151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793114463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.794348129 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.794491919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.79298279 seconds)
  done (took 217.778120291 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.035003429 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.792916032 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.793752536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.715607185 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.794898012 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.794044452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.780315771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.038783647 seconds)
  done (took 18.471927754 seconds)
done (took 610.450843325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.153237119 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.991891001 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.972038089 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.818821829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.053129416 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.862611915 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.81344155 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.882760079 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.645270824 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.890989875 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.474744329 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.839126149 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.566869667 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.845036389 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.941029349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.878063618 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.3694221 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469296194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.992431781 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.873421347 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.994482473 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.742940213 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.902204528 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.690552558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598054321 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.788107271 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.844466369 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.375484963 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.827435389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.973648952 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.460415965 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.075554763 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.830361863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.812702356 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.8727305 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.846790115 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.023776463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.828473066 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.937787887 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.536457846 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.874166996 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537792517 seconds)
  done (took 99.434547659 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.80720462 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.801713415 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.801697196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.801439679 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811955681 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800590748 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.802405925 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.802325578 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.800854877 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.801082233 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.802023049 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.812320694 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.800979885 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.810867464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.80144768 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.801030952 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.801764093 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.81161546 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.801850394 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.801665235 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.802713891 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.802362628 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.799420985 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.801749535 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.802849373 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.802588452 seconds)
  done (took 48.630781432 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.797337817 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.948130571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.041851495 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.818334471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.798699255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.801288779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.816780999 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.803107042 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.800384169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.800155197 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.901669815 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.804231579 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817447663 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.042319607 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.816054354 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.79799665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.79819713 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.799723893 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956216986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.814186945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.817336594 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.802915105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.81706689 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.813214656 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.799915784 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.798769025 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.802819985 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.238834102 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.808930779 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.902082428 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.844212422 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.822189921 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.177817276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.052529314 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.855063601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808380935 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.79731374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.906313719 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.805168781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.800503502 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.816011091 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.804035606 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.041479588 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.319080763 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.815179234 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.798496469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.248477811 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.916115209 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.842138697 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.811463768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045274152 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.816791598 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.799824397 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.799591932 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.837144505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.805391755 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.798936688 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104512608 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.811532954 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.817392097 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.805862661 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.801927655 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962858076 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.809161689 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.952044427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.811253814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.807453951 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.802377359 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.044601491 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.8175537 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.327123792 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.814643384 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.799786391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902740896 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.956249347 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.283026435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.81459573 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962732854 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.188542233 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.824594699 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.808147408 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.231609046 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.829520022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.807778253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.802464893 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.801388909 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.802262364 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.845163233 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.818723345 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.247373006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330669351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124305112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.8281458 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.817077817 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.801729872 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110432908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.81053227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.800659735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.03743472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.335449676 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.817116136 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.808948277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.309315745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.817989445 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.820781942 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.808935799 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052169889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.819524816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.844916604 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.80156507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.809033436 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.805129013 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.822143784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.809225633 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.801926678 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.302060653 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.926024705 seconds)
  done (took 223.884331501 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.803339976 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.806046087 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.804285788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.804371606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.799907972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.801963338 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.801580392 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.801687428 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.802559651 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.801239342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.801477876 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.802185809 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.801706711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.800694916 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.812535191 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.802912507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.406583645 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.800587958 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.80195972 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.802558491 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.440075703 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.80533452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.801829646 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.800972408 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.801038198 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.801601074 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.804039855 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.8122582 seconds)
  done (took 165.465729232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.80408209 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916032521 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.825618976 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831611495 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.811669103 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.802895751 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90142434 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.826016249 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.809322427 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.803296198 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.804711564 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.864107451 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.816768605 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.902969088 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.839704101 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.911232 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.913789714 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.814258018 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.804481642 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.803966328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.835172544 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.812740117 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.864852035 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929920098 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.821877835 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916658561 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.826401069 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.805304589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.804912645 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918026639 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.822149604 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.864808001 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.834961047 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.823008066 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92323244 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.924491311 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.914137346 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.914508258 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.81445549 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.805574028 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.806402852 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.805852548 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.918314911 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.826716613 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.806228886 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920179106 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.827963937 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.805907851 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.805659196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.805160269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.817888253 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.823662366 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.869861213 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936022768 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.843656613 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.830153461 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.904336506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.927180528 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.807134972 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.904318245 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.816234815 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920433019 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.830171905 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.807376126 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.806536602 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.809963364 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.836941291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.913249694 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.915321945 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.817373489 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.904285887 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.84609978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.814101272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.805870974 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.806466437 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919086511 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.927478363 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.84656224 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.843160008 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.836694759 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.814981163 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.806458123 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.807443651 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.824678787 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.812163065 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920005057 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.927657982 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.817092505 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.807932774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.807013874 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.807220665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.831004205 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.927803875 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.847313455 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912367708 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.877774159 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.882298141 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.821288918 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.820570312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.812081372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.869539761 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.821482743 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.820440353 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.086463597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.867842788 seconds)
  done (took 196.089763806 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.194815751 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.861073009 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.864017796 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.121448494 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.158770942 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.708752984 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.853583498 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.854259365 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.879786774 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.041251166 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.929809393 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.875642816 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.842890834 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.830110838 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.85385714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.879646216 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.863941935 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.202967568 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.062276855 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.993839783 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.849493662 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.118087149 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.169107749 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.426700423 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.905818856 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.235332228 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427648972 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.98661757 seconds)
  done (took 59.738934271 seconds)
done (took 794.970186966 seconds)
SAVING RESULT...
DONE!
