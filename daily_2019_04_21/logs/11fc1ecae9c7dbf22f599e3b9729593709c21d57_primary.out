cset: moving following pidspec: 23565
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293483782 seconds)
loading group "string"... done (took 0.582019694 seconds)
loading group "linalg"... done (took 7.125093815 seconds)
loading group "parallel"... done (took 0.164142426 seconds)
loading group "find"... done (took 1.11843708 seconds)
loading group "tuple"... done (took 1.978276902 seconds)
loading group "dates"... done (took 1.264269796 seconds)
loading group "micro"... done (took 0.234864204 seconds)
loading group "io"... done (took 0.964038465 seconds)
loading group "scalar"... done (took 38.272534982 seconds)
loading group "sparse"... done (took 12.283430115 seconds)
loading group "broadcast"... done (took 0.966762039 seconds)
loading group "union"... done (took 13.038617566 seconds)
loading group "simd"... done (took 4.430788869 seconds)
loading group "random"... done (took 8.929735634 seconds)
loading group "problem"... done (took 1.936114743 seconds)
loading group "array"... done (took 21.12150899 seconds)
loading group "misc"... done (took 1.917015539 seconds)
loading group "sort"... done (took 3.198376327 seconds)
loading group "collection"... done (took 17.903690744 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534552553 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142426813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118778116 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140472077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184972949 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132897334 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145038647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086081505 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023553655 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163415402 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141288519 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478197814 seconds)
done (took 5.052000108 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204972191 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087459485 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09706868 seconds)
  done (took 0.886718259 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067137902 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127889041 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081330099 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069002179 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067660501 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082054368 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067902012 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066496264 seconds)
  done (took 1.27280757 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074797318 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069596909 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08543055 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068937752 seconds)
  done (took 1.009456355 seconds)
done (took 4.16148963 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.896008893 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236998258 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190454004 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452824643 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148196349 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189264894 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653562052 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322964285 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210164594 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100976785 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105583776 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376789568 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107567915 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656208561 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076588766 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106168694 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15855872 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448128972 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082805389 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08385541 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104512815 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142301654 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101478502 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077943756 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169216553 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070952915 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147722768 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095962178 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069094287 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244154336 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190575371 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678201996 seconds)
  done (took 10.442635947 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100657831 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117103591 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070163044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141055337 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102146634 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087237801 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071582163 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084340621 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092532549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159451501 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115182995 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106677754 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082628179 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071046116 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101620593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212468742 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107655902 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086095403 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087864388 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077417608 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122692802 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084265958 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094976072 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079295933 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153185179 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194868721 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112384997 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112484629 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070395121 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08200542 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132877349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142262636 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067705613 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083229672 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140815054 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111446755 seconds)
  done (took 4.581504364 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.02331541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159996862 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092697339 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152343273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085690815 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109971625 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083998218 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128307028 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065139602 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249631229 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099665893 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.067067006 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.454996998 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1279598 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101928421 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069089133 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083678418 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069533906 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501414065 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144203948 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104313655 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102589817 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075049001 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087635124 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358934497 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068974417 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067867387 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085391415 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0605395 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145849855 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06924646 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210330819 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08981992 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088313021 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102520187 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195953071 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095449552 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123718495 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067682378 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082716641 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169399736 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075215286 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066888295 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106439846 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119437248 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104577465 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084641618 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068973058 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181077899 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067893395 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100143817 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.889590092 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166758043 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069105665 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076463356 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083968035 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27281357 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103091728 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067570112 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082423207 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066049582 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266417817 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152346463 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068424437 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084236133 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067547877 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068548139 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402977843 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06876708 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.00458229 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069855549 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077558489 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086144727 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068583223 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089302556 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073693351 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10163522 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068346876 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068573657 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08447205 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066606559 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08482062 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086216482 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202962061 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083564579 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068000821 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065907464 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10364517 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111174491 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071523679 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066379649 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116940744 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069566035 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084269485 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102903755 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085157628 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10106797 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070790772 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129399026 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067881929 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15161506 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073937398 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110933015 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073522218 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11505544 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093966467 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069523743 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152586225 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065508709 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082757015 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068204707 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065979708 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085223478 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069414345 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098896891 seconds)
  done (took 21.20886737 seconds)
done (took 37.967636263 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291632886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092099702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092479045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075846316 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092034579 seconds)
  done (took 1.43053305 seconds)
done (took 2.190363921 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120664171 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116462063 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063877683 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11350561 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064262756 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117204125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115073605 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081728329 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115883566 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067801585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112243707 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064925851 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064291666 seconds)
  done (took 2.004278837 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083594761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08576915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086182373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082313026 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079527666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083413104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080598369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105587833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08134201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089473046 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065354114 seconds)
  done (took 1.678929905 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082813424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085573762 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08618187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081831497 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079449032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082961224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081387558 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103615014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081518625 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090231817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065724874 seconds)
  done (took 1.677799249 seconds)
done (took 6.11150436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079342025 seconds)
  done (took 0.828888142 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692445591 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.612730804 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084647799 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134429975 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222446788 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155306227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440126688 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110980012 seconds)
  done (took 10.37610352 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104751704 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086179207 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072830834 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087506467 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071960095 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087300321 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072256086 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06919918 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084971803 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071976224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085367662 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073098943 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087386873 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071467927 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073338089 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085252564 seconds)
  done (took 2.101604969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094088699 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093015342 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091485836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077511557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089909344 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07477428 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093508667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075565253 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088384881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073957999 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092500931 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075343222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089189043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066810946 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091583547 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078043416 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088273991 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07688889 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093057755 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076867579 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09223048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06617511 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088873588 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076514636 seconds)
  done (took 2.864606115 seconds)
done (took 16.928537478 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131795758 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077214577 seconds)
  done (took 0.965450707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08220132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098499916 seconds)
  done (took 0.944399786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083388689 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081970419 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089848926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093826572 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067302506 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082551171 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10308978 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067388404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083202754 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068617044 seconds)
  done (took 1.584143776 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069710909 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093583407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072275193 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098307533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075213648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081714271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074110356 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08482361 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078777639 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080210233 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072818206 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099649488 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072531574 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101176483 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074860839 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08596159 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0885894 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068995555 seconds)
  done (took 2.23825465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067637509 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068531927 seconds)
  done (took 0.904089719 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068676653 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065214036 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08348517 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067487098 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080108917 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064646986 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08012678 seconds)
  done (took 1.277016345 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399893651 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110031776 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24270482 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088825643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104197816 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26110178 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084188173 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07216263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088948414 seconds)
  done (took 2.257541632 seconds)
done (took 10.934243893 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080833061 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087775709 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110416662 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41540581 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107338021 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067384988 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132571965 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.216934157 seconds)
done (took 1.98762604 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125494221 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613622185 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400576642 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212863137 seconds)
  done (took 2.00088666 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377560765 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093155143 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074504685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068119629 seconds)
  done (took 1.39030076 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067090638 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07076164 seconds)
  done (took 0.9139251 seconds)
done (took 5.204557509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085479449 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08407509 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065271408 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067370825 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081955713 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067237973 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064983723 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082907203 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068196195 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067058207 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083221643 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070924247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082585499 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067815066 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065203632 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08104365 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06739284 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064986747 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081030988 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064894596 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067465345 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081050617 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064798005 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067362027 seconds)
  done (took 2.552910377 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086379313 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083986498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073395121 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08825257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072261186 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089009401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073343413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068120711 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088596473 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070009804 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086814555 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071606134 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08538836 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071807123 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086103758 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07183797 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08822431 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072210823 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070057763 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087213631 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073467886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083968977 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071420704 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088719613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071079983 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087404895 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071105586 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084028087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073451242 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087616032 seconds)
  done (took 3.155339416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072545056 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064670147 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08171313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072157935 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065421294 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082831026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065357531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081358944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066872891 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065067069 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082099461 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06532583 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06548129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083053986 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065966213 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084439172 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081945288 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065486632 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081205776 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065712564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067760554 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081329244 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065639625 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0809134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065277537 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065250115 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081325269 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065887915 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065879599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081360845 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068411028 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069018075 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081351414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072139148 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085193171 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065496881 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069823409 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080813876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066395159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064905979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080844525 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06616231 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065377032 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087809175 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065896356 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083174762 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06536758 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065968177 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082046298 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068116083 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08071152 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06576606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067745577 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082779189 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069191124 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064741567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082486974 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064859418 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081568099 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066208538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064814766 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080849905 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067190612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065700582 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096678118 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071681641 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081211347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067622038 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06645413 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08392029 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067369795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079519718 seconds)
  done (took 6.031858681 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117313249 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091739535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083522784 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067106305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079871016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066216123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068508285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082595384 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066794706 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087711749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06556945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066682307 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083275674 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078606982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082195595 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067317637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088002842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064252338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065947954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085013186 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066148526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084852438 seconds)
  done (took 2.493730374 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185701033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088772311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110783329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091604476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085682257 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075969764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071483075 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088121858 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072017496 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088115595 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069703941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088118878 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0699894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085801326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070083055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086708335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072337817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085889852 seconds)
  done (took 2.370216575 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080071193 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06765296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107142757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067777814 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085271186 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070731605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089991968 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077097381 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086515509 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068569942 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093033784 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070717053 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086610334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068908098 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070238495 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084425821 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070413389 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084650637 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076500992 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089817843 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073328381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092228447 seconds)
  done (took 2.546760172 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082720066 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069585287 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101897966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087074031 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06488341 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066816031 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090814359 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06828614 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090421013 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069331669 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067680088 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083072632 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072838558 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08389626 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072559755 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084632355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069822134 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067350577 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086186627 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064518901 seconds)
  done (took 2.330568621 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088891948 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085056959 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069306367 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092852682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069531938 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085619914 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077949854 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084987704 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069051788 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110178703 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069064572 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085751243 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076980343 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090076669 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068703604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092828484 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077220278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093493114 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068480795 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084897191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219292094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069397704 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093005616 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069532403 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085397275 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069667916 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069374533 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091206884 seconds)
  done (took 3.198632221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068470987 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067903685 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081575868 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065323632 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065775093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08196797 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065915876 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065100198 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084278403 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065819679 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067225887 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084155861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068194211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083663939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06788729 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068106134 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084162562 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06579027 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065867063 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081631028 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067706687 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067329125 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084001414 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065822042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081071115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068683201 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065848498 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081594949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068198105 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066119147 seconds)
  done (took 2.955578376 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077574537 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09185183 seconds)
  done (took 0.963549441 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066463325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08259494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082553818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072382947 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088814225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069642389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092398595 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072069744 seconds)
  done (took 1.418046096 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08344706 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079293497 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086547506 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079530763 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095714062 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084356672 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156134854 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085729202 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074699175 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083583799 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08248691 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067270943 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068567243 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090456427 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07351973 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065868217 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09050556 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0710645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083256651 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069899143 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092881799 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070489227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065068301 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08603817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076268588 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09609072 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068897914 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087572589 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075514329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072781837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079754353 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068374392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085647507 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066656718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093793776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082489391 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086839132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07687211 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069135978 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094905443 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063904892 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089301623 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074259087 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0946063 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068639691 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069250188 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080640062 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06592743 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086928635 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063477999 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067912344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079642768 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075358995 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087359143 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078968692 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069009323 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086303581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071141512 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088700021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07402285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085899363 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070166279 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068337027 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094411528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072242189 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094031732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06372702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062818732 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083535737 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078058875 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106869663 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074951373 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085845704 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069275442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082881884 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071405654 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070260827 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090136117 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07433032 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085073472 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074435898 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091796271 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068117348 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070419279 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092290216 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067268282 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087111485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066348762 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100009585 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067019894 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065732513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083326448 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077754336 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087391046 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068565604 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081526451 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07487496 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062743912 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085328223 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069342152 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085137721 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079562939 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089553409 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073606439 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092387277 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075985095 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06769376 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088647446 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065517635 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085765379 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066807463 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074966353 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080052669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071167971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084954797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069105751 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076270169 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083671484 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068208485 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091770612 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073716749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082640414 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065812638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070773962 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085182157 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0716123 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09268326 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067272478 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063771499 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080630908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071555491 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084981563 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071726041 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089825285 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071454555 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063406096 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083051656 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073954575 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093543103 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068921259 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068601769 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090779519 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068730223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085261547 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074159515 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086879736 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067722535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073429552 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085649047 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064577934 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088603581 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071247765 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067213499 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088118754 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071811668 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087287571 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069214306 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066436175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089901184 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068711304 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084088428 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068057798 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083563444 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077906913 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069908949 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08090904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065943484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091623978 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066072452 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067463701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084180301 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070377267 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086052303 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066914979 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067764289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086626415 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078415936 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089656665 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069228337 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090176904 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078901941 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084890984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070590513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067901645 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085872426 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069289062 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093613901 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073603553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090225238 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070809588 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06479533 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090089705 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07552187 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084318255 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066682523 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066910203 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088539052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073802728 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088899015 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068971085 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083269646 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068939058 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070786807 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087666758 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067824148 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083998006 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072489337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067422047 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091645708 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068970145 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095588915 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07119676 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080427231 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07182266 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083339929 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07389104 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064059567 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082992289 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067767999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06905423 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084938348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07121568 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079543254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075267319 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091787934 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068584463 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067513241 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085212943 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075613909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085841426 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071744901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070637683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091587959 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078064484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084019855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070749736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094612055 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068714771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062337876 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09018929 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066844179 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084158809 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067524824 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06610923 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087824406 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076708929 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091491741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062626188 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087039112 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067153239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066901198 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080904874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073034085 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070488496 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086528501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074587997 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086061858 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068977251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088363582 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068636289 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06882464 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086872393 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07092976 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086376148 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070336023 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066976888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087874689 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066966313 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082932631 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069938004 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068354125 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084859697 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073551911 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084301877 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068370589 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069670126 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087105177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068106474 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085225226 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067335862 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07021405 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086331603 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068052179 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087174097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064202646 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074479498 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085369921 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075558471 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085092168 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065144283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089717318 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070436532 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073058871 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086260343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069416556 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086737128 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068627924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07033841 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092541351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066548545 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095742304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076045322 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086030882 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071440301 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067674091 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087017311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06803621 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086039951 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069182099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068015194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085947636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072665055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088158511 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068154402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069383481 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086751531 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0685484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086866657 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063699222 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066568356 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084913404 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068121071 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094456313 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06879239 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084567006 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068053318 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068797837 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084954641 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065630725 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092359932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0773563 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08574742 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075340673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066495381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08632755 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078409438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080356965 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066427879 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065280335 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08361637 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074869024 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085809941 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077033926 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084968679 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067417921 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065962167 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086513323 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066855611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062647174 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08392648 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071973323 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084091812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06781611 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069517874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088626833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069542631 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094930604 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068177505 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085824894 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069512572 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066316797 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085287546 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068209254 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070408869 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08747913 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066153041 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083237134 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068214522 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068797109 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086761033 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067781735 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08681603 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074449158 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067630508 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087770786 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071426051 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083187269 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071315462 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06773654 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086005383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067030733 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088758633 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070954244 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086681269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076757891 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067235795 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085893683 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068754648 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083409547 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068571288 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067392971 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085861246 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067823113 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086843563 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075715652 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066253881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088239944 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068203778 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085689939 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075387328 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085927032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071086533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074713319 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086232069 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069754125 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093068973 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072011414 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088449492 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069549434 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069356561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091278253 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067664717 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091617937 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068540589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06889266 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087160132 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065912532 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085109457 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068950554 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067363755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091564795 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068803869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085221391 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067751881 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065260805 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086573123 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07215062 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092407851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071113027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087501746 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06412718 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066057297 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087209913 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066389785 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069061449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089707198 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073269397 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087860219 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06855132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083524395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077229043 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073154941 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089583097 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0659579 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089297691 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069837892 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06996481 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086720624 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068560266 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087201912 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072852688 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068915886 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085136969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074614587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089070555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070000316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086301099 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069413844 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068278656 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081953661 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069772942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08676746 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073305409 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070379441 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085715294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078401124 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083708699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068363323 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071432199 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085386275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072129226 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081604282 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069645534 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086360331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069997108 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063362557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085618104 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066437082 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069864199 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085033387 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06429323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095983968 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077288444 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088847883 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068016966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066429517 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081416775 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0645426 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084367141 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07014276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069960435 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096545687 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06741583 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084639157 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064993907 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068424694 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088964611 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07234721 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083168503 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064552506 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068075182 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089118744 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074508118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084707385 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069032882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07080442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087744999 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066097663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089167851 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065626687 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071299167 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098541214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068222396 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086896947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074471609 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093031621 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069240292 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063806585 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086523928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07136173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086239938 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069781153 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086820146 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083557303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088161962 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067677062 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067453322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088500045 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067397555 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093024372 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06952553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068730449 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090648851 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069830767 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09341351 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070763702 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093456856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071842287 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070744221 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085771466 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06853221 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084056401 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067395795 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069161831 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087898937 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073075615 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093761772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067393543 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096798073 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077565426 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088024047 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066187559 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067360734 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085106183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064116442 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068450911 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084539262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066693601 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084165423 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069108394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068487665 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091123841 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06934296 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087157602 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068923735 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063179984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088169299 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070697787 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086542389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066165334 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068825617 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086922366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072158052 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089635341 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066563104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069646228 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087633957 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069238458 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081516004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074264405 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067397563 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089125474 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068001705 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086278408 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069898512 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071202123 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092573989 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06935004 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088438033 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076426572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088680195 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066407721 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06525079 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091056278 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066733366 seconds)
  done (took 46.90385669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108246281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082939048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064267273 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081988197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075991832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083055123 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064640231 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064368309 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083450927 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067538737 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081517803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064202665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089730849 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087342777 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094804895 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067272855 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08229445 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065678236 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081632336 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065131769 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09023532 seconds)
  done (took 2.489179902 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077086915 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09068256 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075314847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096597898 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06912662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091026147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074225058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090586851 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095979208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06950013 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096454632 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072921555 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086495745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069725595 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08709935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073416467 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095983757 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070138564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090865017 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075135058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09089708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074848084 seconds)
  done (took 2.653504786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06903604 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067527539 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08692772 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064359234 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067891568 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081155279 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071970678 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083717477 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071861465 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074164733 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084936099 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066851386 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0870409 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0638171 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06741257 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083667777 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131336728 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071898254 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066857978 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088395588 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063411934 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087906142 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063740044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063390674 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085180962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071296968 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086715891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066556902 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067017515 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084781682 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067681582 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083131089 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069306549 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068170415 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084758632 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067085261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067618425 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086124379 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063699805 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083523904 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068412901 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064189504 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086551718 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068558865 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065699923 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084101734 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068929679 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085372388 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064071743 seconds)
  done (took 4.533279042 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086053306 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130313166 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089159246 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091342968 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10274534 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094021805 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071860599 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112018612 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065200673 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086194635 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083984783 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103987514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086521894 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073191155 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093041593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068595962 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068027297 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085635669 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071782987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086736318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071571585 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092663813 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100362959 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08239595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090435285 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067466219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084801084 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072468717 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09842105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072323606 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090836474 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073217285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10182497 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072105175 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086569156 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070141876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102758598 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085734107 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070690146 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06631266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088835167 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071528754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093306631 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083806912 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086493515 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072795179 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086228074 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064943976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09979326 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06942352 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094234222 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101321976 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072081904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08596261 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072969687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100986048 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067699731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084077614 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070523684 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098683397 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066300355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089704892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082380125 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087188118 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07498628 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101167181 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072963002 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090162609 seconds)
  done (took 6.700012052 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077279049 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092258387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082529359 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100703716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092886217 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075268487 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092067825 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074632356 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09251235 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079022784 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092836904 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113516898 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069821454 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095289561 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075165388 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093506333 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074631749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093046015 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074245928 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093597583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092478063 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083929804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093561133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100306569 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104335627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087884666 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074772065 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092301838 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082969811 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093313072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104868099 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075436171 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094032731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101043055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08674178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093033582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067870257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092468094 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074481194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092739426 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069851015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101271713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073828765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087915458 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07422222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09344952 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100259489 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085914392 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096091349 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097223196 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074573684 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100826627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073710157 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094086159 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101065318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107515591 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101623107 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10039174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074351581 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100897955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10031892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108831303 seconds)
  done (took 6.390486231 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088689031 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096177015 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097851363 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064013426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06635246 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09107941 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067000353 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084434838 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0772754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095611878 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079431835 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090439175 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074764602 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098315052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090379288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076018652 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090267693 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072328244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094949926 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072380947 seconds)
  done (took 2.517995296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077153723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104174259 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070024696 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074116368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091453746 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072663154 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090046216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070653464 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087413884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071761092 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096778362 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078842933 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087793333 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074682614 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096989067 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0747974 seconds)
  done (took 2.178184123 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080716785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097581872 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083144353 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088129209 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067186852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083905097 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068467897 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064062758 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084468652 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082298683 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088279875 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070483509 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087155199 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067588578 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064886896 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090204227 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064643236 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085238405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068047585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10217382 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079510452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08586007 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068716191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069188804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088337122 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07307976 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087581493 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066351282 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08536789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068722353 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086904395 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075642972 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084052292 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067454138 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066191536 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084424154 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068734113 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087284508 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071585856 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067075127 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086123519 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068073237 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087499465 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069169535 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082690298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069094682 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064164833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093046058 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066246067 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08809368 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068676263 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089389758 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069900153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096684141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072457348 seconds)
  done (took 5.153643768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08161366 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071132843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083725061 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066612322 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089939753 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070388731 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070976772 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090040235 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069801169 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084520003 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070949103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089830243 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070507857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071104722 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088988483 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07195413 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08270551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070862027 seconds)
  done (took 2.258805634 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074641522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068137956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094360126 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068584523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087392582 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07164343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063742541 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086289149 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067500998 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086800109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069378872 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069821769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085701905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071969738 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086353985 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068907167 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07070359 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086298667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068541106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082424635 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07077936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066500029 seconds)
  done (took 2.530756955 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073669437 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094229602 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162861844 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108098096 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084095344 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100865512 seconds)
  done (took 1.489487191 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092700595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100110011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069566323 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107848787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077079034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089531577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069912039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088722469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079971301 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10271941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069567192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097629792 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096419104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078668829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094527789 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075988633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088757713 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0692832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087845619 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106654518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070600869 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097527486 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07039427 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088354333 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070169112 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096404191 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077574499 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10189211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088037057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078707249 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094157729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06983825 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096844105 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102399503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07224914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097003345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070504005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106122939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074689343 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097183197 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070888555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095155745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097000149 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075288676 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096658741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069846164 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093953907 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0696861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089146483 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1135928 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075424883 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097100807 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094081801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078492185 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097376208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113399112 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083201109 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097152428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094430535 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084141996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097415705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075138663 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097122317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102154244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076656511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097811456 seconds)
  done (took 6.663141889 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08691525 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106339724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07093814 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103160513 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097399751 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06985578 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08788451 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070466581 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088302237 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070142561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129163992 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07067642 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09829862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096497525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070568518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088746707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070368246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096618486 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069932597 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113257466 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088670159 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077985211 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097461334 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09608284 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083662693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094829468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06996514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088617274 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070251474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08925005 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07399328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090135658 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096820143 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069881921 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097114138 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07054173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089152477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075550862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089268012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075740879 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097570748 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10631762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070151875 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089705456 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083658436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089463012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069528697 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089627767 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070613337 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088584932 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082258104 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103570214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102906059 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097050114 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071135449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089692329 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070113846 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089090131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070603814 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09409798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078902527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089254688 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113135283 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070306556 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088866721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078874206 seconds)
  done (took 6.55587362 seconds)
done (took 129.810555688 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20763741 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186416501 seconds)
  done (took 1.26064575 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070341274 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096594785 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099268727 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128850743 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087409912 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101187442 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119863964 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081109294 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067227012 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087868143 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068249023 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088115274 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132909566 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067388197 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087456367 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070449147 seconds)
  done (took 2.327761271 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195619014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11000947 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066522011 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099934433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080226328 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085725993 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077479976 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094997564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06721453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078231913 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096203592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065711651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096097895 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075503098 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098125671 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066132538 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097848022 seconds)
  done (took 2.53276523 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104134538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141987555 seconds)
  done (took 1.11809827 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200894585 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124173702 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203059881 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.413692599 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206620945 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27783103 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173983942 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172282373 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156222118 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170680143 seconds)
  done (took 2.966755716 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100746395 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170982598 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311615491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138103885 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086650648 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116841527 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138844584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090245282 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101410193 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101166993 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081444873 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099235257 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097675977 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096682351 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075906954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09858154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121415017 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077308945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076846618 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097525199 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118369731 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068922239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075509175 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095032045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077330902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099041405 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067152935 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087151197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07672289 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096055944 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080043237 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11379733 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097964647 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131633733 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082423159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130527181 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098898316 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073541148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096122775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073938374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097679575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077717388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104339689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077713761 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087519588 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079437791 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086743249 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067914376 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100165971 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078748979 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099145879 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078826715 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129577809 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097180296 seconds)
  done (took 6.254507838 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.744750278 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110489346 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095590337 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.803981314 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089781723 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105982877 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709724941 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118221083 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208840493 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760694857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090221401 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099546409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179957035 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213569621 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898532984 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282314447 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634274032 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105246904 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109814182 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13249678 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138839828 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17534702 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149697522 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434571114 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076589293 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092769736 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137210578 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075805702 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139468629 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106365539 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094126479 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154496509 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225261076 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154133442 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097835823 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071538392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092341209 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14839303 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218807816 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189484306 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158207612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070673922 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091814368 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140135075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131149286 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06963187 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139636855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152403592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168313977 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075152842 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075740278 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161826826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139055005 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143192439 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101654972 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268666045 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281446399 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070079985 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119952745 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104636003 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214160773 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104960383 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196823553 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140153633 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166124139 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091121357 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733084246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147377943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091811016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075795794 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118637615 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073996259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159188738 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124027018 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369387476 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160976126 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074488621 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070703086 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228378829 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08432107 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092019945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140019858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076689211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122748351 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142691788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162563605 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14659643 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.20688048 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142239494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138400537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096622617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123443382 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076430246 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190324769 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190463612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14126572 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187539909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137755633 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161222966 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146162258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076866245 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150045976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119085845 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101710261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137702714 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188639666 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102706938 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103929345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073422427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.159256006 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125764498 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087218454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138536297 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147680586 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479444008 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147881986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069383634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108254807 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139960499 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140631934 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096747738 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212700194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12285396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146310373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122466059 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088956669 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099055359 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160132852 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080122736 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123260743 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137716246 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098548069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214344662 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166687866 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099251815 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193909066 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162039458 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095987154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14963858 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118840675 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147296577 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078327287 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136374564 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097299437 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750758225 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163505016 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121520509 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075741257 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179445381 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071381357 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104739295 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083851995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090433224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.727605186 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107399905 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080346881 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104323814 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09538115 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10040855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158081826 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075877642 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13897759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199824636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075526175 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119622014 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105473638 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140348977 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075356321 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106237667 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103934747 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085370409 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12285812 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094980271 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084592215 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146186143 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140855131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189780194 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538875317 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093354167 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08304336 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199434166 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091731091 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240445476 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135518879 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.195672718 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140896714 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101600095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.261661647 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162163355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.154781955 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107846475 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15105248 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068392783 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156960628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142097619 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071302498 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095998186 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141256269 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144470701 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14042109 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931635816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071419121 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203494565 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09060673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150148664 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075246964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098921368 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258449966 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072318818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145828315 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142474137 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09522256 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082814713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697018971 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084821917 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159860765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076825643 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190875673 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141713285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136117994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13768054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097594123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139742821 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185687966 seconds)
  done (took 40.31917864 seconds)
done (took 57.654940208 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256295091 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178203064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241032473 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144503547 seconds)
  done (took 1.791518923 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143548192 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104749998 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.1175063 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086483411 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104251901 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086824239 seconds)
  done (took 1.540913065 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40252914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263982005 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230486181 seconds)
  done (took 1.795505021 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259378184 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213063394 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446072425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296401714 seconds)
  done (took 2.242038346 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176035512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114452187 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068082586 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107513141 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157821139 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253182555 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128118166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188320657 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081064578 seconds)
  done (took 2.222143296 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197122987 seconds)
done (took 10.69135044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104440734 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098534947 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084852072 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.232776582 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.239508765 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095424571 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080104966 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098665489 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079069541 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.134773056 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.170454818 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135515027 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214235846 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228445683 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.221778415 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127918418 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080150605 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125657821 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084728799 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168807737 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 0.149172065 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.205047257 seconds)
    (23/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.19815603 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107662837 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166986656 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11751574 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220320402 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079585361 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075042424 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173668632 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092554071 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.223137106 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098056002 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.227881173 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.132496932 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075319521 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.160052923 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076200477 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118500854 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215590384 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134845244 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080373427 seconds)
    (43/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075860129 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.188899594 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096117562 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095431637 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070369711 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151800917 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07654204 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119960927 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.13608313 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088701081 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080232122 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111605959 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075306652 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070284314 seconds)
    (57/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.074697487 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222128573 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075862773 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110986227 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097373281 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.119675159 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054028691 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191713075 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168495743 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091437836 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133006193 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075332806 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.0759115 seconds)
    (70/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.084580051 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054377315 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145874941 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136696084 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114510775 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.168498174 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191783791 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158172675 seconds)
    (78/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070679215 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100329105 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15736387 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091382595 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091851778 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103097188 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074541633 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072938899 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090232286 seconds)
    (87/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178734368 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138009002 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164921485 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083114779 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09970664 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124516562 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.121555599 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054413244 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.090480956 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067578542 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.131327739 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053627594 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075703185 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159909967 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113662026 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.151338537 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171571787 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05381105 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082024085 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192126163 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052880918 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113900032 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182670494 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149788048 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159210199 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 0.149410026 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068270184 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15969001 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053331283 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053795686 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053822603 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17055106 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114084107 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109991904 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168771447 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053198231 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128644946 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115243523 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195792782 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16912606 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075229162 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067676781 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077073676 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147764339 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095934666 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053639695 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16487024 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098685901 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102143431 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054155427 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054187314 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199175698 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113081925 seconds)
    (140/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077738959 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091300577 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067678857 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 0.160473552 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076212268 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097268722 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075445757 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05369391 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.128097768 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079443701 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.097554048 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06254166 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072444844 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097038583 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068062793 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09272723 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069916258 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091572126 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091939736 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075912165 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172736451 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054151092 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123660489 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112566396 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143552967 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053840641 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099370184 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090159036 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076314059 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126091145 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067231952 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097807743 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054028926 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172662466 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082174179 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116536428 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074906972 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070009394 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097096271 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063085732 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089474687 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086080932 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053480583 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070692767 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092756965 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075348318 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089172842 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171535968 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137197978 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055199035 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054305883 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.100379572 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074963543 seconds)
    (193/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210342707 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09190491 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076684947 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126227735 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077235933 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201852928 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191521261 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054892691 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072474489 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090289434 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.363767156 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097239415 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186169974 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068280257 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166065507 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053865279 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089796333 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091925357 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.138313609 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097444093 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067567791 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076985082 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097705535 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100461019 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090357431 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074265046 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088706057 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053801646 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073219652 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098507988 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074146293 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155838252 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082536667 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072850189 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07510989 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056190275 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078939327 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089432554 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053544495 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052929035 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096097675 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055174816 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163047331 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06718335 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055348389 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098369217 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053245277 seconds)
    (240/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06938243 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077157073 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054371789 seconds)
    (243/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097957713 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 0.164400261 seconds)
    (245/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105290859 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070653973 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101115594 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063680842 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06231993 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074574254 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056444748 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088223911 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097775176 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052804936 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067083938 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11432559 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074552468 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09526306 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089666283 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068700932 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077186634 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068857534 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06575007 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076367882 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076526778 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053790864 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089466781 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068609997 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089484773 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.0932345 seconds)
    (271/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114468397 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069947673 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067203625 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077814348 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073117838 seconds)
    (276/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05400352 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090280183 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148547537 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098373541 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06677744 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054115963 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088236396 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052973585 seconds)
    (284/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062005396 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075952915 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076097461 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096455329 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075112227 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067258347 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066845795 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190514904 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095469769 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069002222 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053164039 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075222555 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053298916 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05373696 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066626562 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113578016 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067260045 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096108653 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054156299 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122382171 seconds)
    (304/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062664589 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066544299 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089681232 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080215624 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064263271 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104044565 seconds)
  done (took 33.449853584 seconds)
done (took 34.360969414 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08238716 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114066819 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076352719 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115935256 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081516595 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101307442 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074359443 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079628362 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104296118 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083535452 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102530651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056414425 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098802986 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077222927 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099126084 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093332187 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102097387 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074039182 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075402912 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089354602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075599637 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088919819 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069397598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057493948 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101597799 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074726085 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073670649 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099036913 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067270361 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089004097 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070570433 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074815716 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088923759 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080850851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0948947 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075415512 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07746236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10040791 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070110592 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089326214 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075211221 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067087869 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096204085 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074882551 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072958612 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095167973 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075661595 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10269954 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092766184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090938363 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075265153 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099705939 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078825313 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073707473 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093706506 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075571741 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094076845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093346214 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097878504 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069560031 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075429864 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09818822 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072638165 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07504911 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097679321 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077003351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10030565 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073706798 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098740686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073867116 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067525045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097929692 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071835273 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066633223 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099409102 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078851839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088249709 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073392031 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073982413 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0953597 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067232385 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069149715 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.092003472 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074237771 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091309701 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057392407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071059532 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094972291 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067331558 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07604712 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096383217 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074145755 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068982037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101452933 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067883924 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095277101 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067891243 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067290405 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091780108 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071291776 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066714604 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091686144 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076883147 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090657179 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0745407 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081028895 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089907008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073725098 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066066691 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089655657 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083005854 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099138803 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067588034 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091643816 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067169946 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07528543 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089261655 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067500563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067063806 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090528135 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073479231 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067309011 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092001964 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074932534 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103442577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068371876 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071238564 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091635435 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067478085 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072762855 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090574123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067615785 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069461025 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087406692 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069623271 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089308938 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075129865 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069154784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097810286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069474758 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075178948 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095028816 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073685244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095318583 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067108452 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060680852 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091642436 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070092546 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069645024 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089878956 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069265565 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067104937 seconds)
done (took 13.372044395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068738879 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169502673 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127731419 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097861741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112197672 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06863308 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101488856 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105749231 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093547383 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127891872 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089037278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109809855 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11532281 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090038489 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067438343 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071757582 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09207122 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090023444 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126737367 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11031859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118228351 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089561366 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121525873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091773854 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113636182 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104307242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0911163 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072196654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070482141 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117533694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109660531 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071117499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068345595 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123610463 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118285884 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086855491 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089562027 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086594028 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089491966 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067960651 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114828426 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101782668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105736867 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082900494 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097167994 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07068285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090640829 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086870235 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115044063 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082069563 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112321881 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134189396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070790135 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107413073 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067480288 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111430534 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105632144 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070367557 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068425928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093285793 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067842954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070849805 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112706636 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116425244 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071148553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106452786 seconds)
  done (took 7.330374153 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086591402 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118174114 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08605166 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108916107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067809824 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068344024 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091371527 seconds)
  done (took 1.59530777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068952653 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089826647 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114136328 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091249968 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109918133 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08857937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102557046 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068407939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109058148 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069691635 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089735984 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129099627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069640524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098544803 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092114515 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091793055 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092611454 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091590197 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072086217 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115090547 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072048861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088599136 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094296303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068227284 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106157473 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06897695 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13971865 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073640296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07010582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095431677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067430908 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140780903 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1058038 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07987341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068714747 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106210212 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083763249 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089800173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085109867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097283008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083242207 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069363402 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093591332 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067406685 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073304042 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102379454 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070731653 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092671902 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07209507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08844847 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092338574 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082864012 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091934814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072704992 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07025584 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097854478 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078680883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092099333 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089924466 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070245013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10915681 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084593318 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106232378 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084702527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094496793 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083229764 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10579726 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071628449 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070379817 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09657771 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085248387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090274441 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070248593 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07977424 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094078284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091993123 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115056466 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070854259 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.1027513 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068897388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069577789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092007968 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092103881 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095442954 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069415936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073338478 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095871539 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067366666 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068195437 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096384119 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067619172 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069527164 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095127437 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069044426 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094108807 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085710576 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069331196 seconds)
  done (took 9.428201534 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069989675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06972802 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093953806 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069664922 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069722054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093061814 seconds)
  done (took 1.450940501 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099131953 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094194263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083775765 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097422868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108410264 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107188211 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084543709 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108101167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087012357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105493548 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084012012 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107504672 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089556314 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098924251 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083409807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097654588 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084781406 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101494833 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080858219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098710161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090009991 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098710433 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075801189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085260375 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096013488 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074619944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101732168 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081821596 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104412659 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084371108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098708528 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073392952 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096500474 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083922367 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107614061 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074266913 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097783863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074592421 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102144357 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073072511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108400166 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075825743 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080183659 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096668152 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107118654 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074554602 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073648703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101275591 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082885484 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09732759 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07370602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097518471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072737399 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097588886 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073918394 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107148287 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074104212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107909678 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076049909 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073894576 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096381357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07271495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106902229 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07275822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105012718 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074531113 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096919527 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074989412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099195676 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074826925 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073291276 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095063714 seconds)
  done (took 7.454262748 seconds)
done (took 28.225352578 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.647839969 seconds)
  done (took 1.627642563 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763231752 seconds)
  done (took 1.744765561 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.491930356 seconds)
  done (took 15.478970972 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610207952 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.755332776 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.809179432 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13629435 seconds)
  done (took 3.293556401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.878780184 seconds)
  done (took 1.886252428 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234613493 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224706498 seconds)
  done (took 1.4462342 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729808423 seconds)
  done (took 1.722441471 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290697412 seconds)
  done (took 2.278449476 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320860529 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182134454 seconds)
  done (took 1.498014672 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523146034 seconds)
  done (took 1.518226962 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.52898675 seconds)
  done (took 7.528542273 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230644083 seconds)
  done (took 1.24066267 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270476012 seconds)
  done (took 1.269259795 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.094336435 seconds)
  done (took 4.092616426 seconds)
done (took 47.613184115 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079322159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083629322 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10592333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079955365 seconds)
  done (took 1.34252176 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079441175 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075648944 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101548806 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075220691 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102546938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075094879 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100267514 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07886255 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074858859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099284621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076277306 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097565057 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077966448 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100142273 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072784475 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07702161 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101188856 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074979892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1012957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075521741 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072945748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100195574 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077969281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09706155 seconds)
  done (took 3.07399676 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07892838 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074827807 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099229891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074072513 seconds)
  done (took 1.332039574 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07990082 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117776298 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091292295 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079089908 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118430233 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112497472 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072753158 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072468039 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097622947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079185345 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093396761 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09982159 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112636291 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079955608 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104772644 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068809424 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070658338 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112531355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080204336 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103157606 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073032948 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081515028 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093328519 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092087626 seconds)
  done (took 3.198534488 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07879165 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105000053 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103579118 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090292689 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117042155 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067095562 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10198582 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09342279 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150234628 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067764452 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096631093 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067764994 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097414494 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066619828 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078236493 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133920565 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113064873 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094177131 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098608288 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091270529 seconds)
  done (took 2.927211371 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076665928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071589587 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090470504 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070419187 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077980441 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097728946 seconds)
  done (took 1.495603261 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07031782 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069294322 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091941983 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068510054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073849949 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092596363 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067821328 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068848574 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092664782 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068731674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069061936 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091184503 seconds)
  done (took 1.936535495 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38351885 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09359796 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07045101 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089630996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073230341 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092074239 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081913831 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070398538 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116682554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068201953 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092521583 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070205044 seconds)
  done (took 2.316153599 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262212998 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079089412 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324101562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17011221 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14155374 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156608567 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105567836 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140341824 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198375237 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139118228 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200514458 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225265792 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135681899 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16888694 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116664433 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107977034 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211521285 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222350875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106388929 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224901554 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205816378 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157831471 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181649493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13004836 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135645394 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152549411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073567445 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107176966 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232936352 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16210378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20225119 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139817114 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09859884 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232172502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226045744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196251634 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162530949 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087481201 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157217243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165862237 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254520565 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114693151 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194608534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134525743 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10735239 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173510816 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146596634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147278085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138248194 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115981089 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173885427 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239645971 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165136688 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114277392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138122262 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142316529 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145195672 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104570794 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240555569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217656831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158920647 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097729518 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099480094 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211469849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160130117 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142691031 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155285373 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120937912 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168391914 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211187712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146082109 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174339809 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180920333 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091003181 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146799989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196423154 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156031058 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202567268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177182587 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075228073 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15237579 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130500939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083409795 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170585742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077311331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232449318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125602093 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139465328 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139701705 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136875863 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112010575 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220405987 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201579358 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106139178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092311667 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131233633 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15066227 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177318214 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115231235 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135423724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147357967 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081534824 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166437045 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101983255 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153595903 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080253801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177986522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162041365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078009954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156820798 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129474582 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129315975 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164629226 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219483885 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09199729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10970435 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201598206 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17867313 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132291786 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17612694 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188960907 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128045911 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130871912 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204102247 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242200447 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092353756 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222316065 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135490451 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08566374 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114873864 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155629466 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140345608 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151151732 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085530847 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180758545 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201352024 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102070355 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098147738 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191311518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084363128 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108058701 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140213819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128589328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097485619 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128555434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136042158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170827057 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154364471 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13493543 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154282413 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126623597 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225604217 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115559291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131344274 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106824402 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097667341 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166236834 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215698331 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082760277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22544869 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156404223 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13186165 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149602323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085379025 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169372966 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10642071 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072757757 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198701285 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140220259 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112922271 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209704638 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131715297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155009213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153470204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163796606 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160563748 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187630627 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108261216 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11439126 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141128993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154538029 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100964191 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097574993 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110306465 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132243202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123762498 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086156396 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172809139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181325817 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101370507 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1405034 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125682568 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179682199 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103782592 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159633634 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148300889 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12227702 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186077761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212475068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165566679 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127906067 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175082459 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098107632 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076599405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118391986 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157555232 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110767642 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086409467 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145804328 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205209259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15880064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168386108 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138974491 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15049585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18845722 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098175497 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12079563 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204044747 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154011078 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156467274 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092496177 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126689043 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175490994 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135901066 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244109572 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143647676 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152455627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208287393 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131175237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08260756 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134352756 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16726525 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133646259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208134047 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128971028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09110966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13799496 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109063896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131411408 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156651597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149228678 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164661416 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145067191 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188029365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080021972 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145978747 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153148687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151439704 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091668541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149380646 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220445685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097813281 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146783419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211381373 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08180558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15265461 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236705987 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20065394 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088034049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142779552 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150609927 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158805757 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147537568 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195062427 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140098648 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165699047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137865122 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087663947 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114988776 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100460692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134248844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123126608 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139440567 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144792846 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121978177 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160985253 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140145177 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138453688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14841872 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099677557 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120177503 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126002576 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208569953 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152447549 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2324725 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129248667 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206588688 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226654725 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078030857 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081171999 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108033579 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169758563 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11301094 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16346103 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124390257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107497907 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156989779 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198754586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123337803 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071040331 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138566026 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165416426 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139917502 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126882932 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107858146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222419331 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132303122 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081940028 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154569062 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132317099 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132039621 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236147366 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063762954 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125899373 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080131198 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108455809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158905218 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215237416 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085483465 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153631748 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148259191 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149823296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160141126 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130881077 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125014663 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116499258 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207591724 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158952401 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119045466 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142192105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160146647 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189542253 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134478286 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123475758 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231744184 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186981509 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223399377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117522805 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144517909 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145049348 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138684372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172792331 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111719908 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200203008 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110345963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16733712 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133404899 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120170752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159271345 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124509513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133770017 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181787211 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150078626 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110337012 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082554294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147375408 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151042598 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135579712 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102969349 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169160159 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10109352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167405616 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229444994 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084261978 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135953218 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123709854 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085104088 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137323236 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131970976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114444029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121127502 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229563483 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118753606 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183188145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197785012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143996469 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168130991 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129277944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665552059 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10568507 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188703936 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150187358 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238999139 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127049607 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148866499 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139554508 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153778814 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175918497 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13281346 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207191275 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162621615 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149498677 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107670037 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131479628 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14020565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094519652 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134885965 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144039135 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145039961 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129524349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15007789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156187067 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11097698 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123055687 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190771305 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147733156 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200422821 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172056959 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087012078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148430246 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197584601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082503554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178106691 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189671166 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137879963 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12816781 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109461164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109388322 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232519313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101246962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195440844 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15427497 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13847872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14300901 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174244728 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164447979 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138523811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155540376 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124052292 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141794519 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146149641 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086640044 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106301293 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135262436 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142559877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101579912 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131211372 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146195693 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185151567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100056689 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09888455 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131035586 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202067963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239226033 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091171553 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111688467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149446129 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1426356 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146680513 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155600181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08400313 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11086231 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110837325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115081491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138472922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143765598 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131598075 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138975111 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200658925 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113538147 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252892541 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0987377 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136001503 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07208238 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108084972 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124724679 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100742269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13688964 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126413468 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234831557 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100156958 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119056841 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121513433 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075549663 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112016529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159431881 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139722921 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151067849 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126318636 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065611856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13831307 seconds)
  done (took 71.725490311 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132916274 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104387638 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118390414 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173703688 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145923635 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238517453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181490568 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223825897 seconds)
  done (took 2.407278089 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071632008 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118035919 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102725802 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116696063 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090320038 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069996508 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294170338 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111157522 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06815816 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114825082 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12157477 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09317865 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470518842 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067218898 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095860117 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086041293 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06865708 seconds)
  done (took 3.240950961 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428590967 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630272231 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450927514 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074777096 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.855016178 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108661442 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.321632508 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162912177 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091885363 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430495088 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.73471816 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149807708 seconds)
  done (took 17.529970497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076890106 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070238383 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110384002 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084771968 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099781924 seconds)
  done (took 1.534238857 seconds)
done (took 115.053865672 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081154017 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341646374 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054387086 seconds)
  done (took 1.521161732 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084761748 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086403687 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111674207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084584416 seconds)
  done (took 1.465568096 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076945569 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077779797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11180878 seconds)
  done (took 1.361494531 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278719637 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165804178 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090149037 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084066201 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079626977 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105868217 seconds)
  done (took 1.368496747 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074407321 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077648202 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100220859 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078714923 seconds)
  done (took 1.423739791 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077779515 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054090048 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05647798 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082551862 seconds)
  done (took 1.370045695 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090702945 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107612561 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082709843 seconds)
  done (took 1.377616422 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108087886 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11300863 seconds)
  done (took 1.320747725 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082341291 seconds)
  done (took 1.177137016 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092289322 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141127351 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157115259 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137836769 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166487677 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137492421 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088338846 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11535462 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104847182 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090077539 seconds)
  done (took 2.331383027 seconds)
done (took 16.423548644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079967772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388791014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361808822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117491763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669263991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357351897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005633534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119400812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121637924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095835317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084609946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675759199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971064983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351304428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95696559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323934031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676004374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069440035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068305898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094798425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966740886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094882407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068938133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070300303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674912383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371765289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095157741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325898778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069086405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097010353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355778121 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095757561 seconds)
  done (took 15.966598944 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071303344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14508515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074634691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084906697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097889206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070563237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098800663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070464763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152445846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069134148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111551048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068688171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098496353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070360521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087983756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095111097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069909858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069951929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095004149 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069691846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113344379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069054401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069312902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095941169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068809551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106695542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069846332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069671437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095149996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071443227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097970808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070066657 seconds)
  done (took 3.870560141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115490701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153101808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075036329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130169705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114037613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097766738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172006632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094179512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156139453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069027704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112380286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069107738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128263864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0699585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114570828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070317631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070216916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095991026 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069961466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09536068 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088538639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069038119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09539641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06982329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095619099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082727729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094976508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069793574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069636329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097029468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07311724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069349511 seconds)
  done (took 4.158073921 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073847733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077180505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109539273 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085177896 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097207639 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073900706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07450527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097663846 seconds)
  done (took 1.800272398 seconds)
done (took 26.896948554 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080253836 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07161093 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101128046 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082752845 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100224882 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080098776 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06909116 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102801977 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078167046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073931816 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103006792 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068815622 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098716937 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069344289 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076521685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09529397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080939256 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099971409 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080936916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080338511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098748323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078561891 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101329227 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080393237 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106319373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081007296 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084198739 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101183263 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071567401 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097938137 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078280518 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112626438 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070468491 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080840825 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095811791 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070097639 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069083253 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09624966 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081028539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10157759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071813961 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101622504 seconds)
  done (took 4.725266318 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089525062 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092467287 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112425449 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06673071 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098497802 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066330603 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115987734 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065068434 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060634128 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116231062 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057230114 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060414302 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090697048 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055592292 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060486782 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058220608 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089871564 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057396005 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060713911 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087738549 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059945844 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055262496 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088853983 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064669247 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058077624 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063675721 seconds)
  done (took 3.063897761 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076493798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084996386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116680467 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130617023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134832694 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078822018 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105838674 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089150192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114405823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069196752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072913424 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124905509 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089356286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102776121 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069310053 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115721425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084142817 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070790516 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102562489 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091766609 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112539364 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079723566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120613993 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082741594 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068828935 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098850221 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073114513 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109694098 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075326187 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07924389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100273763 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072675015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098202368 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080882782 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073416782 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098011831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091417133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10550772 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079496318 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069839808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09968577 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070644821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116552586 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113550464 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095487615 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076446887 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076883478 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105372183 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068964629 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114787621 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078785071 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068622347 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099457056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068674585 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095904816 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082935854 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071960436 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098941806 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077969582 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099231324 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08269348 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07326086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112019241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069290757 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103761751 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068877997 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07017746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095372257 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092611802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070559364 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137202767 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070263457 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097784861 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078864101 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103503248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074601848 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068937876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11108674 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078245762 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100022584 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077762707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07207682 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100039747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089400284 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098957839 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070737803 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070200034 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102733107 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071724557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096641761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082086196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069030182 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098973854 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085943689 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095330285 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070859111 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075142916 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10137436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06906135 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10702696 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074283222 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070857603 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104776629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069077096 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098632083 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079213462 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074012133 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095220644 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07406966 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102392464 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070457323 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070834435 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100282882 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071005439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079655285 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102619601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074188522 seconds)
  done (took 11.474762058 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194123661 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195967191 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072215023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181026578 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077303691 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108890685 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182884752 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096258023 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097988238 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069612255 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070196604 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131608478 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125727193 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106335015 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107577763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069043964 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115896845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105411818 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183920468 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178315935 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117346333 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077805382 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071678505 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098830115 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071296194 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107769916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086916329 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103751583 seconds)
  done (took 4.332426381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083295651 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131087181 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075855775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08986896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120809822 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069779972 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102731127 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071135492 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109621433 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08126509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097693702 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075093112 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075736881 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107010694 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070530855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106849411 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079594509 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070825311 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100918073 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074154718 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106510953 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082789124 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100318888 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069285083 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075587307 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097041372 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066202917 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114685967 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069275871 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11875573 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068060085 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074465097 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111469693 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070011547 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096736946 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07313348 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072268976 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101179346 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071560666 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068190661 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096242142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059604138 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067822631 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109610177 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076049567 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088802428 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075220032 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074341226 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10202697 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067282935 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099452106 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071437413 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071775067 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106336627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074340277 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074367335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102215174 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067706877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104938692 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073363225 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065698492 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095613384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074978486 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068614834 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106250495 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073832521 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095643992 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073375451 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074615459 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103961511 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072563913 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072465298 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09525057 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071218731 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101997832 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074777961 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073041038 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096329883 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06906842 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069600283 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085193449 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069658513 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055616294 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100735378 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067976674 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068124803 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.10023059 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075092943 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11100895 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07110522 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103211063 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070668929 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068314263 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099858365 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065403819 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071760604 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113517835 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112715224 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069288096 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06742806 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111709087 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074913018 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067919071 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086224105 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075950335 seconds)
  done (took 9.986919916 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09682551 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093695932 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099209968 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084399037 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125063313 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094297311 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10552522 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075668777 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07115849 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114856157 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068642814 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105688994 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069685347 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078405501 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126103118 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076681353 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099260895 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078067675 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072953583 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136579363 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083293748 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111606191 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082421834 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09835246 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074314058 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081468413 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125812678 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080758283 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108112706 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085793981 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08097885 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125183738 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086476665 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101768992 seconds)
  done (took 4.341117567 seconds)
done (took 39.029169641 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210064751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.394285542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179858501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.062045963 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21937228 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22044859 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192001978 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187171062 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.325815099 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.181693071 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.449571152 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.826424578 seconds)
done (took 58.578301338 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.283142033 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332365543 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454555522 seconds)
  done (took 3.917266615 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.541892123 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144377579 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.485561242 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184888191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.185225158 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.712765846 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.76330157 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.018464675 seconds)
  done (took 27.624447878 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.184360544 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543707837 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.590737402 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.583656945 seconds)
  done (took 18.033683507 seconds)
done (took 59.52770157 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.172710614 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.215746581 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229514424 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170674511 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307930022 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218494278 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.49663954 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.426950077 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185403719 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177305783 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.210588907 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186255278 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.187971377 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488296391 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188698112 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19431831 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.21906054 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.684540057 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559156457 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192610946 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22063485 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.238004402 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.189378958 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199491502 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.18624465 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.189751416 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185954119 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190447947 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.361972314 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189842739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.274754073 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.681167539 seconds)
  done (took 190.951518308 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.186988931 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.288626974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.355432019 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.241489406 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.735389652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384240343 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.318844798 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.859688791 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201153844 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209669011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.523139936 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187484604 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.579046192 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.150864662 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19669696 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.292657646 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.502864763 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.559754596 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201650043 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.445579965 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206151908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.553237488 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.492845488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.472346375 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.19012979 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.207576917 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215352856 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.190889165 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.379082245 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.450827711 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.208707528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.206630272 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.755350055 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04582775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.189281349 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.211072461 seconds)
  done (took 150.528743423 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448349418 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.187690351 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188280108 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189896316 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.218202243 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187769539 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.7112 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190157871 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188593238 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.689964544 seconds)
    (10/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699206852 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.238051701 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249159847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.383894527 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189149297 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279974079 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201147218 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189206732 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204097284 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215155887 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191147851 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188696531 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69899581 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20225984 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.266944388 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19554915 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.1906541 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218704157 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.58388062 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189688203 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220056927 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.504445792 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233530814 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188893802 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.485366143 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.354341187 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298028178 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192038274 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219848271 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191074128 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.457775409 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191681701 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.191305008 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194252666 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.769959865 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19248223 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.714999159 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192070843 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.088826268 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.192537114 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191520919 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.38371634 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.681241328 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192598446 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.192467982 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190935759 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192684668 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191887448 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190351178 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220633266 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191042338 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.459441152 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288065179 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.192085449 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194255508 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220919054 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191308945 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.225361084 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192600022 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.418505378 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.248927715 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.29498488 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.704011064 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191894831 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283771686 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309615936 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192368046 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191425066 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192068715 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193146789 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297697071 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192565023 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.581816418 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198600179 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.19258417 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250875209 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284747161 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192208286 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487499923 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193959702 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192401773 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874033 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284319879 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192475016 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193324394 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192577915 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.582526191 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705712635 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.36998494 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194690348 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.443299084 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194267186 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.593716514 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692769568 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.777192814 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193663757 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298890616 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194001632 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.191896688 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190267672 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218544933 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.190747034 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249737246 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191047337 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585413156 seconds)
  done (took 342.605683014 seconds)
done (took 686.666238136 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855943544 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.840384272 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.952508165 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.841173277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.817594033 seconds)
  done (took 10.443099265 seconds)
done (took 11.579358242 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.366626295 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365454639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246643356 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.367210325 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218454545 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381753937 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345445572 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21086402 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286581875 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26324759 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287979449 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237289645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218404515 seconds)
  done (took 17.93140433 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478331554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475405914 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255268911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479722561 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230929528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.477020813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374476577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383619757 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371470582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205567262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203604772 seconds)
  done (took 16.072458196 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483592448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475906589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258129669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482013139 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230965827 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481955621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375191011 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385528135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.375918402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205132361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203458089 seconds)
  done (took 16.093681772 seconds)
done (took 51.233565833 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.19913912 seconds)
  done (took 2.335501836 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231976393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394324176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214302866 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203679914 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.200728006 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.202299292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204696587 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201613988 seconds)
  done (took 10.990939377 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199203991 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197389878 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.198557147 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.1975754 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199701923 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.19842813 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200030043 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197614596 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198184421 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200476191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197118673 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.201530945 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201133001 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197602445 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200423158 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198431304 seconds)
  done (took 20.320403681 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.198960728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197505246 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198180644 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198275775 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.197718772 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.198670499 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.198949491 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.197814119 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.196760398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199317368 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.198896609 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198440781 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199401276 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19795052 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.197658846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.198864832 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197920246 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198709514 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203385403 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199596627 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199714396 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199175246 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.1990515 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.19987412 seconds)
  done (took 29.911083253 seconds)
done (took 64.693885867 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.10588647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.724197445 seconds)
  done (took 8.969143991 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.202278722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.202179544 seconds)
  done (took 3.543882859 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.201079307 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.200592565 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202305484 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.201990367 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201404366 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.201063037 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202479085 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.200486431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202538576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.20174278 seconds)
  done (took 13.153376671 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201862974 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.201673994 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.199284473 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.204266031 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202294984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.199947462 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.202525133 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.200494265 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201513171 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.199183701 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202123845 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.200460175 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203104934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201621863 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.201736874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.19918033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.199506054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.200460068 seconds)
  done (took 22.759576653 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.201818025 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202392767 seconds)
  done (took 3.542684741 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.20094535 seconds)
    (2/7) benchmarking "second"...
    done (took 1.199770805 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200089198 seconds)
    (4/7) benchmarking "year"...
    done (took 1.200255542 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.199749645 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.200707285 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201149953 seconds)
  done (took 9.542622195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.203516907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384041784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.461970262 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823297328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204222729 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205595774 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.043171581 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.206174755 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2079556 seconds)
  done (took 13.879361263 seconds)
done (took 76.528839112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.168688257 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.196264986 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.0096454 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207016318 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.208769535 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.53751597 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.246227027 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.316227063 seconds)
done (took 37.030692947 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.211270546 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.904080347 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.909263922 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.196497699 seconds)
  done (took 11.14918949 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.192753592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.055267436 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200630565 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.165371678 seconds)
  done (took 17.755696324 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.776083958 seconds)
    (2/2) benchmarking "read"...
    done (took 1.527309651 seconds)
  done (took 4.443031795 seconds)
done (took 40.698424509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200588081 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203569993 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.200247968 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.203202997 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.201560085 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.203141489 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.201513559 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.201615296 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.204272896 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.20474655 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.203655241 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.203949905 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.202787366 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203309753 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201003612 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200401857 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203998136 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200826841 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201138177 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200703745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203980908 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20079652 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.201305042 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.203844232 seconds)
  done (took 29.997043391 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203429154 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2017754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.203166881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.203879349 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201626733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204868043 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.204733179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.201751581 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.204720478 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.204595935 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201934914 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202047259 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.204558467 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203017535 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204436448 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20224903 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.204726806 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201964372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204719139 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202511038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20470438 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20287912 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.202921721 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205653582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.202473539 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202886571 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205597288 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203227386 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205468574 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.202625185 seconds)
  done (took 37.246723093 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.20935843 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212103344 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.2057376 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.205692427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205191625 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206303052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.205626398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205522718 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205396038 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.205623414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.206012709 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.205489591 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206100251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205776593 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206166593 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206286947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.205578168 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.206680404 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206966428 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206409991 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206705485 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206586235 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.206358761 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.206788637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205568697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206087791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.206899177 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.207276904 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207946302 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207275836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.206866496 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206786577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206485325 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207733439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207023417 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.207581528 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21117907 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214515349 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207367646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207018417 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205973947 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.207773401 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.207441608 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.207609898 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.20638977 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.207020508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206338467 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.206958667 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.206580289 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206805901 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207957309 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207433051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.207204082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2077741 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208011529 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.208163974 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.206924959 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.208046987 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207792608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.208110561 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208003404 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207969178 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.208383996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207140099 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.207809306 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.207953501 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.207812746 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.207886115 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208050728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.208080902 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.207924564 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209953486 seconds)
  done (took 88.066019342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.207973467 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206555492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205948151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20582204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206148419 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207824747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205675283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20849479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206649628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208549477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208230352 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207581584 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207140462 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208815646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209187177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207287419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208580457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207318185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208461496 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.210261264 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211686436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208369348 seconds)
  done (took 27.718172164 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20906162 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209414005 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206502366 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209825505 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208633994 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210055376 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208935374 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209292537 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210364765 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209458972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207025163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210930902 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20865235 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208125255 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208802834 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207991497 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209962247 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207753961 seconds)
  done (took 22.909628333 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.208279103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.207713498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.210380385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207014603 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208052139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209812177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208165839 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209223754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.209806754 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209181998 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21084439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210635799 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209527062 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208158528 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211170399 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208342125 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.210583936 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209179495 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210314914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208013802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208382789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211660161 seconds)
  done (took 27.751818521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210425223 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208687649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208333904 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.208252442 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210759688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.211784502 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208720368 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.211595354 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.212230257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208622899 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.210838369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208423732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210258303 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20921971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208920735 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.212195817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209836993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211272179 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208705721 seconds)
  done (took 25.349118147 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212358278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212684087 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212997551 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212894567 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213338137 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213697143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213103783 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213356648 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212715927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214121566 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212895611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213592498 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213923045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212767856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213291105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214913725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212522433 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213991731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21478126 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214111854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214958326 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214750813 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214295571 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214757581 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214286267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214482743 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213806667 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214029978 seconds)
  done (took 35.133335247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213611728 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214108484 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.211028969 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.213367628 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211796566 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211646062 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.212349528 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.21122786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214801288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.212037739 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.214212253 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.214488625 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214322664 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.214882115 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214709075 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.214050236 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214884212 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212332447 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212637955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211817128 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.21434625 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214996188 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.215032344 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212497316 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211764434 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.214596464 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212655567 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212492996 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215395437 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21260781 seconds)
  done (took 37.553095743 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233877652 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233461468 seconds)
  done (took 3.619351195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.213020009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215049003 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214424849 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213375104 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213906786 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216343879 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214762303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213090328 seconds)
  done (took 10.866575483 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215473243 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.215713406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215695666 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.21552493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.216897957 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215909942 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225175685 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.231824806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.217412993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217380268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.222301846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223241064 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220174664 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216714454 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215735203 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21980803 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216588789 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216741993 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218390045 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.216197911 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217089307 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219788767 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22042421 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213726308 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.218631793 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230443607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224900645 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21754294 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218107885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224346403 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217962054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.214779762 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.2182569 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218497137 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218797613 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.218866046 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230238851 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234336157 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227130382 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219867383 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218676575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.216492129 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219566219 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220772983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221103881 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.219743327 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.218410393 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.216707036 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.217698061 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.220734471 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.223157728 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217401452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216396915 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225399227 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221551735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227559433 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235619441 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.221779766 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.226655762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23193943 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.234396442 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226533414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221535905 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220152258 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228018119 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242996278 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228084378 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233109859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.217605349 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219023942 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.228252414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233531987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.229699057 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220241591 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22038041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220811086 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220592448 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219847449 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22990457 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238839492 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220108687 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220146477 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.229373655 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241835652 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.219280508 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.220980042 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221146454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.219738316 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.222042699 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232352561 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.236656189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.220229481 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219671105 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.219964769 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.223805226 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221048053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219130839 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221809036 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218780306 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221700802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221408985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224216879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.230449705 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222125127 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221699792 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231406557 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222629629 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221236914 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.233332113 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.223172484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222066398 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221366351 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229586562 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.219321093 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224955245 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230881597 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222674321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225196097 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222428764 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.222972843 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23192139 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.247908575 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222289281 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.222411749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.226697018 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233865093 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223114591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.226415686 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.223353907 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.220330126 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220813606 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224700143 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224048716 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223436607 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223526432 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225847858 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221314934 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.223526055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.224141126 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.2250665 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.225903882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.223829222 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226110981 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.22729119 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224669213 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.225957894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.232641092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.22380146 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225437826 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.22582263 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.222022728 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224565045 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225426102 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224813146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.224418936 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224300152 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222577413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224816067 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225208287 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.224044051 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224631509 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225133064 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227722449 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.224995786 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230341344 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.223321496 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.222044311 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224404098 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225748498 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224502453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225074882 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223875008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.227510533 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23287906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.225171476 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22534445 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.23037677 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225099358 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225811637 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225224751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229126016 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.233550131 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225986781 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236235041 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227050761 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226679421 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.22661163 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.226395918 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226166797 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226184782 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.227593315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232741225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24090141 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234682472 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227788747 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229156086 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.227649504 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2306149 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233723361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227465274 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.227020749 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226748772 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225992584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226999474 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229011905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227965885 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.225755204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.227337944 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227643833 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227663838 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227859272 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228991505 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22956717 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224231166 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227991798 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227225226 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227128923 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.225680424 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.225357831 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.226175251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227681665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.227981834 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238794603 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.225607203 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229445173 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22832674 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227422191 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226575466 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227881656 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231547521 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.228740782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23765211 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245538155 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.229611414 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237749754 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.24461946 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.228452037 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231442935 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228506299 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226523231 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230807014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.236961149 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227468107 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229010062 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.229052493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229025104 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230055468 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23799395 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226522616 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227659982 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229533139 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232118383 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.226280167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230740453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.231153186 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.229586859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231713173 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229496546 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229783479 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232477449 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.22965273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230555344 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229751244 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232542578 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.236969505 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.236752179 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.231023038 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233545179 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229955655 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232821656 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.231684914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231074044 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.230584002 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245016873 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.238969053 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239686062 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.233310925 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23134523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239129994 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.233043453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.235340621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231673454 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232386276 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231781917 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.230490537 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229243132 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233450175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231572195 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23254439 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.233035305 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235801052 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232579504 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.230999707 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231725417 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.23203259 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231625855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.231972107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231746321 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236287518 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234291686 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231505806 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.232123773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241540033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249232762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233995286 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.231399967 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232631235 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.232372234 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233985024 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232800015 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235195972 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240825315 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.235435398 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242844107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233872249 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244498716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233595768 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.235630113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.23981947 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230619664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232124492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233793995 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234191932 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243331932 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.2495487 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233800669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.237968398 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23384394 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234708346 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232976864 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234178921 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233385921 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234255955 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244313365 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250137746 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236550687 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235497394 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231208074 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235303408 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.234660685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.233428593 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240015966 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233887804 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235055243 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233881513 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234908631 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234429283 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233678953 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234186662 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.232191934 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.235223692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244762892 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.251182606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238176953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.23505441 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246357899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23531581 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243466897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.25124799 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235405887 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234523648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235271128 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.238063825 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.237509376 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237951803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236359621 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236893383 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.239120808 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.235075661 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239652229 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236251262 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.235437529 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.236394217 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245333936 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258134087 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.237731654 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239409333 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234029952 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236553374 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.240724374 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.235668599 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234525499 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238018476 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245136548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24306283 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236382889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.236495255 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236445935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237443268 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235226408 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236443399 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236579864 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236433173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239319987 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237239531 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24351327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.237323158 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237865206 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239169847 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237992563 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249545283 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.237431563 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23736862 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237070909 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237381543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238008843 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239282616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237871021 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238069238 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237698234 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238327892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243665395 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243099069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240842938 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236902858 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.237563273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238352454 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238632509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237479597 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238746616 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238091101 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238160918 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238996661 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.240247362 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.23668171 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239266971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238871798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239244006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240728271 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244591189 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23928512 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235991142 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238746946 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23895139 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.238414027 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.239280966 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.251503276 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242525803 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.249307231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.246993297 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242521629 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239126988 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242877692 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247429277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238548681 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239810223 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239724593 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.242001965 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240771742 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24276766 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240370545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249376993 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239780647 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239858783 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251348629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257112274 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239792937 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241563103 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243665886 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23967445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237330759 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240177708 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239615577 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250117773 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.258395053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241735952 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241826211 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.238345708 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241366374 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244239935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241239884 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242714482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238114204 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241731219 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241172131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240545229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237981174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.24045253 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240136724 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243751273 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246415735 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238698346 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244943395 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242638792 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242100752 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241987113 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240638749 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239153345 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239340969 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241842955 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240929333 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243365825 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244141469 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.24175365 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24239008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243135295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24188342 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244233775 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251699568 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249603561 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.239392885 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241288982 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.242907136 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245857616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242294887 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242237463 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242852771 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244848858 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241786597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242868308 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241684487 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245021978 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260337026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259162258 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243716693 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244375569 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248424625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.242582843 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.24105945 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243900173 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246746158 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246373017 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250813844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.245009348 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251754315 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259515829 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.244035761 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247120533 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246293492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250664229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247183521 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244020155 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.24348836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248431608 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.261816935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244368372 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253356669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275269584 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.261318911 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245389048 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.244616432 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243316418 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244437328 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246501042 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245053312 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244853324 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244172849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.24529314 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246478541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250652094 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.245484292 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.244727481 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.244787181 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244363432 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248492132 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.242945613 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245513318 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246810761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244323584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245753226 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.245994186 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245391004 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259699598 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.256298787 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246805784 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.246203049 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.242934759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.251165315 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248087333 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255920585 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25259342 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246139213 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245946496 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24806431 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246237931 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244581285 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246862385 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245858989 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245029863 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.243447958 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261129924 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254791612 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252345446 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.248568331 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246863246 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.247046327 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248562021 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247024439 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246858691 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249507232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.246606225 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251199684 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.24684754 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.246991657 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.250354826 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254756208 seconds)
  done (took 736.841700028 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245588444 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244766746 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245841965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245077967 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244840949 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245412553 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244942441 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24556343 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245493931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244971141 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245005108 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246591715 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245597321 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246633271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246121764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24663664 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245992418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245356044 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245456364 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246650594 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246084559 seconds)
  done (took 27.342904067 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249122551 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.245813552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246043057 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247747796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246042239 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248782628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246293432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247743231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249007877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245986671 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248661791 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248577521 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.249652055 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.246187995 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246940339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248601052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248800247 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246751044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249634135 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246524987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249823577 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246198992 seconds)
  done (took 28.633926791 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.25001554 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248859418 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.248542486 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.246605369 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.249917477 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.247999883 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.249086294 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.249229138 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.249903899 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.25040865 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.248493791 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.250052975 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.255602265 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.2547884 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252308774 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.249761707 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.394583693 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.249574568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.249230615 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25005005 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.247380193 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.257076475 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.248507537 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.24751606 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.249861754 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.250558355 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250390272 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.250274106 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.250750391 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.251421439 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253642614 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.250028703 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250181928 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252384849 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.251075453 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.250896906 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255606606 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.252869355 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.248936022 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.251571045 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262299429 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271300583 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.251974837 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260989372 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.251642605 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.251135871 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.255304452 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259107744 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.249926386 seconds)
  done (took 62.666835971 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.251566561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.251777312 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.249276575 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.252187694 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.251999636 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.252411406 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.251870925 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.252139451 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.249401676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.249326011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.251987703 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.248431381 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249939731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.251984959 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.252800046 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250430405 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249750297 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249564003 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.249817764 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249920074 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.249624016 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.252602822 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.252750988 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.249833666 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252862082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250722939 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250043525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.253535555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.250747653 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.250822705 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253463872 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252866018 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.253671399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.251393647 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25083628 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.253532734 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.254771333 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.251263965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25357096 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.251077794 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25345355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254137903 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.253802952 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.256302061 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25153862 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.25112398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.251228287 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.251999665 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.251240549 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.254151504 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.253612571 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.253683808 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.253963697 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250571009 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254447715 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.254181691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.252076993 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.250869923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.253855529 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25480603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.251426671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.253305089 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251193804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.253854724 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.253878738 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251606346 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.251059636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255773549 seconds)
  done (took 86.330453034 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253110601 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.254346902 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253861274 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253528028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25316971 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.252926244 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254013042 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254214947 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.254262523 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254253583 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254413807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255647704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.254270112 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254494142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255794004 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25410775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254342382 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254716013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255557481 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255453582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255035361 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254502886 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25512253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255074967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255818517 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254942713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255102776 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255123552 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2549654 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255136414 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256313787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255896846 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255308952 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255369039 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256075897 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.255572629 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255384216 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255986481 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.255996137 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255518167 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.255209832 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256939319 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256447381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.256549943 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257142918 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255625244 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255615838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256732795 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256146656 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256580614 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257367973 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256347139 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255685825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259955149 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256187316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.255956969 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25647068 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256125891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255533032 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255631869 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256056191 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260075178 seconds)
  done (took 79.030501738 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257578898 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256569778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254514745 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.254105212 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255437092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254794842 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259625145 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.255984172 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256170881 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.255648247 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255772569 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253416423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253806122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255527428 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254883854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25319451 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252444828 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252323345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255675159 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25327416 seconds)
  done (took 26.292992202 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.253661032 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256747201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.253454505 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.25412991 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.256134086 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254632992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.256419552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256780661 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253705939 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257786616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255812154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256956164 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252977529 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254127878 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.256369513 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.254153128 seconds)
  done (took 21.275707807 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.253485194 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.257705017 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.257420972 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.256979693 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.255086788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.253714705 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.256309657 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.254247126 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.255493202 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.257554154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.256703096 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.256168482 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.256950057 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.257047874 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.254675892 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.256532648 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.25535851 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.253464665 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.257020311 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.256330847 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.255328592 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.254635036 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.257997938 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.257302438 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.254655307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.255207635 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.255239131 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.255163914 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.256085116 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.257785497 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.254969674 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.255850822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.255132641 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.255029505 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.257636544 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.254866402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.257477822 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258431016 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.257078219 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.258370403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.258315396 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.255777063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.257497453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.25758721 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.255987298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.258670017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.255720124 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.255668319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.255818714 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.25584716 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.258370726 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.258780007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.257767221 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259152246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.259250223 seconds)
  done (took 70.296778892 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259021126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.258644335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257315589 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259589982 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258932037 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.256155895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259014222 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256472015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256668508 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.258450449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257848029 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.259998571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256082975 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259255418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257404527 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259107274 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257535122 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257391589 seconds)
  done (took 23.838900807 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.257768947 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257936733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.259775134 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256632984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.257176796 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259956246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257185082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.259533647 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258720484 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257504899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258155494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.259918028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26049455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.261121089 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257776129 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256446874 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.259759158 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259210978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257570703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256313229 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259656167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260706087 seconds)
  done (took 28.88411398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.260151185 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.258606566 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.276353743 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.302221566 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.288729981 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.258044177 seconds)
  done (took 8.837776443 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257313841 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260105139 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25739668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260322081 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2598079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256859372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25788808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258878197 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259945795 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257964029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257742534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259496262 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260943712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257677277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260388472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261928438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258140828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257978302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259110098 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260569867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257814969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260559532 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257115051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259059914 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257845019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258458322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260743158 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258417229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257494925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26026475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259359073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260175298 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259621231 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257945564 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260485963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260007052 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258095661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261035397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26000565 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259933949 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261123011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25981665 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259718779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25798269 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260168273 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258685839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257555786 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259974157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258420373 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260605479 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260972944 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258421472 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260168065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26081131 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262230915 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260362675 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25802017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257673811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260222219 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258469848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257547354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260771412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257960907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25808797 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259909979 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257811277 seconds)
  done (took 84.307587888 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258138211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258302799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258035381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260505463 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258060593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256968477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257228464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257567279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257411912 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25815236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260498678 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260976354 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257669116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258272745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257116297 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257495178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258054447 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25850596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257723944 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263455495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257497158 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258115023 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257406431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258424589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2583602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261172383 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258240067 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259451434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258362992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258630231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257691392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258747115 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257871584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258425151 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258717354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257991993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257859659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258707625 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259065783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260923431 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258865119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260761866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259449775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258749634 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25963121 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259366605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258946591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25951961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259571955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259398262 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259875036 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259823028 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260704869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259478534 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259043043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260354737 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259218947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25981905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259854962 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261963407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260480655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259519799 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262417444 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259807935 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260480341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260523025 seconds)
  done (took 84.297612086 seconds)
done (took 1716.228952827 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.335522899 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.304603129 seconds)
  done (took 13.83706891 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.421357736 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.37487083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.260318369 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287094989 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260798303 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283063027 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.263107679 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.260460734 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.260851534 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261139631 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261113301 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.449063066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.316045339 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.261402473 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260925204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354012773 seconds)
  done (took 42.044687268 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.288186982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.268637249 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.366409753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.282958048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.286817998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.429241473 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.314755673 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.267984086 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.414129944 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.304046186 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.644490366 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.28905692 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266128061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.259289429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283153567 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.428804128 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.483728713 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.641180873 seconds)
  done (took 28.717297229 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.651577275 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.267688323 seconds)
  done (took 9.119468765 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.259588106 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.284480758 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.299637557 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.2739928 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.264375447 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.263469798 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.273101251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.285723702 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.299767851 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.316288993 seconds)
  done (took 64.028724945 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281970726 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.267600409 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.26634698 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.264775248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.258260691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.258448481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.264445432 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.261241647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.39570078 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.378349299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.280136171 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.272458024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.266993385 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.268003751 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264209848 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.299947076 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.391913908 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.264712126 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263568511 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.271936321 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267297038 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.390270853 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.302874174 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.26762216 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.376136078 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.407221957 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.271209864 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273529142 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.385321013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.264936182 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.264730215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267508302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268609237 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.818530536 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.783089718 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.274379561 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.289686948 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.27638647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.265067725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.440208175 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.268004485 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.275017737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.270587674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756958727 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.419407118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.36852739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.402253358 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.269953421 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269146323 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.325558988 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.269809281 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269474021 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.293261153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.991023478 seconds)
  done (took 106.548154547 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.296144803 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.747946618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427878635 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.277145479 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.019402009 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902200447 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.262693066 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.512049871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.28480152 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.260181948 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.575666422 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724445497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.263369308 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.277463238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.301610014 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.35278655 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.261657545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.995412649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263283223 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.264935627 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.662818331 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278753532 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.262612511 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.333782984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.299178405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687403837 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.588664167 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.668773351 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.264803742 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.262529637 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.689119413 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.261842155 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337852186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265204573 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.519321697 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.57959548 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.561112129 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.267453747 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.303169504 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.263714423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.294409033 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685953419 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569570415 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.264041031 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.263029434 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69055026 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.263151307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.270188884 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.266536269 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459030645 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.250258172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.265291651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.595786053 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262933945 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.609903773 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.360760665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343997123 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717458767 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264135246 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.302077768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27187382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.265053482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.265105674 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266091609 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.266513222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576060768 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.668746955 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.263479736 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.575099655 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.68556541 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.264359216 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.749506994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.118965192 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279115316 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.339508615 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276369784 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.805200393 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71622263 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.311838837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264452211 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.561574584 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.26405762 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.567604207 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277725424 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265413251 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674581879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.281514366 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.293889224 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.265166681 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.277681687 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.901712987 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266073687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.516041658 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293987376 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.265519651 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.265474648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.270521198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264794961 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.279858182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.26568778 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.753910151 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.267852586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.549572433 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282249816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264859689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.267324089 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.267122294 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.26727971 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478374418 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.698738083 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.266784833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266399542 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.265622267 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.280924234 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.568645697 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.270066964 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.537200835 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.267887427 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266476364 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.268788421 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.928105546 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.290885446 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273626404 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.267605342 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.107965068 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.47532384 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.282077075 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.267628184 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268970584 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280774234 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.514145197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267528486 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.314150697 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.267896029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935502195 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275739302 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.285334946 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.912723587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.272838729 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.104066257 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288026678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.26881985 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562624785 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.528170399 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579256478 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270657276 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.268628071 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903299998 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.273728179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401842553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286230767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.26392404 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464756079 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.493535288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.270384147 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.849267069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.268676913 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476552853 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268563812 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588893107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.721990218 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.269179251 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.27663264 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931428094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932011901 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.896892924 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.272660464 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584630543 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.237759168 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.709994325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.268695924 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.268993662 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.699747112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.270978642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276006683 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.270016136 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.27032003 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340030473 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44294682 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.865242515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.271393949 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693630653 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277580762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269596664 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270557473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271049669 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.621727636 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346598926 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.273717669 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.271584419 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.270967776 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.27998478 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70778857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.170344154 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.272279756 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421530279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860278411 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.271852532 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.272622154 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.934456407 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.53809159 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.744699316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.308133756 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.544563225 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.274310383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308940384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960593332 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277206081 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706416877 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273564552 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271144964 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82360633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.271091547 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.327713221 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.271005329 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.274092244 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.762915502 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.272182271 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.27181584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.50685935 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27159507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514538245 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.273077723 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.30524351 seconds)
  done (took 1094.102010763 seconds)
done (took 1359.595333776 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.272981344 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.27064684 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.259615652 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.273589429 seconds)
  done (took 26.291006571 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.28283232 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.27989565 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.281312523 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.280087324 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.283896388 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.279750024 seconds)
  done (took 8.901563269 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.325607018 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.273809416 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.273839504 seconds)
  done (took 19.088458294 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.476250672 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433523101 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.612117377 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.229117325 seconds)
  done (took 9.967839129 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.280951268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.282380731 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.280672948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.283553565 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.284105019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.285291573 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.283341436 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.2843794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.28382622 seconds)
  done (took 12.763319361 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.86134354 seconds)
done (took 83.087977965 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.274746913 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.274864265 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.544143809 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.798945831 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.838554837 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.516338043 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.328501077 seconds)
    (8/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.301311046 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.301334383 seconds)
    (10/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.963760737 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.685563732 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.616996122 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.511290158 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.68395904 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.569296271 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.539891601 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.387663409 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.237578591 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.465071572 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.627827466 seconds)
    (21/309) benchmarking ("sort", Float32, false)...
    done (took 5.249784085 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.960396361 seconds)
    (23/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.408890879 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06444267 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.424170268 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.620066519 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.275320203 seconds)
    (28/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.305615808 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.302784973 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.854756354 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.34108288 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.792495697 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.128020746 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.745474845 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.85128149 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.380406737 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.480459672 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.275643787 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.712104277 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.278878502 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.288151749 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.303113867 seconds)
    (43/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.303855469 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.372419654 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.105112634 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.415675216 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.34090633 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.375619224 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.361831335 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.79210512 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.551144446 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.295180057 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.385481578 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.542903524 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.388632223 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.341344753 seconds)
    (57/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.031630172 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.262475694 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.535983266 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.385480186 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.873300817 seconds)
    (62/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.830950732 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.624540309 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.652313341 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.334932456 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356995594 seconds)
    (67/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.305941421 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.30420862 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.606544788 seconds)
    (70/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.460894147 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.823058255 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.277366767 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.278750414 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.416816068 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.68478503 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.28528041 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.433590012 seconds)
    (78/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.260823262 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.301164713 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.069505903 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.277336086 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.27961542 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.386703479 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.036005411 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.710252246 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.291374688 seconds)
    (87/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.72146261 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.564471387 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.795638491 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.437305565 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.377076325 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.30495254 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.948364452 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.275254845 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.381149224 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.689378514 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.458698387 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.683751711 seconds)
    (99/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.306152091 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.422803868 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.273524827 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.287321083 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.316048386 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.82035492 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.417336111 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.049628917 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.514981351 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.012142545 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.505984912 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.810748371 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.285938307 seconds)
    (112/309) benchmarking ("sort", Float64, false)...
    done (took 5.541523312 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.617869615 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563241648 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.283560047 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.527833276 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.263296846 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.381793023 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.46429361 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.968560488 seconds)
    (121/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.573516816 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.054062485 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.354213906 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.273131477 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.28044185 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.302823501 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.493612254 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.136270698 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.274764796 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.281653304 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.00048203 seconds)
    (132/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.275015282 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.377962221 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.303348575 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.296200504 seconds)
    (136/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.626955295 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.600348832 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.281732624 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.005125035 seconds)
    (140/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.282249425 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.305953315 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.294872291 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 1.785617648 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304835287 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.400346839 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.559304963 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.27084844 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.330301065 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.436231725 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.321379986 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.638140351 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966538808 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.562054802 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.826369614 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367630461 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342587396 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.299032872 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.368234825 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.385644485 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.269408363 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.884268343 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.334107756 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.835332943 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.283710352 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.412462359 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.462857571 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.988789759 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.30872935 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.446752668 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.971325273 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.306658897 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.742446996 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.269941041 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.003355803 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.330833061 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.309723107 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.403050863 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.309889894 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.621235028 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.61091198 seconds)
    (181/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.464933637 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.968918847 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.34752783 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.284107655 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.483258421 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.089883905 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.282537928 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.360643412 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.735714383 seconds)
    (190/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.569436894 seconds)
    (191/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.28448253 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.310811275 seconds)
    (193/309) benchmarking ("sort", BigInt, false)...
    done (took 6.296609863 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.343340036 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.367255521 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.358307316 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.326141027 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.284292472 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.284616008 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.287041809 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.320602773 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.34204077 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.586962389 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.371210064 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.517412696 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.741847899 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.284778012 seconds)
    (208/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.094793562 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.558675786 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.298735392 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.810997491 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.372604107 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.129473218 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.833970239 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.495114332 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.271576908 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.891540956 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.973285412 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.683174275 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.425906735 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.519915615 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.324659743 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313321299 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.016169925 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.5785215 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.309621493 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.882228784 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.283569911 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.296724841 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.326783321 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.594635601 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.802899626 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.304198258 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.804172543 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.287181574 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.494151862 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.287179069 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.299909769 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.484190167 seconds)
    (240/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.384461011 seconds)
    (241/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.785751196 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.287013488 seconds)
    (243/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.469367597 seconds)
    (244/309) benchmarking ("sort", Int8, false)...
    done (took 4.366998297 seconds)
    (245/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.882011987 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.288412396 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.422535565 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.487751839 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.620050185 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.475305077 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.298170737 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.563580399 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.405990598 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.800189451 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.483495418 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.129982626 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33028914 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.314876718 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.304669013 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.373706497 seconds)
    (261/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.277984034 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.338946163 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.95730143 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.752165572 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.667545839 seconds)
    (266/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.752144536 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.68541628 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.301822436 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.297715438 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.444118469 seconds)
    (271/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.371365842 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.443396749 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.370551986 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.275584464 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.329934772 seconds)
    (276/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.845566881 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.557115719 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.288010922 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381117535 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.371112471 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.120095447 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.405522117 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.572175557 seconds)
    (284/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.630363379 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.117376196 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.44261834 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.338874505 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.70262438 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.025756127 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.04660772 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.331895465 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.344184709 seconds)
    (293/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.290624271 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.451852488 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.996358393 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.520630188 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057127611 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144890777 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.329868078 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.817888552 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.312920371 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.311060621 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.278821443 seconds)
    (304/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.650320191 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.398724219 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.677509463 seconds)
    (307/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.341155858 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.512896259 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.338496891 seconds)
  done (took 895.55974873 seconds)
done (took 896.777456646 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.321854004 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315074186 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.299481654 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.319914952 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.410166995 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.330124947 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.310037825 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.301575418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.348313404 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.3503365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.297844304 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.328587414 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301257813 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299004224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.299502102 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313062628 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.213692462 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.30099744 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.317457718 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.309618088 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.316237235 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.298381405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350809109 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.329269957 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.305100462 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.304234875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.303760229 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319739272 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.41178941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.303833369 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304074413 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.311312038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.214199174 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299128777 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.296939001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.320441404 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.311872421 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.310752412 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304485176 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.332803592 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.580987557 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.300112093 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.302729777 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.302273425 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.302357865 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.307034743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.303448584 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308965513 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314757315 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3153691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.573148221 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.317024293 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.30487692 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303069749 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314573402 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.30218506 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.306386488 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318287302 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.321121434 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319001907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.210385134 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.309111089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.305248128 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.319067844 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.309832988 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.611277128 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.298458258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.30852752 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.584713327 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.309644921 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.612621609 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.310853224 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.305061607 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.31784051 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.335121419 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.218718448 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.299131974 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.302766951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.311073603 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.301574994 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.31436839 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315974561 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.308255523 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.305450512 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317071115 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.33331996 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.315537184 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.305283735 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.314774338 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.324404363 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.311538979 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.313945109 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.30784201 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300266871 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.315420026 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.308289116 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.307048245 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306583501 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309441 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.316078863 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.585991977 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321448289 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.304506062 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.30211829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304911232 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.319183225 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.588684494 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306765542 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327966511 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.353667645 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307354547 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.21538585 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.308901298 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321706925 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.315342532 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309711784 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.302076382 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.216937134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.580743526 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.319761494 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.308231184 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.304572434 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322182872 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.308029827 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.303790449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225669355 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.307693638 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320874383 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.427044865 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317265039 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337299652 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.304827913 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.309953979 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.336010347 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322639418 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.338800163 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.310283226 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323121412 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.322239618 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.303907543 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318061132 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.318793024 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309494448 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.314119944 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.301863505 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.341680406 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319376695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31911229 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.328677818 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.427850146 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.304950414 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.216678363 seconds)
done (took 218.713652692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.366811417 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.296882906 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.408875848 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304509142 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.402102063 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40187083 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303182917 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.302225542 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.30328102 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.772324679 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.303433618 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312268627 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.30269367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.303686213 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387581513 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.30631345 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.302842458 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.648143027 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.307055969 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.379345178 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.305426703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.303668642 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.305795227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.691372826 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.304094078 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.303149765 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.378901306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.307137797 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.728191292 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.300061392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.301971538 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.652924978 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.395058853 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.323521045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.316361291 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.313164027 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.403696725 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.321978477 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.387357449 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387510431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.411372528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345127447 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.301327633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.30334258 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.308475408 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.308435275 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.305080634 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.333826044 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.304540699 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.305838568 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.729764265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.317248688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.305602845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.305260188 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.305116349 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.336541291 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.306372595 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.308601917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.397266972 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.308753307 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.369205371 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.776648092 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.685916519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.308535273 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.304074388 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.307007897 seconds)
  done (took 146.986779231 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.376904313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38215226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.414447807 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309348188 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.357543618 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418381619 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.309642392 seconds)
  done (took 10.811369656 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.313999982 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.309470317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357893485 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357964463 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.308806652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.457300095 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312303276 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.322281128 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.307306185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.360922127 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.311861044 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309346613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.316690089 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.310542493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355959844 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.321028281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423406949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.310699807 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.309914428 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.462797868 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30604922 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.316240502 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.360957942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.320667979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.311880337 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315205441 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874967724 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310393889 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307560576 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.310543553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307920178 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.346915721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310739646 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.310978046 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308421619 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426261318 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.310221146 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307884705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.311500024 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.304500949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.310911366 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.311907499 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311835842 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.309355383 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.311698726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334985305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.311291024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.310802836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.311889803 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312281953 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361226296 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312336596 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.309458892 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.308872124 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366732494 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319359005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.311244953 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.309261836 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312208979 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309432429 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.465600593 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359907552 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.311424954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359602437 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312171022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312912565 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.311731889 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.312475618 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366362299 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312012443 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360085837 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.3097549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.466651714 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336233044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313252235 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.314665606 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.314098632 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.312121591 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.304734681 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317466663 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.310627121 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.31368984 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.317621449 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310647227 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310740863 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415090236 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421083299 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.31126045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.324536776 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320476499 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.310778051 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.366619317 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.313695697 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.311286044 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365889656 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.428068843 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.366867022 seconds)
  done (took 151.01614981 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.318648336 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320585501 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.315448879 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329040627 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314336946 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.312929497 seconds)
  done (took 9.157635313 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315782978 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.314363634 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.314576992 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.313905667 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.314619906 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.316095469 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.315564891 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316283308 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31788324 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.313145501 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.316327968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.31606779 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.316441823 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.315734149 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.315303698 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.314878661 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31625435 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312751249 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.315031552 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316206574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.417825479 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.315243908 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316498028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.316662778 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.320136429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316169738 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.323276806 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.315656423 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.31627652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.323945943 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.319038983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.319020508 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.317193788 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.321187004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.321035564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317152425 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319500478 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.318699473 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314183942 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.318079345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.317450338 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317370449 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.315722274 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.318330286 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317644425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320334141 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321404168 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324283689 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.316662183 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.318469502 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318690482 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316860531 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.319145017 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.318590954 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.321782419 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321542255 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321501189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.318138159 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.318209296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.318730498 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.318870149 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.318847761 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319281433 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.321480647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315653432 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.319344071 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.319111945 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321893447 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318628153 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.317744648 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319979131 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.315904901 seconds)
  done (took 97.232045316 seconds)
done (took 416.442385647 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.510242628 seconds)
  done (took 7.76257367 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.560631728 seconds)
  done (took 7.813680295 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.477379989 seconds)
  done (took 19.735391097 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.386360145 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.357774788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.321047242 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.319969727 seconds)
  done (took 26.638139342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.481118224 seconds)
  done (took 7.733360458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.311241362 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323755657 seconds)
  done (took 13.888708756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.798282173 seconds)
  done (took 8.050252288 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.70170288 seconds)
  done (took 7.959547407 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.329163776 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.328244375 seconds)
  done (took 14.176938398 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.307032239 seconds)
  done (took 7.558278337 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.049140069 seconds)
  done (took 8.303530199 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.320641765 seconds)
  done (took 7.574524362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.363417716 seconds)
  done (took 7.61630352 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.615411761 seconds)
  done (took 8.868116921 seconds)
done (took 154.931441574 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.311696484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.31528409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.315829398 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.315577707 seconds)
  done (took 26.511891461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352474188 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.353459153 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.35424214 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.363707271 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.356219925 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.352502681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345953821 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.346285736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364800887 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.356805718 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.354932779 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355351969 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.352563497 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.345442532 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355103687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.355029471 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364453906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.35494091 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345186487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356823955 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321777116 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.364277983 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357712974 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321025827 seconds)
  done (took 33.706769778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.518833631 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392729583 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473123062 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.372385802 seconds)
  done (took 7.010775355 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.372009907 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374557968 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.386863297 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.424834227 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.450930836 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.383405339 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348389704 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342456319 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.328928071 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.375048454 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.44939417 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.390950795 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.456883005 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.322531229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.507602259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.321479181 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321621308 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373453443 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.424939486 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.439532706 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.32219234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372899809 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.37797531 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.391110712 seconds)
  done (took 34.515819784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.320523731 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328947865 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.327731982 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.320772271 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.321141485 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.320950555 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.32774873 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322111936 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.343314296 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.323176287 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.320348711 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.322023551 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.32156019 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.322391817 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.320941985 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.335496927 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.335512941 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.322063913 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325148372 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.328445814 seconds)
  done (took 27.76600973 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.315187025 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.169592288 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.666837904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571679487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.31499878 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.317213575 seconds)
  done (took 27.611765723 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386203869 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50296607 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.322329506 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.647792343 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.723786069 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.324739292 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323618269 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537305816 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815566966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.817484543 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37553868 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384998306 seconds)
  done (took 19.420675781 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.327101365 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.318346718 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.318393282 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334683838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373588947 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327461034 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330652875 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315988105 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.375379942 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378518072 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.328377417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374644169 seconds)
  done (took 37.361320155 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406066332 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366645759 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.234892127 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121165895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703481014 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530215113 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.181102216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.735734953 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325070451 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593204926 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143237953 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421417927 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575391545 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31902828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322042307 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.266432952 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547822131 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779599427 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32147429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.094546338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345206082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328417285 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.157569911 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348835146 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53147212 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45332065 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.580838312 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320147911 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581614892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331596764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331627947 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320438074 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594076937 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959681894 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413359921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331308177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156421327 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.035659332 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.3198774 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.104129155 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.923498094 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322487652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331311438 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321335072 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254569902 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324001512 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748642065 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327617103 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032796176 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321079561 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332217696 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416334691 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.325244309 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138731342 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554636934 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322448949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.319413294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328387339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895857841 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619443939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327483662 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.258069032 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.770442731 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.101016443 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900725745 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.424308091 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325233131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325958158 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255966889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.099522132 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339672983 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490227308 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343804098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036381846 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055604874 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.128517199 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267298249 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84995674 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330468245 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.258403539 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55189935 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32320383 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262649902 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.279827989 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257140772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990644033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332237249 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.704501741 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329987543 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73987252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334918997 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340992639 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346812883 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548452054 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.208409111 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323196733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.906878876 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505893506 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345038285 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741929221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259112621 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.327757433 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579188269 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535271527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323653176 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.289861315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515242858 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324232194 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.341747238 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333817942 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335736112 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.8651576 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336581025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.572273634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342966586 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324793396 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031381397 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330843969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.426712908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.173651039 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570568882 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.064860995 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326806489 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406677018 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325808442 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325395452 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.195832523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846295022 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325514285 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.328031394 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325934146 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33676741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.325991634 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2844903 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.333807778 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209525493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.328177076 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550620669 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331696485 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601645046 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26010994 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493255308 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.475796516 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.550023035 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.446003048 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.324405642 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585281371 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333912357 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328968249 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339287247 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345610982 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425571605 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34863032 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.327471571 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585001594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330898748 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.330473823 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.64501805 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331281856 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328724813 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.33184743 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196671885 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872251239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340348873 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337104101 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22114006 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341057733 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39147419 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333226168 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337765561 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.028633519 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268174099 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.334634527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.32385429 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565270457 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338881283 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.086990823 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411133664 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.514400189 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872677788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343284125 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261910443 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039980349 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.021900314 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327771242 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263778647 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327997835 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337535363 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339348542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.946141402 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.876229363 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332799762 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.089641359 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.335373635 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338783128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334684673 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328416694 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.000043936 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.65137461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331911639 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.341464134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473386588 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342253473 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264093921 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.333079825 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334616249 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329777603 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329254793 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3619947 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.093652362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804463614 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590603539 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.135093537 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34238126 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.192665149 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.360639632 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.33036489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.9456468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346205182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.338027783 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338113002 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.340910192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.104844167 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050245369 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901946875 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031844372 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826037406 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229119086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.331139066 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331452635 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753511974 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266299454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.888570408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507061594 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756097054 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286625823 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519426448 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.459053085 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045892552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340294031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559688915 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222819587 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.949820399 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357227398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542945594 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366162745 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332427149 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259743196 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.618336137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559815275 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.973796163 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413473836 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753692637 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.96327228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348236581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.330012842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634488998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494400259 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051636869 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51084746 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331369335 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.205223031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829050439 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343086012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.562522699 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919237929 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333794671 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.522621319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274362057 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343301076 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344153662 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.334264968 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.504040518 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.342214095 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.588412463 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343526546 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266931197 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332682629 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843397432 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193034847 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.339162382 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332724652 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043200817 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343299873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599303338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.336607383 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.989950925 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341671757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267908605 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267308727 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.027674528 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33614601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335381609 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800764364 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.724653389 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581381535 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362478468 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18283477 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590220517 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.349674389 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88090036 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561187839 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.236078817 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357684603 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.434207911 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003901088 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.336488164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333240039 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570308755 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197220253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560915754 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.270258325 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.243351435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33312996 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548529691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335621364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.224623806 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578760239 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.047327502 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.339789256 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026410859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362149827 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229764143 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313624791 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.784078146 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345155062 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415416913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346372129 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.346657322 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346189756 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497987427 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222423693 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350933611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.349802129 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430109094 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.610970812 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.997450626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.339880758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88946335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084102127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892474127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349079954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337201142 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336676158 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270227851 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48528411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.565805823 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610591492 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488155685 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.865229251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360491136 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.049413904 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352842604 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550274654 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612582733 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237247908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338894262 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353613909 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.336691044 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349047258 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549791028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804938236 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864303922 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459524222 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340516512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759276953 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612407014 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337659376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337760033 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93355314 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.349150653 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650785165 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.343422374 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280321844 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487581352 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348549447 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988571445 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.349719799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.498742133 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.11235828 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.146201143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597114971 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.764220575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351092569 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892364177 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001988224 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605627135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405855486 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349539679 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.466900647 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486358382 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.340062924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341396279 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339182259 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186813583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049446 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349177899 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898946571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605775275 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337350163 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.337109503 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363728764 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.349195536 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563280102 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023926212 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566161512 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349536138 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342967884 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.157627921 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89773622 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353605043 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275509598 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.344263036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569241388 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578431688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36331321 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.792697899 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.051974062 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870310584 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.316682837 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362103056 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342932451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010723401 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895008745 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.00173644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814310632 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901447015 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349491015 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616728667 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.345249513 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346637085 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618476523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.345688452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.340994229 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355808664 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.892666178 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065883293 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.347354397 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.152125267 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.279887262 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687522787 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012737827 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280646899 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344703569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.517689568 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343214711 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496156379 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353569836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.343831842 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342636391 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.091606274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683685996 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.348398686 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.338285414 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.079589955 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346302355 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351210979 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566336184 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351593024 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011270278 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695213921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599908329 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343944248 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.330874628 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.347007838 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343095499 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340598208 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.550633111 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.964758365 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873117054 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.358433324 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.354503544 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347717785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.560035315 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556031483 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286976046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368902612 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343412626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359934359 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.24959866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.896188708 seconds)
  done (took 1584.7771348 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395675115 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.389506733 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.371240105 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.401122562 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37085536 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387735578 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.445432004 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392991822 seconds)
  done (took 52.437209934 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.347879793 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.563243617 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37258086 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.342872084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.352673305 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.350965921 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.756780562 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.346884057 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352604299 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.354391831 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.346605541 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.346404168 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.941650952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.354243326 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.344674142 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.341186481 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.35216885 seconds)
  done (took 65.458280451 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.350248933 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.665963741 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.427984354 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.35936941 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.095415083 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.351607374 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.694070126 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.353906662 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.344188988 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.457183529 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.000694519 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.371355871 seconds)
  done (took 83.757288071 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.353392915 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.352924808 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.353511204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.353606872 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.35271833 seconds)
  done (took 8.050804031 seconds)
done (took 2009.640000948 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.756559709 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.001473504 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.980431627 seconds)
  done (took 5.267421669 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.494111692 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.547480192 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.684207872 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.702280869 seconds)
  done (took 7.715969622 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.623831305 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.720300293 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.538450634 seconds)
  done (took 6.1704021 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.68346471 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.372378586 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.468055853 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.349022506 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.350557197 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.351043273 seconds)
  done (took 20.340051318 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.352937446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.355993601 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.353079411 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.356418599 seconds)
  done (took 6.70830374 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.335524857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.09709345 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.336131842 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35138533 seconds)
  done (took 18.40889164 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.10183839 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.113144142 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.096413129 seconds)
  done (took 7.599853112 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.354296593 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.193790974 seconds)
  done (took 9.838426312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645373107 seconds)
  done (took 2.935229874 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.485323928 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.620989277 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.325877645 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.259117307 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.336792708 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.887188654 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.874163996 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.476319473 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.256288341 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.367537412 seconds)
  done (took 27.179468542 seconds)
done (took 125.7301405 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.935186699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.597411162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.551386227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.90413831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.581722349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.550781272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.567529268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.8815466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.419425084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.407797211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.907456032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.582351943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.515421549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.597767253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.516882277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.350554938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.582590901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.981277573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.585939538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.792049497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.57280296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.542313975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.736878318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.557044141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.584605737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.502555443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.139047294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350973843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.764512861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.154315685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504351225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.961112596 seconds)
  done (took 188.470342811 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.36112726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352015165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.35154578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351600378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353024114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.353848748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.351972153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352462632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.366075242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352738778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.35310067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.354009795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355483975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.370330817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353311645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368871098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363871323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.352300202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352558485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.353001277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.365073138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.363350141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353558882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352624995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.364240809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.353391082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353557256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.352888826 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.353576226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.366411968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.35382554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.352851943 seconds)
  done (took 204.701318289 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.356240866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352682301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.353728913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36580987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353556177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355130867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355353805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.353518054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.366002465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363693028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.356744013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.353715185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355406303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35422584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353395066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360521219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.355431512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.353901816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.355182834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.357089574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.357704232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.354342873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.354897365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357122845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354833709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.357052779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.372473846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367499624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.354142374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.354711177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356692154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.3672962 seconds)
  done (took 204.734747553 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.557604076 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.362348366 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.363049847 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.317429979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.363043509 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.361950028 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.357424448 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.559293216 seconds)
  done (took 14.53714908 seconds)
done (took 613.734069297 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.593505251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316907359 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.554659048 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.38418323 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088834515 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.38479318 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.384290194 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.543733558 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.256550613 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.544657671 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.576400088 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380711556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.706373441 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.381859518 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.62044532 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.477475638 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.19910633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.305044913 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68540553 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.861551264 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.626372062 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.767272404 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.542460887 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.251393486 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.714974704 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.777194915 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.004673424 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.198395686 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.384519542 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.688855537 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.958987438 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.251538082 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.437188087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.420260706 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.474313742 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.456708436 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.230726136 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.418163858 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.556411948 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.533352086 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.86415485 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.075889292 seconds)
  done (took 91.1775122 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.354351434 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.354985075 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353353067 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.353937421 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.356222223 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.354371227 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.354316707 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.353238431 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.354854062 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.353466245 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.354546442 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.3559114 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.354063604 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.356930628 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.353947329 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.354789507 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.355411843 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.357316281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.354676387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.354374791 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.356130751 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.354047225 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.354744008 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.354804531 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.355582471 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.355361563 seconds)
  done (took 36.525017253 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.368451786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.588993909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.758017912 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.374532556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.367253801 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.370925824 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.439509231 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.369802486 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370784924 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.37146837 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.512535376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37165109 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403530779 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.766752523 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.371063669 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.367886937 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.369426763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.368694961 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.59788837 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377975224 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441077761 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.369968702 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.440006311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.377940716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371533115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370091974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373175713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.890510359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37109744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.515827564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.092983779 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.43935514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.858232413 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.771642769 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090212218 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373155135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.369358609 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.519653583 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.370898819 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.369971484 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.439537456 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.369758778 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.769749614 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.9842945 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.382933111 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.368166251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.913504641 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.515885184 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.593488395 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37638014 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.789740693 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.370473422 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369100822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369017441 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594213094 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.373823712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.366520144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.940906987 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.372468663 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.439024177 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367739801 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.369007271 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.603134512 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.367986216 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.593487465 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.370542487 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376757006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.369598052 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.768467835 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.370450194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.004429039 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.384167331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369387161 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.513166292 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.593652373 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.940439824 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.373407408 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.607499619 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.864939875 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.438397461 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.372841494 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.879832504 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.442442548 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.372531058 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.372036702 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.372416817 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.370411802 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.412827383 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438297729 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.930981363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997153053 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.959017941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.444013596 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.382242501 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.371807864 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.947422074 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.372124198 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.370484786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763354604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.007101528 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385322372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.378432014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.990799127 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.387193221 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.443193817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.37684896 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.775445295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.371378562 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.415360809 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37058968 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.377683657 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.373407562 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.44378932 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.375449994 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.371471282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.98599568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.536417933 seconds)
  done (took 179.251992993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.364951755 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.37293678 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.364616783 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.364312492 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.363533086 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369360712 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.365179192 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.364022938 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.370321416 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.364873335 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366092187 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367143201 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366358239 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.371172241 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.374457882 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.371982465 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.976226292 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.365621954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.366998654 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.365720391 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.149563846 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.366828516 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.364947555 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.365399671 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.365235796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.365395848 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.366457219 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.387484156 seconds)
  done (took 152.991358377 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.373277104 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.893708706 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.374411274 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.495044942 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.39250992 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37041178 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.492253133 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.425428851 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.374508391 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370583258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370591471 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.652283845 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.37410169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.845502292 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.548009661 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.494210255 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.846792877 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.374766165 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.370828589 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371451664 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.494709774 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380567029 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652217697 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.894554095 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.37509013 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894885804 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.363120373 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.373787161 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.372925587 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.898157568 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.371900901 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.655484684 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.445417757 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.428063923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.898293851 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.853973478 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.858249833 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.509153062 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.373634598 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371569429 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372511492 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.363564003 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.897930195 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.376262926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.374718159 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.894247496 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.389786072 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.375535218 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.383654533 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.372759542 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.42905079 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.430861762 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.658659862 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.904352514 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.445388973 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.394935095 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.495414444 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.75184146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378287271 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.855225154 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.364564648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.903113829 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.377734059 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364171281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.375744032 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.379345601 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.513508381 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.496503037 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.857387159 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379402795 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.856704083 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.51536752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.374987751 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.374269415 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378484736 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.900956667 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.851695265 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.514511674 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.500401406 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.555602334 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.36666297 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.374749195 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.366383033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.447042772 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.374973612 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.903701548 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.855104346 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.379251086 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378261087 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.377373074 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.37841001 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.538393335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.905343479 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447791962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.846610159 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.671612079 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.661110186 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.378838434 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.431562184 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.37745335 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.661226057 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.380127389 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.429926295 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81560123 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.659740486 seconds)
  done (took 162.372955661 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603241817 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.494629836 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.461729944 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.48303015 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.883752402 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.919292427 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.534673443 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.494084448 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481736292 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.608501582 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.474511816 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.468625583 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.549074743 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462757952 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.060031323 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.442549467 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464299021 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.493791306 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.480699383 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.373143649 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.971698981 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.645883663 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.537270683 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.470844125 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.467804151 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.131907834 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.901179696 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.867144443 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.536527431 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.579450658 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.870258555 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.460255569 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.270979979 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.001737138 seconds)
  done (took 65.257911668 seconds)
done (took 688.87278424 seconds)
SAVING RESULT...
DONE!
