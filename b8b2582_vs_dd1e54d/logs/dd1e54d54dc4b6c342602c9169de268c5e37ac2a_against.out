cset: moving following pidspec: 28327
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235202852 seconds)
loading group "string"... done (took 0.591558285 seconds)
loading group "linalg"... done (took 8.166217673 seconds)
loading group "parallel"... done (took 0.168932098 seconds)
loading group "find"... done (took 1.323738236 seconds)
loading group "tuple"... done (took 1.982666227 seconds)
loading group "dates"... done (took 1.352986854 seconds)
loading group "micro"... done (took 0.205906603 seconds)
loading group "io"... done (took 0.946097449 seconds)
loading group "scalar"... done (took 40.924616954 seconds)
loading group "sparse"... done (took 12.86468705 seconds)
loading group "broadcast"... done (took 1.02429207 seconds)
loading group "union"... done (took 14.827807683 seconds)
loading group "simd"... done (took 5.187083072 seconds)
loading group "random"... done (took 10.012767175 seconds)
loading group "problem"... done (took 1.780060179 seconds)
loading group "array"... done (took 23.516572335 seconds)
loading group "misc"... done (took 1.759876741 seconds)
loading group "sort"... done (took 3.721824591 seconds)
loading group "collection"... done (took 19.919109078 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549841959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127553108 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140061758 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123419007 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153926782 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120166527 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127838249 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086373687 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.867998013 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160353368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117486998 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42333377 seconds)
done (took 5.394743049 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175354742 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090720493 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08230258 seconds)
  done (took 1.231782579 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067568733 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131292399 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068979871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068922702 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071849021 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068865561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068805837 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068504799 seconds)
  done (took 1.6082257 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075055925 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070837787 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067783619 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069797175 seconds)
  done (took 1.346992418 seconds)
done (took 5.499517591 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807536032 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215003146 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190457471 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420555984 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138242315 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182322212 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641514794 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314206391 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193593223 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097020234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116662102 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399045093 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127357732 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64337342 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079288295 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09914384 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146685518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447082786 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073471691 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08678957 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095401925 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13317032 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080856809 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07811632 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156462656 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071068093 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148315073 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086607641 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069429676 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.26372338 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177803794 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662851224 seconds)
  done (took 10.542945114 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10540411 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103116223 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071375177 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128472322 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101180496 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072468145 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077997535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069663817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092687829 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133466287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095402971 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111765338 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069007597 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072352401 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085976121 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201487173 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083442521 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084263761 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073480549 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080964378 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111296779 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081322188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082487432 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082926907 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136111202 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173054916 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100902606 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100269021 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069560433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085336764 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11788377 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130909116 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069108197 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068353352 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128228046 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097662033 seconds)
  done (took 4.652756397 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.02620349 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155625591 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09288886 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139869089 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066971491 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113185271 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067915119 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085941651 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244942211 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.471285557 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093875881 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.643122763 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126373384 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120260349 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108696006 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073801881 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074371986 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069991451 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.300803205 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102345974 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112202035 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086542406 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073300714 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072150913 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067611873 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074192094 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066007041 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071178265 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090926315 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078925425 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334231779 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128782989 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070699633 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.9672099 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170831232 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070074113 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108474551 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165269403 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097227824 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14505486 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070010343 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065708037 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.303164167 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068026386 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074391014 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069231175 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088281092 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112539038 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12505553 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067734872 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068953555 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172877079 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066456106 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084044588 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.232541658 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154307958 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069280406 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067734995 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307180186 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096084764 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074144077 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067438458 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190051056 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12067072 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071017093 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070508825 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07171662 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07079441 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368273455 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068900873 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.905980835 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071197435 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080602115 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072963048 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074191923 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081700466 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082172405 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093913833 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070086241 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076476843 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069226287 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067731681 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069897586 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096010057 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404828767 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069509043 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074343811 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066864986 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09442901 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100844844 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069861074 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071180299 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10467394 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073605269 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068189965 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069943387 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094436167 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122233039 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073341547 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113829313 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068946285 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.07354942 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096956679 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07061743 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10317756 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081182526 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071863434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.459949038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066268396 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073078074 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066837045 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069212925 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069272108 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064858131 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079667296 seconds)
  done (took 22.118239842 seconds)
done (took 39.397507422 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250559215 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086921136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086735424 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086921969 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086580315 seconds)
  done (took 1.752577184 seconds)
done (took 2.919326065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129477646 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102122664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066308176 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100462484 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066529543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106657993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106747187 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086176934 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10333762 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066883089 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101150484 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066830328 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066655647 seconds)
  done (took 2.320529627 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085609647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085166972 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070871795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084113389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064615696 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084295059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083207466 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091371351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083363908 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074354703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064600948 seconds)
  done (took 2.004085806 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084393085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085684363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070631449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08388135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064238191 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083470477 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083222025 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087225294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083107452 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075235957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064673153 seconds)
  done (took 1.992314135 seconds)
done (took 7.43688537 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078008178 seconds)
  done (took 1.189949343 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542789459 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.617181809 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081528943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103174159 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198777923 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111756843 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240440695 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085533471 seconds)
  done (took 8.274402493 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109206357 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070678349 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072133192 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07124411 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072163416 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072421672 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071228805 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071076604 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072346837 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072294428 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072530837 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072291031 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071211929 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071778727 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072590906 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071511486 seconds)
  done (took 2.392110778 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099890727 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098377707 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075826942 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077548362 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075185392 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07448324 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076873578 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076418731 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073518185 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075162966 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078075412 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07595198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075571244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066293335 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076238718 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07897486 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073642725 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076604623 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077693038 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078290062 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077669715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066072145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07619677 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076890149 seconds)
  done (took 3.089159617 seconds)
done (took 16.067643865 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108429165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069382591 seconds)
  done (took 1.298046289 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08133093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08167694 seconds)
  done (took 1.293978455 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079882832 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06494165 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087061364 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07646744 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06520228 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065501824 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085464081 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066042792 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065512409 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065746775 seconds)
  done (took 1.855123374 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06801284 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075230654 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070821829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081406012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072379616 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06625668 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071314979 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067242343 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07594852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064848116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069998469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085392778 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070527714 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087279635 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071110727 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070069506 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072196006 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068975375 seconds)
  done (took 2.443758981 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065337035 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065698213 seconds)
  done (took 1.269404642 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068973746 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065284578 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068376435 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067568402 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064703657 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06429448 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06557846 seconds)
  done (took 1.597955273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413249783 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125995859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.341180846 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073341595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083446632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262409199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066832207 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071473367 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071832626 seconds)
  done (took 2.688249046 seconds)
done (took 13.585685289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082945573 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088167925 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100291991 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4195896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095420183 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069730543 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115551976 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184471362 seconds)
done (took 2.30147127 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217319646 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.832992088 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.492683302 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212746344 seconds)
  done (took 2.678368029 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355043108 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.199338618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079270803 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069717255 seconds)
  done (took 1.85579611 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069257563 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072206314 seconds)
  done (took 1.289839403 seconds)
done (took 7.186811427 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067269536 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066398137 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091554347 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066320583 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066483617 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066301991 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066550025 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066328953 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066398914 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065998677 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066773924 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066224793 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066467315 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.066966389 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06648026 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066854486 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066725411 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066431414 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066386781 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066318981 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066887311 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06584395 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066343172 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066313248 seconds)
  done (took 2.799444235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084780346 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068866809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071155451 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070168078 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071142023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070181955 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070836464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068602151 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07070207 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068448331 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070940678 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071235272 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068425862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071259162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068190005 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07121789 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070664564 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068932962 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068570492 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071744881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070414771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068728785 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071014693 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070527364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071182466 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07100914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068370037 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069630717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070527502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071763333 seconds)
  done (took 3.276151122 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067529504 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062347649 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063032708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071908427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062667011 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063268431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062520174 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063056572 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063808963 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062889412 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063645871 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062554887 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062467296 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063545424 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063294306 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067111893 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080937612 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063051195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062794977 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063409859 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067093979 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063069852 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062785562 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062983909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065702435 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06236506 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063376005 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062930574 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063825879 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06435772 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066889292 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067345794 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062775757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071584713 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067473224 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062700842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067077264 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062496924 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063359698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062387542 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062276129 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06259491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062959341 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072319499 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06273663 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063832238 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062820775 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064240662 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063251844 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065096462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062514924 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062623725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064835768 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064049302 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067838489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062660884 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063507006 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062971404 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063619849 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06320253 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062510242 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062878549 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066226469 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063737596 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08092627 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072199444 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063107522 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064250982 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063470818 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06622443 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064606631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078867879 seconds)
  done (took 5.835627028 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08775222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089962981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068455126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068314313 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063581484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063957252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072494293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063534096 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06828627 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083282032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064024059 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068267772 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068376827 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06810741 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06378701 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068454052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072361047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063835953 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063436917 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067592222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064034585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072094219 seconds)
  done (took 2.707155011 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149490926 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06925648 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108159393 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074365517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072547722 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074415861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069849493 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070111379 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069805387 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070370028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070278231 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070469733 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072424211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070442577 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070266377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070602058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06957436 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070470858 seconds)
  done (took 2.554965563 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080327982 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069718485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08980753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06869991 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068934636 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068557409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07311639 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073848198 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069193604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069530324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074310229 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070980441 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06872815 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068912479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068573875 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069028822 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068434864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068962939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073630098 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073229378 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073325733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07395322 seconds)
  done (took 2.746542526 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089469319 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068696087 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084359873 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070648693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063994875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063272916 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069383739 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068062113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069455422 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067519338 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0686079 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063590194 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070875773 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068554868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071107231 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068732783 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068169971 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068406201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068556207 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063505702 seconds)
  done (took 2.560702207 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085614697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066800153 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066634775 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072800801 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066854492 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066465944 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073209992 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066700387 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066624918 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08837303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066454837 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067160395 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073640236 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070672767 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067257338 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073122868 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075916175 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073716677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067114963 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066696388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088847198 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066930023 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073214645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066807708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066548835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066503491 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066606894 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07081339 seconds)
  done (took 3.155919648 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066669387 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065965612 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066295476 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066353438 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065960704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066210139 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066921877 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06635081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066525953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066846852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066320775 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066165989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066162346 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066043395 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066126331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066613578 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066825551 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067064946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066415317 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06659003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066164439 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065948759 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06631174 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066139988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066398029 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065810386 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066054818 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066527389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066092638 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066269514 seconds)
  done (took 3.161311854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077562031 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075559962 seconds)
  done (took 1.32353322 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065902361 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081283984 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062419468 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073873373 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072503956 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066911643 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073293319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07238754 seconds)
  done (took 1.734094374 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087686382 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077151643 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066595676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077884666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076981203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086603821 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129010591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066210116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076154675 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066466551 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084369664 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067900697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076323193 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070341601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076734756 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079153507 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063775664 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071093217 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067229031 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064113942 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0661356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079043101 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075201445 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063448781 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070741411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093262835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082261668 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064881583 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072302496 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077636491 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075960861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062565762 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065392046 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065804415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063672969 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076483663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084477845 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072518205 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078416536 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065942161 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074047904 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063071892 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074021892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075966083 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080848092 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065202324 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06529859 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063149556 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066358352 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071767829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063126483 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069629851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062658936 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077771827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073870849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081158952 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064309763 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071211996 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072511166 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072694721 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077347112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071766681 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075281168 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065191842 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081298687 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075525819 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077698068 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063410028 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06252919 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063766482 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079749216 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094384931 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075244529 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065677102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065707623 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063077121 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072438226 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065800846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074798021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076755726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06491604 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069950874 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078024838 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071183436 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072484271 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072038813 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063888276 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068841955 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06660334 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085962873 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063990504 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063461852 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066113432 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081412156 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075185484 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064766805 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066465807 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077196454 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062471788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065586314 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065955717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070797103 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078692171 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069392027 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069193015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077961691 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073636423 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06961728 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071240521 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062014691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065276517 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066565277 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076488535 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061470129 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071002959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068436275 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064570086 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076226095 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06281732 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063762685 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076278085 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075624223 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062939968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061513094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071196526 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064551362 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066684695 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077890939 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06278444 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062151231 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062108759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071601126 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063569975 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071709503 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067817575 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071659866 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061822772 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.192484 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07151149 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079525713 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070213893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072043042 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076588931 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071813612 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065161125 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078411709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072296967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067957262 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075359123 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06963777 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063803978 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068028658 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071818014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064297577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07265975 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067749138 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07215333 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06528832 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063843819 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072111667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065988709 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06833656 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07071069 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064340674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080979038 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071705869 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063202443 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062884938 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072717751 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066377664 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064793907 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068212193 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072194852 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065949786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063320873 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064691666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07135652 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073340454 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068637974 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066155082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074847511 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083186312 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065230982 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072697347 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065212032 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066818514 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066813684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080924305 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076257374 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069937793 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07262577 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062959869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074818621 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077560036 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067796907 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063481474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068299279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069918755 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07757724 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06914048 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066048394 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064100008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071257277 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068244181 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072911727 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065666243 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067993095 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070803076 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063972748 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071948227 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066088013 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080767351 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073390575 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063430981 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068285117 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064326458 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076367617 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063897818 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066270426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067976236 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066434616 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064442611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072024963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062606041 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078122852 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078731684 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072387303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067724015 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064953218 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077454664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07143415 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073874133 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072296476 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075315798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080758529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06762962 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072051712 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080622622 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065083825 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062612666 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074646959 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06687387 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064111524 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064325383 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064357186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072948049 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073033352 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075539926 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062401247 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071298558 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063418895 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067207542 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063225094 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073196436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071473155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068682062 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077064529 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065043816 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064396688 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071591038 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063869069 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064918534 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06491954 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07132632 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064612479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070230341 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066852431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070138518 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066393975 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062667486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070032734 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064350288 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069351026 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072916174 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063563438 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070412859 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070969171 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064286805 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07052452 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067588476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.201257932 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073944845 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072433695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071558223 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072847524 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063913173 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078503597 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065570787 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078617189 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070480441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062345715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071367846 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071686715 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070140842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066488552 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065556003 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071370069 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064912193 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071817445 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077662238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066509964 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081381142 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077128963 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071361373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072489068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071110877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071190247 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06783456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069529926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065720999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070637957 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065394385 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07437162 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07226708 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070897613 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071317214 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065631735 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070443856 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065858075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062755496 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067572917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067710726 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065193611 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078563042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065861835 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068244273 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06478483 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066619222 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064910355 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063102622 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072924375 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073774942 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066174421 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076590583 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068108767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071851705 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082167443 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063082541 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064248359 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063719746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067288315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078670708 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066367323 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079279161 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070563854 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068336817 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062757887 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066438987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064210005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063221089 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063639394 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074330051 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067433826 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064554916 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065412804 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072072266 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066309111 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078564098 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06466795 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070106501 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065855309 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063184415 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068443241 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067703371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072400934 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066256438 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066620324 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062721593 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065801485 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070413271 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07172382 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06484368 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070931731 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078211206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065136506 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072774346 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067694399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063155583 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07224816 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065307903 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065508465 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068165148 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073429655 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073506571 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066307649 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080136084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065125127 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074066938 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065491976 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063922785 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064905894 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065134813 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064822514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067498781 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0660042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078260896 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063380633 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07095775 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069714487 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068549153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074946171 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065172558 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070893167 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069727444 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066051975 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070719704 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077431306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06787942 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071673265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064768573 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070413836 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074018333 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066699251 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075701054 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069837317 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064785677 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069983851 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065407372 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06385551 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064741736 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063394172 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074767722 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065141645 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066780066 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067296561 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.200221605 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071145367 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069101627 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079518451 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073645578 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073253175 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063948382 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063462711 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066798998 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067115268 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071748258 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072216348 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07562612 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071819273 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069480061 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064583407 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079938999 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075627476 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073821386 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067190317 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073394635 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066286598 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072281859 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06970095 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070718175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066693059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074140814 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07145422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068300424 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075854189 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073571506 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066693349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07141597 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071167505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070307438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063648784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065880659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071929775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074593662 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072284302 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065162616 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081175202 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0669791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070413307 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067865181 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064470644 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075057632 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063498962 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07176603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066172587 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066691571 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063796336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06824503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067210955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072411618 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068485738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06430917 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081945718 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080474735 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072416665 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065034838 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064862098 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063874889 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064228357 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068177596 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066765146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071606645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080959642 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068565272 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068176582 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063911636 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065626479 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073030968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073573583 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063030853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063496134 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068142368 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072136636 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077297118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064350604 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065239717 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073207726 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072526435 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063404015 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068410532 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06378146 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073620483 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083391716 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065917329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071521147 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075640149 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079024888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065798006 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063910902 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065894118 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071834963 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070879799 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066495993 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066457134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085095186 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073035174 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067984391 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064552497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072067295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068175304 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079935144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066483826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066082519 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074443232 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07499688 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073511058 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076183789 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077074503 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071793624 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071761856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064407923 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070718126 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.0639601 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067720985 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065727334 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065603159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06924044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071813755 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069474872 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080616037 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078821246 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067159509 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062123538 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06742992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067310692 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063265098 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065508774 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063568441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063520511 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063172152 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063841489 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070958642 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073965922 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06912427 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065529396 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081908404 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062023104 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074203895 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071207808 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070291745 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.20389031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067277968 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067194561 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074666147 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06904396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067512337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07266259 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071884932 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071857715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063870267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077522177 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06452482 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071668883 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068165692 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065997243 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065639245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0731258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069201619 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067068513 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072239356 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072283937 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066985704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063541842 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063225559 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074922767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063837533 seconds)
  done (took 43.389883471 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102823722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065621609 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06395877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063397264 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073764043 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065080233 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063806908 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065254842 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065237371 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066864917 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063842348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064352763 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071934324 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079062681 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07473273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068000779 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063899449 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064822829 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063798962 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064876118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071983258 seconds)
  done (took 2.722001464 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071459458 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079075719 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076286917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081222793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073182008 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06898919 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0773259 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069220203 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077714554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074304577 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077557996 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069426121 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074400602 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074678488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074796122 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069557731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0775796 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073656263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069459489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077418637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06990213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077668159 seconds)
  done (took 2.899441079 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065947344 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064572335 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071377103 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063050655 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064759268 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063220004 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067759187 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063715676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068278311 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067537835 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067578672 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068062497 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071938982 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063701005 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068313675 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063658157 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109827042 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067670984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065349322 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066130333 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063423359 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072236849 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063865971 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064174988 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066834655 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067627129 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065600127 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063276463 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064695045 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067142575 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064972992 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063358172 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071549514 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070735576 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067021784 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067258258 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065066986 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064991458 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063380044 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063341438 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070851402 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064098517 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068152431 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071769722 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064020721 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062947021 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071530218 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064830065 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063556477 seconds)
  done (took 4.561629145 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076671225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112342578 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069624257 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092838813 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078169762 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07106028 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06995338 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093843217 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064963566 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065998912 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080002126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080289256 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067541322 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069396075 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071783409 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067229442 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068210695 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06688509 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070788305 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067063041 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07073597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071609296 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078673214 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079694683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06821781 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066324243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067021614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068692698 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07873237 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071469092 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06903865 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070822417 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078935045 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072564716 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066677579 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066837073 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079905163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067422475 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066728031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06508242 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066616816 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06865211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071601973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080061602 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067177839 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072126512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067158718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064768895 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079143274 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06704944 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071984293 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080237151 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06850859 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067647761 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0684847 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078864861 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067063093 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065436648 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067279716 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079581349 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065462024 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06812101 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080074516 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066367466 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071040943 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080086931 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072389997 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068229289 seconds)
  done (took 6.328155857 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075466298 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09607999 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082458195 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081433522 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074853949 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0751185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075461146 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07548059 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075209238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079540152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076165744 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117662627 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07135874 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077418577 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075650722 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075100585 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075548705 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075678348 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075543446 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076061731 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075413272 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081583936 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075130341 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082089037 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078784862 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070913464 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07548307 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075362849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082155757 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075370658 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078258708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075296065 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07505114 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081647782 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078872353 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075554831 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064804038 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075215722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075487737 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075412326 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071085181 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081652928 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074896802 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07069238 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075326324 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075022567 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081485602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078428103 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077237527 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079021785 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07505975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081601216 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074975956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075221634 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081635588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084396981 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081437049 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081952676 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075200779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081730066 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081508812 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084401769 seconds)
  done (took 6.134509626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080453117 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07200135 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084026332 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063639313 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063956676 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073843223 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064024587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063614728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072347954 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075612362 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074777437 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074081015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077628012 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074780667 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07411973 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076862758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07406673 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074954855 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072419592 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074025522 seconds)
  done (took 2.758991559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07919974 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08309018 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06980045 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073967136 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069371487 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073822216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068825586 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069668666 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069421781 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06978086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075505129 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075788112 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0696698 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075047895 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075459891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074420378 seconds)
  done (took 2.453523446 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086095406 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072000651 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07921145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064946329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068943854 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064013952 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06535151 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063556321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064526597 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078401142 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06478938 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076193499 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065411953 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064287148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064716361 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07067453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06421781 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065029041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065164011 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078726375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072408765 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066100322 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069200974 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06521545 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070637984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07284083 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067150011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068545492 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065057612 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06564409 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070856639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072186435 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06515725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065860125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064226473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065248136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064874292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065529401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071156834 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083104191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063167897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070043268 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064949872 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065994477 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064006774 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065682062 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064285748 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070986825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065634066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070664407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065016738 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067539022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065765961 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072838311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06774881 seconds)
  done (took 5.044321476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080642926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069338112 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063576687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062917362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068836695 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070044062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069228286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069444482 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070046328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064198079 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070037579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068756248 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070035762 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069461283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069794655 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069696163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063577921 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069352669 seconds)
  done (took 2.53754323 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075059311 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068630837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073273696 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06830663 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068350096 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068395041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063937758 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063810815 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063841009 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068461398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068653778 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068229137 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063670903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068494409 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069021817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068967219 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068398156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063880551 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06840693 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063745403 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068425443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063568 seconds)
  done (took 2.768027904 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098213263 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085735573 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143117646 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081347138 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088303553 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073976341 seconds)
  done (took 1.856734547 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095223044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100131426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06841236 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068888348 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074735493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072273484 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072699399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072521294 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076976529 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077364472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072431985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077594964 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078014605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079000189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075395674 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07485729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072641389 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07543268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069002314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082611213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072786941 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077254533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072535742 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072528301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072973366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079614122 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077192998 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077431936 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072713396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077342945 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074953738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072595836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077239624 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078527946 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069365141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076992096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072381419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082281357 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075083067 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079240532 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068950818 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075226636 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077146136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076617996 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077146683 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072887031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07629571 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072658794 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072874048 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083973411 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075033408 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078846167 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074762819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077500267 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077114994 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0838061 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077667758 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079086326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075049135 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077466925 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078973253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074610836 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079119026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077419632 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074949241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078922464 seconds)
  done (took 6.332824527 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106586769 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069376116 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072546252 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077562203 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079100502 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072895599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072797579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072492541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072679878 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069954266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108484489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072882841 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079955811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080368744 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072967254 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07312564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072743431 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080220999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071157451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084282568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072739982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079442268 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079322204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079129975 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077776213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075458174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072854206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072775939 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07289376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072809032 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077204936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072682864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079434394 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069767478 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079271758 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072509562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072404895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076477118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072238134 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075538834 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079263848 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082477908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072797501 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072545833 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077650359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072684338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072602993 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069360712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072705237 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069388288 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077114716 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077332942 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077423179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078890632 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072292137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072732513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072711954 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072472171 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072500599 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076454845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078928723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072817928 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08377949 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072485891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072470352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078695635 seconds)
  done (took 6.32659934 seconds)
done (took 129.117789429 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211047109 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184487314 seconds)
  done (took 1.668469252 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076766288 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106876145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084675968 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136397364 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071799155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107963158 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10429855 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083853377 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073476328 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073113898 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073239194 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075805839 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139029483 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071875201 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073690086 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.077090588 seconds)
  done (took 2.721335721 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10779776 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171156331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110825475 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070927142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107514733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079468728 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070786259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084694375 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078268736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073091212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079660325 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077681227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072644905 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080474631 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078216864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079746755 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072825563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079502836 seconds)
  done (took 2.874292287 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106169556 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097659322 seconds)
  done (took 1.505836373 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177706742 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134101073 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203123041 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346034546 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159595037 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.430148924 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14181123 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139492428 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117387039 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136139436 seconds)
  done (took 3.280891295 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106783844 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172906643 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298618367 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124070465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078166373 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093603608 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126277276 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084178485 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08648696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086259628 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085974403 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080665151 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105543327 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079326515 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078129761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08056506 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108875649 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077554042 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078241645 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081465056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108947044 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07162084 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079639953 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077138556 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08370413 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083330072 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07279673 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07162974 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081024314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077877193 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082159809 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090294822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08323725 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109648507 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076238329 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109568722 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080977242 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078697179 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077801699 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0791949 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08261825 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082666676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080336543 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080350577 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07272469 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080712578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072487595 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071555116 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082780184 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072985858 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082459737 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081768155 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109321251 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073191751 seconds)
  done (took 6.24130628 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112050519 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107879277 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073966588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115245079 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106967201 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072532689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108416566 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102154321 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110860022 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072815181 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071041183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072947313 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082194415 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08484616 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120985945 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108839763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075491573 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072548698 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110788861 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110811592 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071973078 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10498733 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100659959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111046614 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071723172 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072608549 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071063729 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072766391 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078916867 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08001501 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071702172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081717653 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088040323 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077512448 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07066536 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070908653 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07154685 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080603989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081190135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081504438 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078936952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070151062 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07088206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07187076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071732709 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070021093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079295824 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081133306 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079707237 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071211345 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072131109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070681401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071849073 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080751147 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078428542 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081881881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081000334 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070984101 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07086498 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073683695 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081804837 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081201003 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080712716 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071680649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081223448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071198712 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082762505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084460238 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070973487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074736721 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070444519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071248823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072085103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078554755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078666644 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072155263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070769886 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070538823 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081449914 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078548303 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070565862 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078073962 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070339708 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070696785 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072222137 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072060187 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078432499 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080994806 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072573357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070837631 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07083887 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071007644 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07007648 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078782064 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081416428 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079851347 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079419491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07187256 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079100427 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078283908 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07169854 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079512038 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070555155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072332915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071453736 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078549033 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077989097 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079662208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070132007 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070049322 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077985924 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079960875 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070808785 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07733488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080212865 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078412153 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069778193 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081660051 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070961019 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079688341 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06843467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080267496 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20938729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081442243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072819471 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071806863 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072167952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082090964 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073086807 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071643465 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073124679 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071264768 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07955769 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083906248 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073146815 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080103184 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079371731 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072987437 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07964823 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071302102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080883256 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072149165 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072116665 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069921298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08279535 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071632317 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071634171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071028285 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081376044 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069708704 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08140796 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079222691 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070659639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086620098 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081440906 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079002017 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081484044 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073064868 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070664074 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071312259 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071289456 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078568717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080551917 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072998264 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071183823 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078978989 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083458124 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070950509 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079465868 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079472445 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079920652 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071804544 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072089076 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082610571 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080585874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079969953 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080107854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080327843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072306555 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079122451 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08051745 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071428127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086777146 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072321154 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084382572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080710329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078578334 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080623306 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08247514 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082235554 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083052979 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084691034 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07102341 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071191799 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080263146 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071329179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071162695 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079079548 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072831571 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072336159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084654778 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069533176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082532964 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070291647 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080624991 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070310213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07223457 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085096604 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071707289 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072539777 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079962208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071425084 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079439864 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082509047 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078971745 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071315561 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074912944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08064761 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080456059 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071259151 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071117758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072498691 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078966495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078358928 seconds)
  done (took 18.963410823 seconds)
done (took 38.566703439 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210341548 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157750375 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189467283 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118361657 seconds)
  done (took 2.078829457 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111335624 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101077772 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091212597 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067280257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096966817 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067720373 seconds)
  done (took 1.873162089 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292879465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.200803356 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183119463 seconds)
  done (took 2.011498349 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213442184 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194501416 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470113101 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289152961 seconds)
  done (took 2.602440752 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143981221 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085123668 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066569686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085191792 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127303384 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153865613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096120028 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121039847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077942174 seconds)
  done (took 2.347904912 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149600959 seconds)
done (took 12.414257244 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.216369802 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.210967968 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.229433751 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100210671 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070666571 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183287969 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.183753292 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.201784443 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171427956 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078527451 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.234192419 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087036615 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.399234992 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107325481 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079978756 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.234301767 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07736618 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120349494 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077773506 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076975425 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158924395 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178844458 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087542503 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150785887 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.118805903 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20621599 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216675737 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080057331 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075201973 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075027945 seconds)
    (31/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.171159592 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137650507 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178156269 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142746588 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136479447 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103176859 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076311163 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078053562 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075682857 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197328112 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200184407 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.23378605 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177622089 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067045102 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092457031 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108001988 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102784303 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066866513 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081617491 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068929164 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158974473 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.169860618 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078189798 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.15986585 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.127793755 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076375102 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.219602129 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080494948 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09477861 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078389358 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090606934 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.068877426 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177740993 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231908728 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089517903 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085742731 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076136979 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173665702 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102118246 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184362214 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072155502 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06823475 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067439036 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067253165 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076555058 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070960089 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092153198 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138965486 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120415601 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18318268 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075093734 seconds)
    (82/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066489281 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069324545 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089012731 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124806355 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068574142 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07431828 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077478038 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067850771 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075674493 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068606362 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078969743 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.230085652 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12078381 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093089 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124430173 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086421725 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07813928 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090505596 seconds)
    (100/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.174968409 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096082272 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074658816 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069204127 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224892383 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224884165 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128581665 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095571696 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090551483 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069391539 seconds)
    (110/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071899358 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199515198 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137027257 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075076601 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072064021 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137686433 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075436206 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.20192238 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068493905 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069244576 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103607396 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06753282 seconds)
    (122/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067140387 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079920769 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.205527362 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18366873 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068723024 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142357041 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06816383 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067960372 seconds)
    (130/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08146616 seconds)
    (131/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074168257 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077593979 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076268793 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080817137 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077343136 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.069235824 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131492951 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09339656 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068663471 seconds)
    (140/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07360066 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.183414294 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069957999 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070604981 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068743586 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068655814 seconds)
    (146/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081272108 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079506131 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090377758 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195616524 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076180526 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069693374 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181141255 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075818635 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170816641 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142430285 seconds)
    (156/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089124453 seconds)
    (157/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075277053 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07882407 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075616346 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076093032 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079307315 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139653829 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107800284 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0781157 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068040258 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.094756034 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111246412 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066751744 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074216778 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095863245 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068446669 seconds)
    (172/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.127522831 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067579925 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067472259 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069070103 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173672902 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068172041 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090745198 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120045064 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068730677 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143973092 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.141564633 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075783304 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068264725 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068575905 seconds)
    (186/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068405474 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067957645 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079542972 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079812569 seconds)
    (190/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076095878 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079496144 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213707408 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072324661 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.198569912 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06959097 seconds)
    (196/309) benchmarking ("sort", Float64, false)...
    done (took 0.132463985 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067695312 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075911477 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168610791 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073663406 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073746383 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070745346 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067923713 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069637133 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067783297 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068321039 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172526539 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067327072 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066949443 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074298355 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092181693 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.12851738 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.230115524 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.071432708 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077763668 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098491893 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079014687 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.186802184 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203035726 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181068423 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079614068 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077507543 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147879619 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14093837 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068683939 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076496335 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068073319 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068730681 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081252705 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068867833 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068479552 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076183039 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069086009 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081066709 seconds)
    (235/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074703706 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068257931 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126734402 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077144968 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068293801 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082536915 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067995743 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069807475 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06920368 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.072100845 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.135130922 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067344798 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068313765 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067040602 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068632581 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07674334 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070367948 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072625463 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135483905 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068453491 seconds)
    (255/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095312596 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068741538 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067613427 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070708677 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068234968 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131279717 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081711346 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09084734 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068503878 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077275388 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075129203 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084337824 seconds)
    (267/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07648361 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074935194 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067372112 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068802035 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068285995 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070443924 seconds)
    (273/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123114722 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070623001 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06954536 seconds)
    (276/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090544293 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067901333 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 0.149841742 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072496854 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071930161 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092756171 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068967067 seconds)
    (283/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070683235 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080469846 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068159377 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068825563 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068158851 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080760499 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177177801 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076150929 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092543926 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09434076 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174858195 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070684697 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068816959 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067316742 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068669206 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 0.135001358 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07504885 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069101735 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06909465 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070727544 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0678593 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122456303 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068541092 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068908906 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06813794 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067223243 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071166059 seconds)
  done (took 33.731067852 seconds)
done (took 35.078570926 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088231854 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101441817 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075375773 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094785313 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08338907 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098463575 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075452637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080925501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08350747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082162392 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081673322 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075221197 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077660256 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077473112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075554497 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100744743 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082087416 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076214484 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077101089 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067739824 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076321575 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068155443 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067691703 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074582725 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080069226 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075330275 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078054462 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077461947 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068938339 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068921397 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073071142 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07715986 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068526851 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081445507 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077322615 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076612498 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078271607 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080800035 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068148146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068482736 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077844241 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068448262 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076260158 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074470828 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073028436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074564695 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077678713 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080948303 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099908385 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073172976 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07824783 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078979011 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079879643 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073847861 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073087417 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075937885 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074283814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099919427 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076933176 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073150896 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077865404 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077250593 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074115584 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0764643 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076368906 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07901747 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080727345 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074236011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078108722 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075097574 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067723459 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076058667 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072902161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068222691 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079171627 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080598897 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067362357 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072156853 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07602482 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076645548 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067798431 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075840809 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067219766 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073293628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072945608 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07446673 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073069118 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075428339 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067788509 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076514682 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075601694 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075504419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067401377 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080565278 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068202953 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074448472 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068009464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068107169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067921217 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073073227 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067931543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073143831 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076752275 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067135618 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072429801 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08204479 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067437169 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074403851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067232435 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067235843 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079072912 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078091895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067971632 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072731188 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067196862 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073020848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067271507 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067293508 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067611877 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067115221 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071977453 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068129986 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072525886 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072475174 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079812616 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067457262 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072221805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072241109 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067240306 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073709774 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067414003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067293245 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0668732 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081815784 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072139969 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067387232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072670011 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072203289 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075410204 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066692655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075678342 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07262667 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071304828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072936391 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066438632 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077444126 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072061382 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071422634 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066277138 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066539565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065899065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066536929 seconds)
done (took 12.812561944 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073058802 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120533692 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09545572 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096650677 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085301507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069349311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076924778 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094718748 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070112928 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099685294 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091165196 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090879241 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112550886 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067882799 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068768697 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06965509 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070081938 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080977867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097180871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09152254 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108941225 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06826795 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088785788 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089899975 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086420533 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093409753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069797833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069590538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071974022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089831861 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094638293 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072140133 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07003375 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093749101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087895495 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083002245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070002375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078344538 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069503557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068991653 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070433862 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.0904239 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078067658 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080231242 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070211357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077038825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070361851 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085711616 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088283581 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078096959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084679041 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093484031 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073052818 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085681514 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068157066 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085711877 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07919491 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069658106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069481483 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074392261 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069391508 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071347122 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080956846 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078937376 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074619575 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0846632 seconds)
  done (took 6.780512302 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087727013 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096518107 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085960209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086706403 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068429222 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069525876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068983072 seconds)
  done (took 2.010577694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069690004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092745174 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092858396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093480477 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083275767 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093882225 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077107247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070361053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098963209 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06901816 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089862464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100593807 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073346862 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081294168 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094739984 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069159064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094221731 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06917482 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070424076 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094417267 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074513037 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097232948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081044021 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069228565 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08228386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069202802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102402527 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077132504 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070783245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070721147 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070541944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096979898 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082009027 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084008334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070275006 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084690562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083154701 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072340104 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080234408 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079106983 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08256331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070621713 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068618919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07110142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072381892 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081232629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068250802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070608768 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070086448 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089198563 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068090597 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081659412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073318153 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075535078 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075150206 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074420871 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077770473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070871482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089236559 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070352771 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086617728 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086352661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083035868 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086196455 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069524799 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082085812 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082842495 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070525559 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071396784 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071041303 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085971469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07291829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071232144 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081715073 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068934123 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094234662 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093968491 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06944171 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083296753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070066472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070734641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08117563 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093887523 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075723043 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070631632 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073678202 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071971955 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072555427 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06839462 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073226443 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070782373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074725573 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070366269 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073403349 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071928708 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086687376 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068349647 seconds)
  done (took 9.057934698 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072042039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070289321 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071954904 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070216515 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069952828 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070326155 seconds)
  done (took 1.8971063 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094308764 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070598844 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082785367 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07042391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106365166 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08619286 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086273416 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080343922 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084352996 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082001606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086419713 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089569618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09070737 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0726251 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08582066 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071230814 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086733382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075177317 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081766969 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073008217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083934457 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072551244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072994181 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089651849 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074075805 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071369764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080121528 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081758264 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081815316 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080722826 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073063761 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074003011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077499399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080081443 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086851707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077766793 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070101 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077642188 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07394462 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074340923 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089045156 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072683797 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072730827 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07723717 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080816399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080522193 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07703801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07955303 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086467178 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077636743 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077095663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071116438 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074368244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076529214 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077761868 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080928693 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077172092 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085912228 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072504705 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077567898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07004805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074357326 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079584349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073792638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078140856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076679297 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077588279 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072295082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072565128 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070206056 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0767388 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069881316 seconds)
  done (took 7.106965532 seconds)
done (took 28.314313879 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.521976237 seconds)
  done (took 1.939004974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629234698 seconds)
  done (took 2.079611389 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.518179571 seconds)
  done (took 7.962525287 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402064074 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474453413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.762458155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139622648 seconds)
  done (took 3.271245584 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718929638 seconds)
  done (took 2.177549422 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243605227 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231726074 seconds)
  done (took 1.939787724 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355867936 seconds)
  done (took 1.80379188 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092803386 seconds)
  done (took 2.544541059 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242772656 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165434825 seconds)
  done (took 1.862333137 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458672625 seconds)
  done (took 1.911336008 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.267630683 seconds)
  done (took 5.722718824 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231240636 seconds)
  done (took 1.721186166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240356326 seconds)
  done (took 1.69362857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763420805 seconds)
  done (took 3.21679713 seconds)
done (took 41.303893795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086793545 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089291185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088912172 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085216945 seconds)
  done (took 1.784427548 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077903298 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073551096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077651083 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073187912 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077396471 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073365337 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07488594 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076304398 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07309046 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073455098 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073259441 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07379539 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076138007 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074977388 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07202524 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076383992 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077142166 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073718356 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077181056 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073332059 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071557061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076717415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07620661 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07281491 seconds)
  done (took 3.251004913 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082178228 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075680991 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078229268 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074434969 seconds)
  done (took 1.775858083 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07970057 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091584078 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08945955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079834123 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091902652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086990438 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069909864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06968439 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071123908 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079162216 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068497298 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095854215 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089006925 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079505807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081517003 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066182581 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068529236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087955298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080223786 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079947326 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070755047 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07975905 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068997154 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090151697 seconds)
  done (took 3.375720433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084503693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068799981 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084255848 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094325307 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096644667 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069012508 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083275492 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096268184 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139635851 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068904569 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074591399 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069104599 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107650592 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068741385 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083894448 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112167065 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116732548 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072790088 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101842341 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06886721 seconds)
  done (took 3.236831721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086991303 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074750259 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073040656 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068369295 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078918842 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075833358 seconds)
  done (took 1.930236947 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071757725 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07101706 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069944632 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069421018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074395614 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070099293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069250419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070294446 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070400351 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069817898 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06941696 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068736533 seconds)
  done (took 2.310465954 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198268651 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071729837 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071850328 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069069438 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072734191 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069239603 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085218541 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070283485 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097228474 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069254608 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069730915 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071756713 seconds)
  done (took 2.484215024 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195753035 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076706044 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225610647 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147862056 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105785378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112838903 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114847577 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111378428 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137227145 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10051357 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157323526 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162553885 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106872547 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132683552 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091153316 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123829071 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147632786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159246443 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102494387 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157725416 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138551883 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125533783 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145027472 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100158649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104687243 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116067697 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07400306 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080200065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162158581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125911155 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138790032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108066942 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093113495 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16801466 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16541596 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134951426 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14564555 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084962183 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121434487 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132764133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196306208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089571363 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152179238 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105368781 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080196316 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126012361 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111981729 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116957493 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102415976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088603338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281352429 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177249385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131080305 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086918432 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120532939 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108620254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112734907 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117303346 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17318583 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15356078 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12463372 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072027689 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110420202 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146410317 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129655661 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107963821 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121368993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093144138 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127439644 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152497508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12161831 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139642748 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115796665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087761085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118536337 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135140942 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123880586 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165820055 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121565505 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073727405 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118610639 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099054087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080327763 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145191948 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076465881 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16798023 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098391808 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124286015 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128899888 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10817458 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107683543 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153501682 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13770621 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104190612 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086305185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10212327 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117775309 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14016099 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087001913 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106195464 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112015986 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079040596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127627214 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074992948 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117380548 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09517204 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115793969 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121966599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078759843 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117927844 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251796712 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103117865 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126113666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152833742 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088773903 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081502006 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159808703 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11923576 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103004582 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138461157 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153389846 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121107924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097983352 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141142667 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167094777 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091146581 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156182333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102379934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084222891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105591248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120401039 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109769215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122196146 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081274232 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11862218 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157486433 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075164484 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09698719 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129911607 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081850107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080873197 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104206819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103688062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097042473 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101322446 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103878429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133706019 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12076722 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105620559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122376367 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097860974 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160355614 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088137531 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105297852 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104205817 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073073723 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129449236 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150372338 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08015659 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154203407 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119278672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113970903 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118501922 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083098002 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132908261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079603382 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072979628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134657034 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111435725 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106880333 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142784861 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262128629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122510052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119149676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128983767 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12695948 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125859794 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106600861 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089839676 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113365544 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126827794 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073414308 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091669684 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082395353 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102358665 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094094314 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084223897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134935796 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120063415 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110363544 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113326506 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096299884 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144484458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0792945 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121319294 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120087586 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095378052 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14945969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147014195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129927216 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101285522 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132941803 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074310063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075578658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089937351 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121007092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084895814 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084128966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112575021 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145062648 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123035091 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13282144 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121947271 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115052036 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15181023 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073628673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118782561 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13977081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118643389 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104048345 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092151938 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09799019 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139315682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10355478 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1732073 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111935707 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120288133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150590554 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100734823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079075928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10270533 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126465085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099347239 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.290475961 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100115386 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087696143 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107444877 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07930873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099144441 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123340218 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11599049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135569594 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110726199 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127693359 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078398482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110592448 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120898787 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119068798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084450306 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116192282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160048497 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096599619 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114077091 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144493634 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07942198 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138043323 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166110998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139258785 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085526578 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104498217 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120334248 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12414427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11606504 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134946843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104329719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133695266 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110985914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085896113 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087015586 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096128018 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102996822 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.113144672 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103918352 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113714075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096736193 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126477733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10272448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10978686 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116423422 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10041872 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097429987 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096389391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167928173 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116125083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16168601 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099074162 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137398161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152990831 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075452792 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07942859 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080083234 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132245845 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084904603 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125008329 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109529498 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267266724 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122267636 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134895707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097173639 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072719168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109389402 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130439599 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121591327 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096458819 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103482304 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152994563 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118248037 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079649571 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111718085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1154539 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103970611 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167971806 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082714522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108844716 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077540556 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080867932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123437064 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145802865 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08363185 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104009098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11887424 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110757488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123847351 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098189601 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111414502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130109549 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14305612 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124091603 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090778682 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110032044 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12580459 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148919791 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103914286 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100854924 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167657025 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148101573 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153735152 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088481739 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115872882 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113101364 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109124582 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133813806 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084924706 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155107893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082559913 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130105442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099862642 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089598942 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124892292 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111542005 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087716737 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138063389 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112855217 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082004759 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079107129 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261162722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118465838 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10340265 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076256032 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135325327 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074459906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131361393 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163572114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080530331 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104482512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095780524 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082817309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103393542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101396178 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086133858 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099744184 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16408718 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088318017 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142111017 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130149022 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109223091 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132918673 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103799625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643321629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080566524 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146943862 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114535502 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170842677 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098907481 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116944124 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109801287 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118943118 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13792141 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101758681 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180319002 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126906041 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117137478 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079985467 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101881875 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103195871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089621346 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106031867 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112642102 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112248225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095332271 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116168611 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119835215 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083062073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097077686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14945877 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114363118 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138017103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133630075 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084732528 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115384939 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130721686 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080126589 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115314511 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142783961 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256253329 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101655438 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084893564 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101625887 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167706744 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07392172 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151991603 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118484599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109973402 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115155989 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108911499 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127212088 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103091928 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11857957 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093722914 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107846524 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149501307 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084332706 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079849331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104673153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109553452 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098266674 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097533087 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099407832 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146504019 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072833392 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098102692 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113815574 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140152308 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164831713 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105993938 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084279236 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117620951 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117408216 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113103676 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119298548 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081882206 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081685874 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082517906 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101125258 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124803317 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112704419 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118182351 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107969518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1548467 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084596105 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226651655 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096658251 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104639292 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090373653 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08173253 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096619055 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0968572 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103833021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110909557 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167516818 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095880713 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090761489 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093498774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075150884 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083394412 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122241793 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107824668 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114017086 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102826167 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082258793 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101381955 seconds)
  done (took 58.128471164 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10952737 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081073318 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102711582 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14490516 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121990193 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199769706 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151139885 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189055958 seconds)
  done (took 2.705612658 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071280264 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09770365 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107271895 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08517872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069603152 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070718425 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231014128 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084172392 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069435468 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094100679 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080619002 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071742948 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.455756123 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071457407 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070343311 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079967338 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070381473 seconds)
  done (took 3.447143534 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390667416 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612719781 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347702672 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078687589 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.047391529 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089490471 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.251826869 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139034231 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083804446 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540277387 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367397823 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132952087 seconds)
  done (took 18.656132661 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085355652 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078298158 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093455753 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093571258 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080735137 seconds)
  done (took 1.993112233 seconds)
done (took 106.548670222 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084426155 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.444393645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072548477 seconds)
  done (took 2.10980298 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09438201 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092375109 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.09189062 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089888774 seconds)
  done (took 1.947072613 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078420466 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07945971 seconds)
  done (took 1.730294644 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232694654 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179915166 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09952862 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086011586 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08329182 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083891048 seconds)
  done (took 1.826084236 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076485459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075431251 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076529015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075901645 seconds)
  done (took 1.871416141 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070948623 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068857149 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071698245 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074403 seconds)
  done (took 1.85279494 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087690336 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087736194 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081942124 seconds)
  done (took 1.825646874 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104958686 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093556054 seconds)
  done (took 1.769027219 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084552774 seconds)
  done (took 1.654314541 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092880154 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103065306 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136774021 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118990075 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14291348 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119276498 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087477735 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088576889 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08195202 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089196886 seconds)
  done (took 2.629608334 seconds)
done (took 21.368632952 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082746509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371527994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363184776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095761142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673301205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360417273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974119086 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096764971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145128766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070982878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088440855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651153786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964919136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32066289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948472181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328448029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652046605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072090291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071751994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071875271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958050997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071708998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071595289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071636985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651019426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37636464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071975153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32743789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072260726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074315811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360086858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073095739 seconds)
  done (took 16.127313025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074092808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125480888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076079832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088369815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074112472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073387266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07512969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072360918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124235827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071701708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089512446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071546085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074941856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072187594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091569755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071891777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072796215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072898852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072782321 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072627864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092689982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07247206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072666215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073008944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072950221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086027527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076132419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072550166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073325325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074846905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075661493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073387363 seconds)
  done (took 4.119020615 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120228534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130143922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077391733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110717101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116005581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074301922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151498128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097660839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13179573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071922318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09008133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072023823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106674366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074020266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093084083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073255191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07359065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073249783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073099233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073195536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093037939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072324222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072765291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073270718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072828123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087100894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073025413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07256213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073000238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074828243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076257607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073489968 seconds)
  done (took 4.38262958 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073395499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075626427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083123887 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083758059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070018955 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072333365 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073720449 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07008609 seconds)
  done (took 2.191025386 seconds)
done (took 28.390642263 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081548256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070558752 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073871297 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090096006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076690436 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081751105 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067740925 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077477957 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074742694 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074673996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07649931 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069467464 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072866694 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068463616 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075297022 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069331929 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08452787 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073472699 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083711351 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083827757 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07239951 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075946928 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077917791 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083622628 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084161578 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083399177 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079198165 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075585512 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071099842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073241549 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073576388 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083878214 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08451873 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083732118 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069881398 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070064664 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074428181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071897808 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084767864 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079981256 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071994672 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079823078 seconds)
  done (took 4.784804161 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08903851 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09281705 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08663548 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082624402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09462946 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085779625 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090272327 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081694248 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080753031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089702323 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076759953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084506244 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081693734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075943968 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080858737 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077897684 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082590255 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077783624 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080025378 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081125467 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09088538 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076942686 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091010609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082746733 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078314678 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084618008 seconds)
  done (took 3.774981341 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076317846 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088665769 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095938032 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147076685 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114621227 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082727986 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084262635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095096673 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099654957 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071516248 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075580957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095690719 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095209085 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077206307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071037648 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087171248 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087073286 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072420894 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078339813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099403688 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091792136 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088505508 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097191354 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087400784 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070377769 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073427406 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076161547 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087285485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073734631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082910007 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074245828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07774654 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071726188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082020505 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073420153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070521375 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095883183 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082201312 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08322339 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072063276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080705931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071692232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096786128 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130840221 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070111203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074791973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074175153 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081575086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06949288 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098595908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082728742 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069865735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071029836 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069466707 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070055245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073765956 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072168005 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073299715 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080559908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077514769 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092763032 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075700238 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088478027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070204325 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081159745 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0702247 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071958831 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069396024 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099262327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07222438 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115720981 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071610949 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068960338 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081567201 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081216679 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077004614 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070646461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088701881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082167848 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074714276 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078897999 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074167324 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074594755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100731122 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070351403 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069832801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069214071 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074657002 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073853994 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071319916 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08310934 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070199111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074552459 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089472517 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070801181 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071787807 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074412601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073803194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070364069 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081807396 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074862539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07207778 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081232573 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071134211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074114364 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084013889 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078013853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069545968 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073398159 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074914139 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072790144 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07214571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074429182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072470176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077577282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076816302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076282772 seconds)
  done (took 10.993385814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169340801 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160608739 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073788671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151603541 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079533209 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083065933 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154692598 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098697028 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070412399 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072306901 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071383153 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113130603 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10902353 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122578813 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08413926 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071776403 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093866055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118316965 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157048558 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151538502 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094173774 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079258665 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074016478 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073129144 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073031088 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081189431 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090503736 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080678802 seconds)
  done (took 4.486812254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081248503 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106350633 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075072091 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09377948 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091352065 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07148755 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073381965 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072809597 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087429509 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080509638 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071103987 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076798922 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075355525 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074806809 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072148963 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077818926 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078453831 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070541869 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075114062 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076926476 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081121654 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096574201 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074849483 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071363306 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073686269 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071255709 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079803972 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084169249 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071299493 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108340183 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069070007 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076334419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088918513 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07217407 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070973154 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071553931 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071593923 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071105258 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072892818 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06981642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069894308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075288204 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069921688 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079753964 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083915924 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073134125 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073576226 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074208922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074504631 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069245347 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074026224 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073972193 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074292013 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078455004 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075684595 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074398118 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072040008 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099961542 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077168542 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070745391 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070125766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070181997 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074010537 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081041978 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087356638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074259702 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069706414 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071459161 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084697057 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084164704 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070718101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075949233 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068860604 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073180218 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07402992 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073809592 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072236543 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0700454 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074534208 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071422568 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072137218 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070931246 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070154109 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074619216 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069663299 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069815282 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071299468 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073030442 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080040476 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070726814 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075416554 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071858079 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070048993 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074169135 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077430079 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074811147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082371108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082598044 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071657813 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069697381 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085792527 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073842749 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070881561 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07744787 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076059495 seconds)
  done (took 9.620655321 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095790573 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071385359 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087908159 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094917278 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081145083 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078000965 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081460421 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070991373 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087962004 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075943116 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079076298 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070091132 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082476242 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08116805 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071656472 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081611287 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074275615 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089116198 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086370749 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0698962 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080535573 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083825995 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083506976 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085360651 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08501552 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086704085 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083140791 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081185354 seconds)
  done (took 3.925007966 seconds)
done (took 39.159269451 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.668000374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918490352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.660472398 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.891625604 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.710306616 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.867180291 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.743631195 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.652592737 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.917663631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.704631676 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.970369054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.892645459 seconds)
done (took 64.331600512 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.683088195 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.813214522 seconds)
    (2/2) benchmarking "String"...
    done (took 1.916470728 seconds)
  done (took 5.323316607 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.941696864 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.325904826 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.890700457 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.654342779 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.656309244 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.904348429 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.438020195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.101269293 seconds)
  done (took 29.563525755 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.878694853 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.874037085 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.364372158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.405438482 seconds)
  done (took 15.163140356 seconds)
done (took 61.361104775 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.670777385 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.701206999 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701259489 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.649506281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.744799259 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.65977083 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.734081919 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.669334205 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.648618721 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.663397784 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.652257458 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.132618324 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.662288385 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.783800202 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.651186711 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.65306546 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.71794064 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.101306903 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.807314821 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.672177186 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.656528924 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.704829477 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.65905249 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.661522071 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.679701942 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.65101311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.047903758 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.651234083 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.484353942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.657091502 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.710232765 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.024843821 seconds)
  done (took 199.854915891 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.655713849 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.766974598 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.844102989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.680920754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.281482317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.847337663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.759768561 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.307111264 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.656182169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.668627934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.910954827 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.654848871 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.925908721 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.603031007 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.691226612 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.702890931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.781547461 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.921236075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.692968168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.805115912 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.669969442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.857996272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.81054476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.873452411 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700359216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.676797856 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.675630301 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.678358329 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.84034422 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.772192197 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.666624604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.70031234 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858682267 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.528950841 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.672379812 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.686088695 seconds)
  done (took 166.420459153 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.848711728 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.661003175 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.658321903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664225554 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.666190578 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.660503697 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.785444127 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777273926 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.325199891 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.22355535 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.662425398 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710283863 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.661736283 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438105425 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.654685516 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727030378 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.671583835 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.656424239 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.6764403 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.686174316 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.656451772 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66105754 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78685776 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.669438936 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.65870597 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669848654 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.660279592 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.665495557 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.049460269 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.655741202 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.838029946 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.661740915 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.666098962 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.900726071 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.658489139 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660690311 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.491022526 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.33406723 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752587475 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.66610032 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670962746 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.66279802 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.883426589 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.66186816 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.663401929 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.6641727 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.663493649 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782146788 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.664917379 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794451035 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.658217162 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142187855 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.659694838 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.664422792 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.198292143 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.238285571 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.663934604 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.663091229 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.665321488 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.662026828 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663634494 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.669350531 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.120967272 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.725405358 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.657945955 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.657310165 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.661400351 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.657317433 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.830232178 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.657791726 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.962116855 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.670495543 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.883569756 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775476324 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658038744 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721828102 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746595611 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.654629641 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.658081097 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.657477057 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.657773823 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.738900922 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.653783535 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.740157416 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.663810571 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.659776312 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712264202 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.729583817 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.654610011 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47418232 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.658341066 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.657329836 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896579902 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719249335 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.65302537 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.658770557 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.658314451 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.74187806 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775247897 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.369367232 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.658211178 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.031147492 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.732842319 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.654632281 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773950802 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.659856441 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737778296 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.660871584 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.660853738 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.693082432 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.659870662 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.67305501 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.65605956 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.658076132 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.031176751 seconds)
  done (took 387.774653727 seconds)
done (took 757.54769889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.279740333 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.236296119 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.333538485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.258653975 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.237231593 seconds)
  done (took 12.935788231 seconds)
done (took 14.528973226 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.736227246 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.742205074 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.677901135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.740583662 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.674475026 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.739117 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.723914736 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.681703868 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.708261044 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.681858152 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.710327106 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.681269372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.666426787 seconds)
  done (took 23.754598503 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.887683452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.088598313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723617898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.886510415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.696235353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.884797086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.810376761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80505446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797353311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.668329184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.667217209 seconds)
  done (took 21.507569015 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.891435971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.889113185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727481248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.889271195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.70124324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.893690379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.810447564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808013053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.802944379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.670344774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.667573557 seconds)
  done (took 21.343207463 seconds)
done (took 68.197860753 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.663651424 seconds)
  done (took 3.255557178 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.681639393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.838642358 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.664197488 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.664398627 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.663475684 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.663360277 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.665727162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.669204669 seconds)
  done (took 15.103824779 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.661981004 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.661808375 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.662158014 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.661044095 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.663084175 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.661664838 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.661917647 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.661357553 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.661219054 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.662260075 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.662566725 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.661309924 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.660235803 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.661143115 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.66082418 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.660059419 seconds)
  done (took 28.176824295 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.662516642 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.661216744 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.661635793 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.660277 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.661630705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.666944904 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.661510403 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.660210701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.661268919 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.660818465 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.66072231 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.662282615 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.661100199 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.660133897 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.660212587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.661042356 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.660339913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.662019116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.665378171 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.661153147 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.661746873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.660949682 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.661052595 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.662975228 seconds)
  done (took 41.473514896 seconds)
done (took 89.602015609 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.502687336 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.433359534 seconds)
  done (took 9.52676375 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.663621576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.659840657 seconds)
  done (took 4.995076756 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.658908338 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.659520086 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.656449472 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.656890583 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.655656577 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.655986564 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.656519896 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.658670358 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.654551853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.655818816 seconds)
  done (took 18.158405577 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.655427765 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.655369378 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.657460008 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.65414028 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.653671104 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.653530246 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.654040705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.65342336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.655307121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.653260549 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.654057417 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.654407846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.654326456 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.654377897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.65708612 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.6548915 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.654333504 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.653825044 seconds)
  done (took 31.369596945 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.654564344 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.654743431 seconds)
  done (took 4.894988225 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.653565458 seconds)
    (2/7) benchmarking "second"...
    done (took 1.654423464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.655816302 seconds)
    (4/7) benchmarking "year"...
    done (took 1.654519841 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.655635975 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.655205616 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.653982299 seconds)
  done (took 13.167874289 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.656970596 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.816259946 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882822905 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.301700139 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.655285442 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.657606401 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.570272347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.658789462 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.658380319 seconds)
  done (took 18.443598363 seconds)
done (took 102.146600261 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.559676107 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.655985609 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.935528636 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.719474171 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.720875476 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.988881332 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.679537617 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.921693732 seconds)
done (took 41.767713983 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.684605402 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.419533981 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.509734281 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.680779554 seconds)
  done (took 15.19729532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.661356401 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.963919491 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.680038024 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.490711648 seconds)
  done (took 21.445693303 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.019734956 seconds)
    (2/2) benchmarking "read"...
    done (took 2.011219186 seconds)
  done (took 5.626999291 seconds)
done (took 50.543899709 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.656756323 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.659335815 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.658552234 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.657576882 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.66010729 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.659229642 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.658417667 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.659120722 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.657236289 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.6574955 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.656188837 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.656914881 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.65669619 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.657393674 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657112603 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.656062746 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65598378 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655833995 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.656303696 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656793711 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.655999717 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657524179 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.655010647 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.655836378 seconds)
  done (took 41.35994063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.658050872 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.655392385 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.655350786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.656116361 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.656395603 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.655135517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.656817739 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.656926419 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.655185824 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.656029357 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.657004912 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.65694399 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.657474067 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.655688174 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.655492114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.656030727 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.658225177 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65695595 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.659672997 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.657115575 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.656336471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657008969 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.657662649 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.655999364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.658407586 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.657709959 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.656802187 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.656627449 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.658103238 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.654560219 seconds)
  done (took 51.289590022 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.659112904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.657444025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.657444103 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.6583081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.657530405 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.659979578 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.659131398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.657316206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.65896465 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.658660988 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.657676519 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.658806338 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.656827657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.656654075 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.658716505 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.658097137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.657745176 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.659410962 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.656242237 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.659693836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.658270081 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.657061006 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.657435818 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.662966297 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.656682096 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.656886745 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.656161708 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.659167261 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.658952391 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.664330342 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.656314181 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.657893064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.658519954 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.658035478 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.659364267 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.661901385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.654350697 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.657432503 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.656436565 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.657419381 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.657545673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.660202658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.654890182 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.655857931 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.655756309 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.654985898 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.654785472 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.656223007 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.65421073 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.654564961 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.65436654 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.655123282 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.654794217 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.654106291 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.656452284 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.65367305 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.65232272 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.655296614 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.655472838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.653307318 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.65338994 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.650725218 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.651067867 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.652685078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.65077768 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.65110204 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.655866601 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.651922214 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.651273842 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.651190522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.65077825 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.65179758 seconds)
  done (took 120.848181379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.647325664 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.649530138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.648786895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.648769351 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.649587863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.648907171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.649723394 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648604824 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64848909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.648122839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.647505464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.647667767 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648734649 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.649161601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.648403677 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.649888846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.650117067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.650076395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.648540009 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.651259549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.648091377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.649322843 seconds)
  done (took 37.861740283 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.649100334 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.648166833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.649053565 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.649230099 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.649037774 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.649210577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.64892188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.648555601 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648744704 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.647373179 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.649710042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.648492816 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.65084109 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648304519 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.648987361 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.648793362 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.648223492 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.649000397 seconds)
  done (took 31.260728014 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.649253089 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.647620998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.648233448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.648512666 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.648090838 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.651510536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.649829068 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.649633699 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.649318869 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.650133322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.648127206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.650004856 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.648037417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64809479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.648134624 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.648315967 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.649487149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.651127949 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.647694414 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.647851546 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.648624822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.649238009 seconds)
  done (took 37.863636432 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.648370673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.649484987 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.648516132 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.649356436 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.649992117 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.648987999 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.649002699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.652555593 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.64841547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.647996874 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.64797212 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.647515196 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.648048954 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.651017094 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.647460448 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.648366992 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.647269804 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.649042207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.64852596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.649165939 seconds)
  done (took 34.559327203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.650396386 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6499304 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.65205823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.652862885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.654308045 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.650695247 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.650820163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.651585336 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.650121599 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.652821862 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.655066934 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.649746305 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.651173447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.649455889 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.650071183 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.651016634 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.651879396 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.649080073 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.648734516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.64872931 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.651034469 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.649504683 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.651482423 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.649842266 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.649541495 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.649878239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.65098961 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.650499191 seconds)
  done (took 47.804317961 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.64678864 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.647995097 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.646625297 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.647648789 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.646973598 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.649379215 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.647271029 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.647004522 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.645990537 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.646503271 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.646597738 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.647318693 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.646997363 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.646160214 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.647269431 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.646840792 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.647351433 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.649475536 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.646566012 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.647714891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.646707141 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646896582 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.647369916 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.652059027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648543763 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.647562265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.647670857 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.648152052 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.648474014 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.651678974 seconds)
  done (took 51.012800047 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.667828263 seconds)
    (2/2) benchmarking "in"...
    done (took 1.666315689 seconds)
  done (took 4.913235871 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.646837423 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.647564902 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.648618362 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.646838228 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.646032145 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.645829895 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.647268934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.645969895 seconds)
  done (took 14.754762369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.648664455 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.645729339 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.646384503 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.646945593 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.647908365 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.650043153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.655355385 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.648244842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.649105374 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.649701681 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.655607635 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.658828612 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.650507975 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.648131646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.649119118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.651021743 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.64792278 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.648847889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.648851683 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.647416546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.64757397 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.653318483 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.649991142 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.65062314 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.650251738 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.658110273 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.653412891 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.647672512 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.649355959 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.653337061 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.649558117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.649040724 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.647909894 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.649444583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.647804001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.650174012 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.65696212 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.650331916 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.653804547 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.64839311 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.649260554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.653156546 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.650074482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.650634955 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.650072984 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.649469062 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.648206422 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.652613349 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.648130775 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.650364961 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.653114066 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.648171615 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.647626954 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.655844299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.650906314 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.655160277 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.64877888 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.652605775 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.656169098 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.66012745 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.658683129 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.655245996 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.650392107 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.647857386 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.65716038 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.673410335 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.655499132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.64977151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.648773973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.648276093 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.655196362 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.663196781 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.658704126 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.649256987 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.650842723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.648083534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.650888909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.652362297 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.656987134 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.65261356 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.650190519 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.649486672 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.65721203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.672435212 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.649345121 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.648962706 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.649176092 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.648963737 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.650375956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.659553228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.652017411 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.648996062 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.649951354 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.652036487 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.651153219 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.650012943 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.649567986 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.652506981 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.649049615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.650430662 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.649644544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.653636221 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.663296859 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.650646459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.651328836 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.656775371 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.651693675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.652182902 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.657804344 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.649989634 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.651019625 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.651862204 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.65722173 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.65063151 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.655025811 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.657968793 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.651080079 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.65279326 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.651050929 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.650269162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.661202593 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.675990216 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.651612541 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.651296609 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.6547536 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.661507431 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.65112753 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.655634933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.650204811 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.648572496 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.650563573 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.654665676 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.654667964 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.656293196 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.653308524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.65588442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.652754872 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.651725013 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.656512791 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.653388342 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.653881513 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.65414031 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.655846733 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.654440194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.653612135 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.656186291 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.659497556 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.652379034 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.654188796 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.652879262 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.651929184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.6515346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.653502553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.652367736 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.654539432 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.653425738 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.655105025 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.653218742 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.653766319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.652080111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.652693944 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.652224827 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.659849013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.653822293 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.659234241 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.652864817 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.652415315 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.65257942 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.656457762 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.653822724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.653130016 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.652992794 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.65685996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.661097804 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.656056691 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.652769846 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.657690402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.653659962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.653637418 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.652761674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.658259322 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.661777837 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.654119809 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.660341623 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.65435095 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.653750515 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.654750103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.655195993 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.654010328 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.654339867 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.657189303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.661040348 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.665703112 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.662374726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.654186789 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.656145016 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.655097524 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.656868068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.661788361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.654734101 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.653612865 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.652925332 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.655303569 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.653200172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.663796618 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.6549368 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.655220903 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.6543082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.655011561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.652816152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.658839627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.656307991 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.656891096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.655396079 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.654345921 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.654157593 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.657182545 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.654881213 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.655963761 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.655771849 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.653232637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.656024268 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.663793941 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.654735154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.657663916 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.657375563 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.656651223 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.656109634 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.654620664 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.658483719 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.658349949 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.661698224 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.657327456 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.656830286 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.664247761 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.657413595 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.656956658 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.659346566 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.655073317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.65455136 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.660467963 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.664203126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.654921297 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.655994538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.656324322 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.657200666 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.656911607 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.665064192 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.656935197 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.656797013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.656454048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.658664334 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.655016569 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.663166781 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.657230732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.658345298 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.659695505 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.656401924 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.657532063 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.66368883 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.656456356 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.657292766 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.656846868 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.659890879 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.664135615 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.666830533 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.658276564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.658942325 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.657640162 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.659954239 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.658979139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.660022781 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.657535795 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.668421439 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.664260319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.664967974 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.661240634 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.659312618 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664580539 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.659041279 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.662186986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.660707731 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.659254334 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.661369085 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.660389091 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.657885103 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.661121941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.657651624 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.661303185 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.662304039 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.660059655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.65881594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.6593565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.658150353 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.658433405 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.660589617 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.658845899 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.65811909 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.66178665 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.659175852 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.659120769 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.662792448 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.666030962 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.661231484 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.660353339 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.659302364 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.660281121 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.661134905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.659952567 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.658932034 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.661762287 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.664880043 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.66264895 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.672696239 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.661432639 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.668217928 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.659890594 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.661254049 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.666947763 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.659828822 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.656522478 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.661797267 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.659644392 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.667549687 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.658481602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.663012062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.662378334 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.659760954 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.659113407 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.658853847 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.659634634 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.66123052 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.659224712 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.668639901 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.661581178 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.664727255 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.663245335 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.661680609 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.662012002 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.661345826 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.660639932 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.665796079 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.660560313 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.665753341 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.662240954 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.660892341 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.65857542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.660694434 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.660332273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.66120655 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.660843034 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.66826709 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.662121825 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.664225552 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.660091107 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.670676637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.661285362 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.66951859 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.661509566 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.661945442 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.661095753 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.662126217 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.662467645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.661591057 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.663741993 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.659861627 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.662632075 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.666347412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.661818816 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.664335265 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.661314187 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.661949068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.663544175 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.671133848 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.682802691 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.66279663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.664845532 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.660882507 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.663497054 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.665693901 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.661271613 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.662640845 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.665344532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.672376663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.668509702 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.664998415 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.661497928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.664110646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.662132306 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.662758257 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.662349693 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.664238642 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.661596067 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.664213266 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.661547369 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.666489067 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.661590162 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.665347932 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.66473457 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.664082302 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.671764958 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.663425157 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.665526052 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.662934631 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.662946845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.665537576 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.66498868 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.662505983 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.665269373 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.664952204 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.66608192 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.668722323 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.669752692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.666779277 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.664874341 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.666465322 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.664839829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.665411354 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.663427738 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.664802537 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.663792294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.66878424 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.663215955 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.665415009 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.663852133 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.663215055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.666166805 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.66768957 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.667064081 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.672345121 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.665539974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.664845505 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.662712216 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.666498796 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.665063715 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.666084458 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.672605339 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.666564199 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.672873583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.675153057 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.667094548 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.666037361 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.667413932 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.672971698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.662558383 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.669180217 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.665268507 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.668736506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.666442894 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.668739241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.664245847 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.674131838 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.667827551 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.664598454 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.672885339 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.667529414 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.665325861 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.667879115 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.669729856 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.665736977 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.664264806 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.664541892 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.665135187 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.676567025 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.669327945 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.665413576 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.669200237 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.666043564 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.667308354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.669405875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.666304371 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.669599521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.665063614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.667868586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.666104192 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.666289054 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.663849108 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.666295672 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.6665051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.669104168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.673292391 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.66660658 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.669272153 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.668027358 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.666625091 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.667406994 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.665580766 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.665974329 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.664954337 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.668443251 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.666643639 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.669938903 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.66967514 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.66874719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.66707876 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.669588593 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.667553459 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.670897256 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.676159555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.675658392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.666868904 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.668113968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.668787216 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.671182587 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.667770857 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.668457154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.669655021 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.670622322 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.667289946 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.66662616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.668350716 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.672207583 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.684081806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.667324882 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.666776766 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.668063154 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.672440231 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.668183348 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.668651311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.668057444 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.670660404 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.671544884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.672507244 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.666601047 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.676356098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.669510688 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.669599368 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.671756047 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.671721077 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.67666968 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.671940208 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.668812946 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.666521001 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.67197522 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.685336445 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.669631562 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.676978038 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.697180842 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.669458171 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.670287649 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.668360237 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.669897201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.668647046 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.671589052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.669316956 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.668487089 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.668763623 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.670091183 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.669903514 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.67541186 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.672235226 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.668892664 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.668682228 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.67490554 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.671192799 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.668157075 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.669023183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.669603849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.670417994 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.668124742 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.671029513 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.671681767 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.68068061 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.681033259 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.669978859 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.67132274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.66900348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.672898957 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.673191878 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.676738834 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.676134743 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.671242285 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.669282563 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.673413715 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.66884047 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.669376446 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.671254817 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.673071736 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.670672229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.669911723 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.682052134 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.678823338 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.67612256 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.673025748 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.67251531 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.670664608 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.674613401 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.670507748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.671142214 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.675976023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.672471768 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.675232456 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.671609841 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.668480453 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.676725678 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.677561002 seconds)
  done (took 991.629590188 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.670338106 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.669375683 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.669870855 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.67121294 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.671248044 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.668853656 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.667743907 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.667346475 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.671612382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.669995653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.673899387 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.669339732 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.669432695 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.67091554 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.670074418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.668710353 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.671811937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.670810566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.670022778 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.670543964 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.671809711 seconds)
  done (took 36.676875378 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.670970989 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.668748988 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.672084291 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.669989233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.670808386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.670131262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.673421298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66793652 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.671563572 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671734824 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.673123661 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671516897 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.676832682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.673889819 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673989671 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.672744245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.672624705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.670911809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.672270303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.669605339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.670483343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.669138431 seconds)
  done (took 38.376450888 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.671346267 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.67314731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.672030426 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.674328957 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.673617475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.671067655 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.6735245 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.672940095 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.672103549 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.674837531 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.673322671 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.675241971 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.679007626 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.684076598 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.676173847 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.674110167 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.816564958 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.672732222 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.671619885 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.675040976 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.673339603 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.679271268 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.668993238 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.673190771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.674806379 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.676220989 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.673715218 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.673694649 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.671441666 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.673613767 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.678359136 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.676513896 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.674247474 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.675452942 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.671142448 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.674150642 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.678577658 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.675701404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.672967736 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.674251703 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.683582737 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.695714426 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.675221652 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.681011622 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.674966588 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.672945985 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.677663715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.681476046 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.677299748 seconds)
  done (took 83.838924811 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.674711139 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.675519303 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.673270598 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.674979126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.676233063 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.675468757 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.673179453 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.674059524 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.674265659 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.67442671 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.677868072 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.675139824 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.674647422 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.675519586 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.675314415 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.674228649 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.67637154 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.675919442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.674553589 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.675716026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.674121077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.675691569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.678225531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.674374201 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.672221567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.671852293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.672440114 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.67141854 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.675675494 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.673391117 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.670778706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.670509878 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.671924187 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.671997347 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.673335805 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.673372845 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.672004643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.668577769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.674787214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.669744762 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.673392728 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.671038507 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.673352807 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.672131648 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.668950698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.669813853 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.67222303 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.669558624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.668725797 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.667939908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.671635081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.669969827 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.672581754 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.670322572 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.668935821 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.668775827 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.668622344 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.671125967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.671505091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.671708789 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.673558149 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.672432086 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.670182408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.671833825 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.672592825 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.676106214 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.670417397 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.671153029 seconds)
  done (took 115.355096281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.674237959 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.678106102 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.672841092 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674605863 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.673133307 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.673531553 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.671289869 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.671877652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.678732653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.674816916 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.677336438 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.673958513 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.673846259 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.676886127 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.673749213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.671790609 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.67272079 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.676436213 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.671052179 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674226263 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.67514041 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.674426509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.671793644 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.67092034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.675886178 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.672522883 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.673300969 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.673732078 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.672837603 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.675550192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.6744977 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.670853287 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.675668293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.674082207 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.674280546 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.676622907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.673069064 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.678662053 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.677278159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.67440746 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.677582991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.676835787 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.676056668 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.67414408 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.677780178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.677874957 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.67708665 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.674232335 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.67697049 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.676623559 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.674243018 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.675408176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.676297178 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.675925639 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.674841097 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.675672322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.673656884 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.677256604 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.677295736 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.679082224 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.676432388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.675225201 seconds)
  done (took 105.45327752 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677869294 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.675639756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.677304156 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.676611067 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.676197746 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.676840913 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.676410887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.674970776 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.675391723 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.680668875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678917293 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.67660748 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677115454 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675675492 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.675442138 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67847698 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67917799 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.673002638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.676590455 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.674877189 seconds)
  done (took 35.141198299 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.677153951 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.675900461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.676172092 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.677461739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.674011057 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.674557987 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.673989475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675399468 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677716351 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676547971 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.674613234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.674372468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677476074 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.67844481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.678362484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.674876619 seconds)
  done (took 28.428264074 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.677626755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.676448044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.676705048 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.677416951 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.677324957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.676574746 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.674873182 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.67932379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.674680132 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.677265241 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.678078354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.676807926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.679415926 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.680020251 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.67836794 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.675783625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.675649699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.679616372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.675915479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.676482591 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.683785106 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.678131783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.678771775 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.679123284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.679167506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.680332181 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.678682919 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.677181857 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.679131343 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.681001627 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.678589302 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.676534434 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.680793596 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.681356343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.681475857 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.676703753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.678917754 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.679588965 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.680829846 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.680657718 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.679210466 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.681269964 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.67719379 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.680308919 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.681188404 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.67888709 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.679435904 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.680852207 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.681178676 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.681080319 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.678630353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.679683972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.678542666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.680290817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.678027446 seconds)
  done (took 93.941019835 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680387503 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.682656517 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.683136863 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.681862714 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.680734245 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.680427889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.680904782 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.681640859 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680297142 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.680753022 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.681443683 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.684431824 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679848333 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.681978951 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.680968881 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.681436516 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680169551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.682576137 seconds)
  done (took 31.87702869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.681409295 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.681034964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.682541859 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.6831283 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.683076344 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.683126012 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680098549 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.681841632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680439348 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.682900722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685414231 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.681475582 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68329841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.680372633 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.685391072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68319518 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.685730358 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682419289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.681910285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.682146372 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.683119243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.68420207 seconds)
  done (took 38.633043906 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.683705445 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.682743423 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.698594437 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.702260768 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.702582672 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.71423262 seconds)
  done (took 11.802515105 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682954888 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683143873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.685687807 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683062629 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.680067985 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686201325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680464821 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683612753 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684327911 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682677432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.687418068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684084818 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684629981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684940863 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.688046264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685151885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684513182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680267035 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.678838533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683816739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681577951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681738957 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683833628 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683393775 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683293423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683988819 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.680212637 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681456098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68863552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685706735 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684542955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686691373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684204169 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686387046 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686875669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684860755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683770531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685642621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683594014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685177486 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.684776959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684954553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683839521 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68571906 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684078916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685511998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686226302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684917952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685501189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685955543 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686958405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685791934 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687468179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683230947 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683120467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684267666 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68663818 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.687219289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681946275 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685539991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687193004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686444003 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686875398 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685212683 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686081254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68293931 seconds)
  done (took 112.795332635 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685919899 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.684228408 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683445177 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686240714 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686798402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.687917215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685693546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.687073905 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68464761 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687394404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683377674 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685899572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685894796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684178315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.684822668 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.688612179 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685894812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682223948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684007232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685335695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685448734 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683991163 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684678896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.688605386 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684299584 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.68675773 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686935857 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685959736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686960987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684926591 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68624222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685137322 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68663851 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.684812812 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6859626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68579169 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686300553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688903071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686490632 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687000703 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.688259526 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690283739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.6870251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685543054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.688075951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68723863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684444711 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68605832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685973434 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686787706 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687969124 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68718336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691465543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686201285 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.688033769 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685171059 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68867048 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687315442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68740311 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687537639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69132273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686719336 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686339893 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684718007 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686719751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686259336 seconds)
  done (took 112.915410276 seconds)
done (took 2311.984703014 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.735618244 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.702748554 seconds)
  done (took 15.058335271 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.848845147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.80150371 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.687252419 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.706653558 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.684758912 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.712167514 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.712041068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.68405303 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.688365851 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.688687921 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.688520386 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.872774401 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.691249191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.686462769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.688657168 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.781437336 seconds)
  done (took 49.247962111 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.690942809 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.691868101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.700298708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.694218794 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.691236293 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.702552548 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.721956374 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.693896186 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.723530529 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.701856577 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.755136167 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.699695316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.691713565 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.737477633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.701965095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.705945295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.782199256 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.758147158 seconds)
  done (took 32.463090796 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.76325518 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.694332391 seconds)
  done (took 10.080890208 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.695457098 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.72810233 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.742846183 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.711871719 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.699620986 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.7135338 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.699185735 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.699742502 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.684295877 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.707227073 seconds)
  done (took 68.705397862 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.700785357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.695958972 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.698641365 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.690453491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.690593957 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.692979323 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.697352099 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.699506547 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.337892792 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.722001641 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.700492282 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.703614394 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.698655558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.696446722 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.69462077 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.717027829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.806196384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.693927029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.690597499 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.703601749 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.696782221 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.751840545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.708095058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.695240337 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.725667181 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.33737645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.702746962 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.701660703 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.810012616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.693841389 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.697881198 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880769434 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.70137019 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.16186438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.963755709 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.699082757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.703807606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.704856165 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.697200531 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.81507617 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.692842567 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.703254299 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.659571124 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.946584586 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.788015112 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.737518389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.002203208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.708247717 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.698539822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.724759852 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.697155033 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.694724092 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.708510623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.211787678 seconds)
  done (took 123.178978274 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.697118817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.041392401 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862559199 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.696820236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974680474 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900586259 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.696748063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.73646089 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.698189741 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91910792 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.948319934 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799109984 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.700808897 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.693342297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.695996568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.692499525 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.849387041 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.764356007 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.700423939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.695571274 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724733289 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936178716 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.817357948 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.698257639 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.721501602 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.907152153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.819222886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.798322196 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.482855616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.693963982 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.757184461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.6995698 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.694668902 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.693450709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848517413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789771295 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777661345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.69815847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697263433 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.696025581 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.356151677 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.892982335 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.78971373 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.827598488 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94669042 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.89810061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474451642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.699129299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435000247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858934076 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.925057802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.926646805 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.817507976 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.699732116 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.045828535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.699132618 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.696781676 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942856704 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915358438 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.788882366 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703748898 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.698559487 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.693981595 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935718023 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.701643686 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78927355 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702383495 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.693674097 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.793676567 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794315533 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.927209353 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907079085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.725991056 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.041595943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.198263866 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938452913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.76405775 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946981024 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.700752664 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.69550662 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77494782 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.539394593 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.950344294 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.938501475 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944552499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732040431 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417046558 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.701041533 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.924644243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916946554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956631399 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9468596 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.930534174 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.016504229 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.702632941 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.699892623 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.016288348 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.815514796 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.697711468 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.043824842 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928848655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.225320255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.724911185 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002040819 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.82885481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700737055 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.326711214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.7008914 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928290326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.737257126 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.703088 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701768788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.914768109 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.691608692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702732507 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.352727707 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.762934376 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.705868037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932057879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.701965754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969049653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703914451 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93452258 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.118034586 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73045167 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.875775124 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.948050202 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.700963043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938094771 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940954411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.810417551 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.917152147 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.409932796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.703652364 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985771409 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.702465449 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.7039949 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.868563554 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.704545678 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.843248086 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702858316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993667872 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722408732 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932904859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70297787 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954194385 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.730723325 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752095845 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.705435253 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.819832433 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.705467235 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.949417137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.860044211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704551728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.701582795 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.248754997 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.705274161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851593932 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.928898594 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721499024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774848474 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.364856455 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703283162 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786098595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.725969191 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.090328205 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.706014397 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.953492192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.703800631 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.705389092 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.707779285 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.938645119 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.880560076 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.707148817 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700659071 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.60324993 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.703675437 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703084047 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.884698258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.016193556 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703882599 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.904851902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703485355 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.827861802 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.704590871 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.768397175 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.03741524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703090171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.704204854 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.706740032 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.705835342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.706371973 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912806841 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.727033721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.193113628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.839506178 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977485698 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.013990348 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.947705569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.745032643 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.709086418 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956371448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.706981318 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.764446641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.706803077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.728549477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930634497 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707217121 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913145879 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97668792 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.552221457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752789578 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.707638372 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708271636 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.702929155 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.850380344 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790150088 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708250519 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.709500154 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.821121452 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825474079 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.913550736 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.710576017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.789109639 seconds)
  done (took 864.720568674 seconds)
done (took 1165.072508714 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.709476684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.70641048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.706895134 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.709518016 seconds)
  done (took 28.471673502 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.719152279 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.711247412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.710346936 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.712064826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.710160829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.710422858 seconds)
  done (took 11.913126615 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.764891922 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.705795658 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.710821032 seconds)
  done (took 20.817439559 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.781298144 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.089294875 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.837578377 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.116174139 seconds)
  done (took 9.462788533 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.714282071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.713679163 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.717273321 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.711060253 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.717183789 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.719884985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.712626699 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.710117213 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.721159649 seconds)
  done (took 17.080108045 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.743012913 seconds)
done (took 93.128501245 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.987556293 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.72404347 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.821017241 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.922512038 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.822530771 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.906005434 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.001492344 seconds)
    (8/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.947491752 seconds)
    (9/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.82267235 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.737593678 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.516664198 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.10196864 seconds)
    (13/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.170010753 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.985084927 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.725281084 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.290244383 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.888213993 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.722793476 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.474170861 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.764544237 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.825257067 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.72351416 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.038967477 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.724227391 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.608963784 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.038044993 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.895074338 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.859436927 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.967785037 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.811284218 seconds)
    (31/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.823994666 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.751593954 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.913699164 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.862801646 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.759223283 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.860245352 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.751537444 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.724026156 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.633324153 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.114062115 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.914938271 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.725065161 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.332922739 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.832058321 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.410073315 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.702064769 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.697029221 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.049984773 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.726054684 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.124849397 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.725908458 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.81569696 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.745942835 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 1.942210051 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.799917673 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.80267448 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.72692597 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.334461587 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.505094101 seconds)
    (60/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.740117036 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.728576247 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.407250255 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.8387365 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.724985852 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.157153494 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.976541942 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.817341796 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.726644307 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.073975376 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.726206185 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.787249417 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.965055565 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.038758873 seconds)
    (74/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.880028276 seconds)
    (75/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.742827554 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.789982972 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.506884396 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.728170528 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.863349718 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.725646197 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.904472674 seconds)
    (82/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.825565093 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.726371421 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786147359 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.73592137 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.819114435 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.443122871 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.740422075 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.832424172 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.753956367 seconds)
    (91/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.726985876 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.05405329 seconds)
    (93/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.820146542 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.861762886 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.103225705 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.734453838 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.819625222 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.802912136 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.38732503 seconds)
    (100/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.864863292 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.731155244 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.844409956 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.099092524 seconds)
    (104/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.061155298 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.174552613 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.860297269 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.398625603 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.864819136 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.107113358 seconds)
    (110/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792902664 seconds)
    (111/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.065865286 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.863323486 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.95243886 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.797362711 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.732227657 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.743988642 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.050193034 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.838214237 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.730855605 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.722269274 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.944985635 seconds)
    (122/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.890515898 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.045919118 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.470430061 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.948414075 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.081866288 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.98553931 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.011573023 seconds)
    (129/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.108248701 seconds)
    (130/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.921756821 seconds)
    (131/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.822810269 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.73170955 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.919820206 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.899551737 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.752702629 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.042690821 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.833594473 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.732873939 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.965646618 seconds)
    (140/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.915588145 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.729102976 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.643413224 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.728743095 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.574033318 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.066282745 seconds)
    (146/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.984297851 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.762463981 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.631189576 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 6.733241738 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.982944842 seconds)
    (151/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.730871066 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.834736314 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.981678816 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.833707438 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.732869701 seconds)
    (156/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.269005105 seconds)
    (157/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.815564744 seconds)
    (158/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.733868869 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.811677601 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.754243583 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.733941375 seconds)
    (162/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.282955174 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.617417854 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.734103241 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.962927777 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.222967952 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.865984995 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.747063004 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.742296199 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.755874906 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06084985 seconds)
    (172/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.816333898 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.73327034 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.536454605 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.729699365 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.944148208 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.736195274 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.241464952 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.760892218 seconds)
    (180/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.486212381 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.733632519 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.976700066 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.863630423 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.863258831 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.73343804 seconds)
    (186/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.0144683 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.980958898 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.902272029 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.4180408 seconds)
    (190/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.760403394 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.400050489 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054503948 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.884452594 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.050839082 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.932867833 seconds)
    (196/309) benchmarking ("sort", Float64, false)...
    done (took 5.476359656 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.119153035 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.733989738 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.35814134 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.826979667 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.752650823 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.046713482 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.105834972 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.734667704 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.998088271 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.062175809 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.925474006 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.057489227 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.888981805 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.800766541 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.356018795 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.824496987 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.984221896 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.735645467 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.968563314 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.73537804 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.8654564 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.916633249 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.104478281 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.958470878 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.391205485 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.938073788 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.737422133 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.733551822 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.870329013 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.764452073 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.127995922 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903374755 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.296081297 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.10137717 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.739533212 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.861711296 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.734241912 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.147278188 seconds)
    (235/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.747532002 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.735510832 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.492460648 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.782004558 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.357343929 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.55651782 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.060339954 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.735351113 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.856659486 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.972592883 seconds)
    (245/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.652090817 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.874067433 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.17515489 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.885442601 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.820850633 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.766947999 seconds)
    (251/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.517977291 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.817156214 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.796036898 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.182646229 seconds)
    (255/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.775996983 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.9863512 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.841201754 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.872848805 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.086174466 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.885056535 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.23008099 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.753523853 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.143400775 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.06805203 seconds)
    (265/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.741965368 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.561193835 seconds)
    (267/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.771628399 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.753687019 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.83287852 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.630453861 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.002335093 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.75721939 seconds)
    (273/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.96319069 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.067370237 seconds)
    (275/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.825661034 seconds)
    (276/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.131643008 seconds)
    (277/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.865487738 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 4.635935037 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.994107207 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.900595351 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.752746257 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.931056636 seconds)
    (283/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.749851028 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.019763919 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.01128831 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.035801759 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.923745955 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.740212681 seconds)
    (289/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.902981165 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.495720933 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.06896643 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.365589531 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.868034333 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.739839191 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.358376415 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.834881514 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.122484506 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 5.478420153 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.774038763 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.958013733 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.674953259 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.870845458 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.854632722 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.738797788 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.389048574 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.044708671 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.749253784 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.003077107 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.959077473 seconds)
  done (took 964.332734325 seconds)
done (took 966.269931775 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.768238518 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760570059 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.743687927 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.765127313 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.856203376 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.790502743 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.75730977 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.747895447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.794952691 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.794044926 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.742985327 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.788454263 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.744868092 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.744803492 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.745668597 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.761235605 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.056511496 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.772932331 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.761928138 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.75678798 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.764851222 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.743040946 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.795673879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.787735922 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.750168341 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.750323226 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.747305621 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.76383053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.858552483 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.747718945 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.749411644 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.757995205 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.056943744 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.77108843 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.742594561 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.765674464 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.759408801 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75807323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.749363899 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.77797779 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.142369674 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.781465786 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.746197049 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.747665183 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.746023111 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.754386821 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.746360537 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.755733813 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761189758 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76160602 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.136700013 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.797155958 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.748951159 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.746950823 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.76086231 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.747053713 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.750712931 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764211451 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.766428923 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763330625 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.042791032 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.78117721 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.74967545 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.765308932 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.75541441 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.174110277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.779335011 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.752672956 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.144642967 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.790319004 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.173539044 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.792229706 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.748460871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.763661041 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.782148932 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.057963685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771747022 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.747861049 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.756811478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.746446584 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.759889866 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764830145 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.752092107 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.748168523 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764556116 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.79493881 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760819402 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.748282793 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.760345578 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.767582633 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.756773877 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.761415544 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.751448261 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.747999744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.761573713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.753249384 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.750648738 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.752804455 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.755085297 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.762309685 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.142892548 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.801460095 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.746205535 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.74660961 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.750544446 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.763693572 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.1443999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.785081578 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.772241304 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.799450264 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.752579123 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.043476776 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.780042391 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767908955 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762093844 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.752752435 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.746538108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.044456916 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.16615802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.799845326 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.749259261 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.748399373 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768406874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.753148936 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.74746759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.061547291 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.779673649 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767798381 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.873588931 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.763214779 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.783407836 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.749480473 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.755832669 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.802169257 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766932808 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.78275151 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.752759891 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766809034 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.768325404 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.747019155 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.763062894 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.765374901 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.752609072 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.75945114 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.748399495 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.802054941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767431922 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765538377 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.772978829 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.87484959 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.748704739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.044469384 seconds)
done (took 275.427194994 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.833869154 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.751320313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.84311473 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.748927693 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.839139247 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.826214492 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.748983716 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.750624894 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.74929456 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.247911155 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.750268383 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.753979837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.74999664 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750360955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.822972861 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.751955912 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.752427525 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.213179038 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.753478707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.836807925 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.751365396 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.749678031 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.748477079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.240942636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.749238733 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.752303177 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.830187938 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.751875017 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.186439498 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.75008877 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.747819807 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.189093201 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.832319561 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.777442269 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.757721791 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.755181919 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.841158203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.759323909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.817415583 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.81872359 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.850508811 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.785073292 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.751833267 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.752324795 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.756363269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.753297072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751361996 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.783453481 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.750973858 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.760285636 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.215218081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.757272621 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.760175257 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.752715659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.751778423 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.780506983 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.752338224 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.753658675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.832445885 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.753215065 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.821014616 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242018172 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252340505 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.752376233 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.751885462 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.752230284 seconds)
  done (took 177.336259696 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.820737431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.831738618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.819774537 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.755633275 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.803093203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.821998496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.758418376 seconds)
  done (took 14.289399253 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.757509827 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.751961689 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.802173126 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.803200996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.751395391 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.908332467 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.752339116 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.765223542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758583037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.779883877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.755938646 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.751325904 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.760248015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.753564733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.801194754 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.764689674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.870601319 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.756006504 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.75412577 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.901278078 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.7563318 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.761242626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.780400211 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.764641163 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756341608 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.762459727 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.323724175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.755868739 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754928659 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.754013073 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.752697464 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.795671467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.752644777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.753523928 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753389882 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867687712 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.753375873 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753980694 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.755923753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.753885814 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.754992463 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.755407394 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.752958975 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.752438492 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.754094027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.777583124 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.754571878 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.753463802 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.753840141 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.753428064 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.780340196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.755369934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.756028184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.759954728 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.798029132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.763080767 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.756855004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.757202087 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.755770714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.756135602 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.905105162 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.805842345 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.756715379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80437333 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757074168 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.754567171 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.753736848 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.755567682 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.843864112 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.754687526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.805375946 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.753983173 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.913430624 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.780404279 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.757272277 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.759067616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.760312385 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.756377319 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.755504996 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.764001487 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.756850662 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760510225 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.762884573 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762282044 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755827279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869824046 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901441342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.759386537 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.760522772 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.765476916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.756564762 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.801304023 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.756419512 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.755120874 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815952338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.873889821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.785839797 seconds)
  done (took 194.544949123 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.764765593 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.765088828 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.760225394 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.77306 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.759486536 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.758324963 seconds)
  done (took 12.264709332 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.761072232 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761635158 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.756361857 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.758002049 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.758022754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.757972442 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.759953766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760234114 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.762249 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.757449124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.757789302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.757513715 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.761706882 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.757949225 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.75752306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.758188827 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.758960917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757582209 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.758410191 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.757855443 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005200326 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.758256371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.75797809 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.762566995 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.762333246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.757934339 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.771637543 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.756674965 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.759717134 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.76767319 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.763669723 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.76032449 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.761937946 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.766669126 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.764819453 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.761926764 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761872717 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.758261266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758732476 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.759205357 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.764395291 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.758701915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.759513083 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.760112401 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.761158572 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.768760441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.762540552 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.772972199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.758323665 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.759093004 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.758182083 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.759364669 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.760191519 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.758867956 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76249644 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766769666 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.764867725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.766314859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.762359888 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.763486076 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.76400054 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.760052307 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.764869436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.758917004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.765128175 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.758792511 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.762901871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762876597 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760265146 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.758785127 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.759057759 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.759479093 seconds)
  done (took 129.723645979 seconds)
done (took 529.853999437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.005430092 seconds)
  done (took 8.690962066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.781431381 seconds)
  done (took 8.530970733 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.206778315 seconds)
  done (took 9.895275516 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.771283662 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.794230313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.769050935 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.766407819 seconds)
  done (took 28.814648806 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.029173613 seconds)
  done (took 8.717116845 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783041077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.75532663 seconds)
  done (took 15.297773582 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.91880636 seconds)
  done (took 8.608129181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.793318038 seconds)
  done (took 8.489231307 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.78338306 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.782025 seconds)
  done (took 15.279273892 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.763908831 seconds)
  done (took 8.450662468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.984243304 seconds)
  done (took 9.773883247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.779303343 seconds)
  done (took 8.543058475 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.794440359 seconds)
  done (took 8.481748492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.8131563 seconds)
  done (took 8.50190691 seconds)
done (took 157.76093886 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.763725446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.75371375 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.754591866 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.75629347 seconds)
  done (took 28.714822204 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.794447244 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.794483733 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.79525643 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.804379385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.796914905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.793788915 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.786182312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.788704186 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.804507694 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.797307174 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.794909667 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.797104636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.793696256 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.787252388 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.797803519 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.796406506 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.807006992 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.79725666 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.792934994 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.798270307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.763287807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.807528808 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.800610316 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.762389289 seconds)
  done (took 44.741688114 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.953747322 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.833879248 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.915487951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.815297494 seconds)
  done (took 9.205857771 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.813000018 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.816224714 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.826899866 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.865585155 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.89920766 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.829249712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.786858743 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.784551338 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772008387 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.814802031 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.891324332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.810507273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.897356371 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.762780056 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.945674772 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.763219458 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.762873516 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.814100647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.865694567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.887277247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.762681809 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.814301497 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.817650896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.811449924 seconds)
  done (took 45.50425233 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.764682386 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.772102055 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.771386289 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.766015525 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.764123887 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.764894729 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.771047169 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.766256284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.785509931 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.765994088 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.763465858 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.763975892 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.772153034 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.764672515 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.764652382 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.777967127 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.779610828 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.76438906 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768730621 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771881587 seconds)
  done (took 37.072039571 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.762838616 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.610027817 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.109095481 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.01461452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.764231672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.762255158 seconds)
  done (took 30.71255212 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.777161032 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.772541218 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.764462859 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.823187282 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902771697 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.768499612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.765547402 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.776429593 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.810048222 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825395097 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.78028095 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.789585506 seconds)
  done (took 23.246490168 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.764643165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.765152117 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.765080144 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.776986709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.775846232 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.774050792 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.772834659 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.764181189 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.775308636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.783788914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.77313603 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.777086923 seconds)
  done (took 42.964584233 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84318996 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638416102 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210588846 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22623697 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285168408 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964205071 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.765367998 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847775792 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.76781802 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035845893 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.094567354 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965782651 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009106172 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585070676 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766875792 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.236205354 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050898419 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983000909 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791146974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389947541 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870361191 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31699446 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.437460433 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871926386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968000508 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.885599838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.025072748 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.72373994 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81374204 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769152459 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772690001 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.766901293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038027624 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887669785 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836000392 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772675443 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182741284 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.473371389 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.779510582 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.444266847 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.312827048 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88002208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76830198 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768134124 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.693804108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279021044 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85039136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.769973139 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468180362 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766608581 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771983583 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842346456 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.767447069 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.575334758 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452998303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030145408 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.769179208 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771795852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329769444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804017726 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378247192 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.698632935 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.853668249 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450152985 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221171878 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.918638811 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.767134891 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770589804 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694698812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.437547775 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879560718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904530175 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.78048803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409231342 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07053894 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.163294029 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815478977 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040667593 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.626450837 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.69744834 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985101523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.718397444 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696442159 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.619202884 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.695264309 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98464911 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80091523 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.388494934 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808319283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851972959 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773666092 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785503039 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771640562 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985467464 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.667651369 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770025119 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.036364219 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017152612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782363094 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853932389 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696765338 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.767652279 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015262069 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.976042859 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.016205585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.24397477 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854398364 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.725861056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.779148157 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.708815947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772417891 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038160858 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827518553 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771767249 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886632149 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.714585733 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027453528 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.741055404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.863439264 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.106134538 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005462765 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.110337486 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018825909 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833471848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777275386 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.772309931 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.465467197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377249997 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.989278436 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.786919746 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266071099 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773965457 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.775207645 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708613365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.389296736 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.116037867 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.845434844 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986949153 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742019238 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043403163 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6987954 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90860636 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766012548 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.982756194 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.416631164 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.851793008 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021376086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018676406 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.00779439 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776083658 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788621738 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866391338 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790099974 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.218421285 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01521839 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.774421327 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774836575 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.450313152 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825181228 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775447639 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.776462552 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307447341 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041687412 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792033782 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.769385832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647309834 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.785201158 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834220053 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775221081 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77625412 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.289995284 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273823848 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.777399446 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.414549123 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984601719 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777365122 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.445957738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951025973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.784126017 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044673067 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835982018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.699774048 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.474985793 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.474490703 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774905285 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700013676 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.773954001 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776338543 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779210743 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.964361098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050044599 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820009904 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.391683717 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876148823 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778231412 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.776624914 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773586906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.290402977 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778979677 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26818558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896473234 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903118669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.785626723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700330005 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.774873638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809211041 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.813828961 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.718252272 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824486832 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.390563877 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980445159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016251176 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.179105941 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780129093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.398567319 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.889509317 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.791172785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051004593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289133085 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.875349559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842651007 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.780547946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.400826087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498348994 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333594634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079496513 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09546924 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121964729 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.156441084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.092102541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857959405 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998948825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295189884 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83141385 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858038418 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711642555 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782204688 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42233092 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121428008 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784616547 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989435152 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06099191 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.130864586 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902892029 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97369771 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804777292 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.577201879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799683926 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.309510474 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794467622 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.235119453 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97221793 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856363891 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063003724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849921893 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.77316241 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116129537 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81497309 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.477036935 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130920526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.162748527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.230110128 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999334831 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773799257 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216148192 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13166284 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.95728181 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.897623097 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701969304 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783390216 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784343631 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.795296125 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.750532038 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.600496284 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.020198114 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782511397 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004191408 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.897920832 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138081558 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.724670076 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.778547428 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779066927 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029722032 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.521867984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930394685 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.092700583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.34078693 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783941686 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704521633 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70612446 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.47871653 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780816179 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743769856 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00450777 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.882769814 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458752666 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.143945917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08783233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022331506 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.790515987 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051330255 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052754781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.271512179 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799840026 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.87676412 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.062483474 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.517848425 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.992986832 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007397267 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346075641 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991770704 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231947993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.753524584 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.780677293 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987588898 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993192294 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.129950357 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950673168 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.488885118 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.79348576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155461368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841165821 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.132185362 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961157904 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.864846886 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788428339 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85865243 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785376635 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.78520536 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784418169 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792073425 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132035387 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893222475 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.794150887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85931793 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792536886 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.345328179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.784750693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056062113 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143181447 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108194192 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839404859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780142906 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790818846 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706207481 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907135004 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220327016 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050522615 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.899571234 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.910177432 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80027844 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05954128 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.020977935 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086760294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054248046 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.664971576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414460155 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902246998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.997024452 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791818806 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.980864481 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004372012 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084053936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337790425 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.906536274 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964814866 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046714778 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147275878 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780863748 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357434261 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.784552825 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200755788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.825157075 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.149029029 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043070196 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790652657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912404739 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791750315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.985989347 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.24002347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416160951 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133702576 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641927794 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793902565 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066430655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124825526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096971491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864671338 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795480079 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.477715214 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921248818 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.656919641 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.025736873 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792184483 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992616519 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.499678012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794110963 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063280583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093260971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.790838183 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.685462691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824475022 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.785938968 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998609454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0024646 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031635832 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78899815 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.782715522 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.58983375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05994348 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839821736 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70586936 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.7778052 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823064375 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00431459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795036605 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.293045847 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.482312329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071896905 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.683320251 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794260179 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.16762374 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153216096 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111315643 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.291845464 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996028786 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.326783286 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.607638061 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142466052 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.774507279 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.153613907 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144475552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.771796666 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.25549063 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876321494 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042726889 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091307852 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.787632875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495885895 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821857605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003854065 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145556892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718994954 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793714033 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.840380765 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788910595 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.79404898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794714021 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.724851448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225586955 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.622234279 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341475048 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.782927285 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.821739454 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.150116319 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307369716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892026677 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809853093 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795929315 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.50583767 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.075568901 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035145037 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.277327201 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.884080282 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.7927816 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792254158 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712032086 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968552939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.973448989 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088357354 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.137365911 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892660528 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791259773 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.999420548 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993411112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.165731817 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923608295 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910321524 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900320104 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.731631141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495034884 seconds)
  done (took 1615.624600085 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.808090193 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.842199182 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.807799032 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.892695031 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.85209812 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927762547 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.88648221 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910846999 seconds)
  done (took 56.64635968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.794388879 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.006844408 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.791891844 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.787113282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.846417351 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.787700245 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.945955321 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.793291196 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.845284887 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.790456837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.788890757 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.783544901 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.146257802 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.804000429 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.787538195 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.785866655 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.804199924 seconds)
  done (took 73.079744517 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.791330968 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.026839594 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.819908075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.789780126 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.770976714 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.787081034 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.828452091 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.803139334 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.790583217 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.030563146 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.081930496 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.804548806 seconds)
  done (took 89.038822626 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.800595681 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.788824545 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.789534942 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.789379671 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.788468972 seconds)
  done (took 10.679383889 seconds)
done (took 2108.940170821 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.021511868 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.983388979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.033980176 seconds)
  done (took 5.730450923 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.930070029 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.983103661 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.095830421 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.115629053 seconds)
  done (took 9.847739797 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.092835057 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.168836966 seconds)
  done (took 5.979236991 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.104960177 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.810296765 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.196220773 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.788572486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.790421961 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.792919647 seconds)
  done (took 22.094681072 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789836977 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.790334877 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.793178272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.789635678 seconds)
  done (took 8.88123486 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.789162598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.488690519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.789283034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.801233541 seconds)
  done (took 20.585797772 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.940347034 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909785006 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.933683881 seconds)
  done (took 7.503034198 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.012733184 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.586159499 seconds)
  done (took 6.316131519 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.949260485 seconds)
  done (took 3.666306566 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.820110945 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.063347827 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.278602889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.309753008 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.377969962 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.59723156 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.073567715 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.007369485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.220002616 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.230467639 seconds)
  done (took 23.699664564 seconds)
done (took 129.152295471 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.123810844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.80926303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.994943434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.140410818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.018134423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995050436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.998226097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.12756769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.817125512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.803506536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.138481127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.019779903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.945707402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810710212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943919774 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812958248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.012179823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.145718601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.82229987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.055155816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001308282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.786223175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.982760969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.799655774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.014042049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944992884 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.333529634 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.813676242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.963480878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.342987531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.059736302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.195142062 seconds)
  done (took 165.492543873 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.793647208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790306716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787661238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.789122904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.338763972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.790003458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.78703915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.78511056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.195253264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.18553137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.790356416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332747683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.790837715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.790213808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.789337525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.792155607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.348176419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789964431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.792095949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.786788051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.791862894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.186541643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.791739212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.194584686 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.337925528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790543586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.790307477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.7899147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.790141654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.790371285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791980816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792945307 seconds)
  done (took 206.806704927 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795108752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.792001191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792239687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.791339516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.793902667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.790736504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.793143914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.78928903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.421840196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421566512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.791247979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.792182501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.802120418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.790780206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.801790295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.792811998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.799562191 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.79856068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.798669647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.804418168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.795538741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.529668686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.800628435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.523517185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.791163873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.79629174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.79446706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790477026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794069198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.795152259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793952096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791268888 seconds)
  done (took 217.871591207 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.040451191 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.797434377 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.797795938 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.716466773 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.79805191 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.796340148 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.789687539 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042383595 seconds)
  done (took 19.100798476 seconds)
done (took 610.997588077 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.310742578 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.043094243 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.984628308 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.819196974 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.100933401 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.865618298 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.816291577 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.890332104 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.712143863 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.889985556 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.479233079 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.833534753 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.580810762 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.841310112 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.946728753 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.869039006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.415008347 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.520240787 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.985449517 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.92213236 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.006612644 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.719519069 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.894712455 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.649196015 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.603973242 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.766959832 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.840399735 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.415093772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.825473263 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.9820762 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.484842623 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.078178757 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.827519629 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.818102659 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.867870087 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.845176036 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.026024176 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.827822558 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.939033473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.512503305 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.913184097 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548417403 seconds)
  done (took 99.945224487 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.810129826 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.808037284 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.80720233 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.805062762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.814185441 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.809010899 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.803003722 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.804911451 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.805415373 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.805035464 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.807744668 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.817825962 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.805362137 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.817002705 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.806138973 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.806829228 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.807822064 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.816364939 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.806631507 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.807573451 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.806810473 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.806745643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.802486411 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.808314835 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.809173894 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.808073535 seconds)
  done (took 48.753437838 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.799334757 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.955716184 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.042883167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.816487851 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.802219904 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.803754616 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.821891852 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.799027428 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.805792773 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.801306951 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.891887852 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.806342194 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817736224 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.043644684 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.810131634 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.793937135 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.798128146 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.795785679 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.962297349 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.81082636 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.817519233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.802053126 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.817448851 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.81199638 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.801847192 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801901983 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.80464766 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27150139 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.807182472 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.889644706 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.889358748 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824109005 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.211003073 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.048058894 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.851210199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.812691467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.80050193 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899184663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.797787106 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.79579843 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.816173475 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.803426125 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.053903958 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.340562237 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.813060632 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.797567033 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280868787 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.896676475 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.839122558 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.806617234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049712332 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.814684751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.801212327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.799889319 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.835721982 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.803969945 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.799308584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.16386256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.811055359 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.818808993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.80107939 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.799184322 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.966785994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.804463181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.954280045 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.810160949 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.809290506 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.800020786 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047730265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812701203 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.350637039 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.811090862 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802493772 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892440467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.956813893 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.298017901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.813967836 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.96642582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.225707075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.822517958 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.804814056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.257475692 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.826392364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.807920649 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.801057706 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.802421182 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.797170036 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.844333545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.81798978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.254313177 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.353762568 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.180461599 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.827999109 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.816563277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.803630583 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.166246764 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.804919775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.800819425 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.037591368 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354779328 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.815800065 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.81038112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.334676788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.815605207 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.818170373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.808800646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.053894634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.81792618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.845648245 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.805399624 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.811651131 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.805651986 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.822789505 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.805990292 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.799840469 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.326927066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.911256665 seconds)
  done (took 224.325496956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.803896301 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.801105746 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.804331354 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.801797074 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.803879124 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.804386375 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806246732 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.80095074 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.805422067 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.802885717 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.802620025 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.806147523 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.806365096 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.810740328 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.805757348 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.807463557 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.409487321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.802835761 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.804384742 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.797704943 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468384944 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.808109969 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.806176335 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.800070919 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.806933613 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.806036528 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.814374052 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.803085517 seconds)
  done (took 165.531310287 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.801531939 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.917511218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.818697539 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831954363 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.808810795 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.805122783 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.904868179 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.818258637 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.808671098 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.80738253 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.804739885 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.868843276 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.80977733 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.906217091 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.833537027 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.910567855 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.904632831 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.809213819 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.804009513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.805655264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.833230279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.808111287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.864300716 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925297508 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.821338389 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917342417 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.8189467 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.804374083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.803483125 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.920713034 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.820623731 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.867269597 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.828921797 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.821422993 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920257175 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.917753504 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.903266953 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.905942046 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.809225468 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.80824708 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.802392516 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.806944 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917436793 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.819913385 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.80893171 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923780353 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.82131006 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.803932286 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.802482361 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.80497675 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.820354165 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.823852718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.870767064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.930569083 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.840441044 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.829900291 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.903919084 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.932512999 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.806872603 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.902739138 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.806647714 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.919836257 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.822143959 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.806477781 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.809459347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.811415028 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.837822038 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.90890134 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.909416789 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.810795463 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.903845214 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.84285404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.808141772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.812386351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.808866847 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.92311312 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.920588075 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.838409521 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.841176318 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.831822676 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.814926133 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.806561274 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.808597872 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.823367821 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.812657113 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917012118 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917659064 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.808865725 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.808846597 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.809224579 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.809037736 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.833217737 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.921919394 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.840970322 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912160767 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.867523929 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.877167207 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.815511806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.822234183 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.815023871 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.871599856 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.823203045 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.820453005 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.097658044 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870852896 seconds)
  done (took 195.906176387 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.181737752 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.852097397 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867513589 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.12478875 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.160933477 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.716437486 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.852715786 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.856282625 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.879589004 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.044102816 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.923748209 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.874828014 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.843801914 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.830454907 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.857807976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.880581073 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.868005777 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189950103 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.075977578 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.031973163 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.846671506 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.148818413 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.168435044 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.464800264 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.900129366 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.238399197 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.410200927 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.980117166 seconds)
  done (took 59.811285812 seconds)
done (took 795.997402848 seconds)
SAVING RESULT...
DONE!
