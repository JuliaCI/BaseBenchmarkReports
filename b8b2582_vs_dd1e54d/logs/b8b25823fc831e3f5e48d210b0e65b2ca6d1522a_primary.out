cset: moving following pidspec: 3501
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.205391756 seconds)
loading group "string"... done (took 0.621549718 seconds)
loading group "linalg"... done (took 8.170423039 seconds)
loading group "parallel"... done (took 0.17874712 seconds)
loading group "find"... done (took 1.229095273 seconds)
loading group "tuple"... done (took 1.936299142 seconds)
loading group "dates"... done (took 1.298929337 seconds)
loading group "micro"... done (took 0.270621165 seconds)
loading group "io"... done (took 0.944456778 seconds)
loading group "scalar"... done (took 39.394905224 seconds)
loading group "sparse"... done (took 11.894271545 seconds)
loading group "broadcast"... done (took 1.05605907 seconds)
loading group "union"... done (took 13.569207959 seconds)
loading group "simd"... done (took 4.683864072 seconds)
loading group "random"... done (took 9.617663275 seconds)
loading group "problem"... done (took 1.82379623 seconds)
loading group "array"... done (took 21.385589911 seconds)
loading group "misc"... done (took 1.672732696 seconds)
loading group "sort"... done (took 3.366680073 seconds)
loading group "collection"... done (took 18.170119887 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536094854 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123180291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138703211 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121582063 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150536536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118019706 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125739925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084708045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.89362538 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148678244 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115389997 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407970927 seconds)
done (took 5.352559091 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169896283 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08776564 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079506016 seconds)
  done (took 1.221887152 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065861594 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120052721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065829733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066306302 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069041581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066292812 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066253263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065455683 seconds)
  done (took 1.574426354 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073333106 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069275222 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06675896 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06893388 seconds)
  done (took 1.335033183 seconds)
done (took 5.433067866 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774400134 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211824598 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178228667 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416210513 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140550541 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175274122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657547003 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317761342 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193928562 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092588979 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114080302 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389766092 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122714626 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63808684 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077920534 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095350179 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144498359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441180612 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070971931 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085576203 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093031106 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132235424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081476949 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075693284 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149690334 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070916812 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136356089 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083851445 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069296864 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240251944 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176421326 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662905016 seconds)
  done (took 10.395273483 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101562852 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100245563 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069240387 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129156558 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094391167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070445776 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075948809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068914793 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088791575 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125121863 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090457475 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110407397 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066692253 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070120575 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084130343 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203063698 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079563845 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085503909 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071776249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080799002 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107761876 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078760103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081137814 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080007135 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127461767 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170859575 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099027634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098496048 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067817782 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082004152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116058997 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131650035 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066747921 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066796037 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12034506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094941743 seconds)
  done (took 4.553539219 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.891778552 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150946827 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103521117 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126602484 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065705975 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107795858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066366701 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081946941 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234658571 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.426088313 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.372590414 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152287125 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093787012 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115758428 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103938905 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070656314 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071708177 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068241039 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.242076496 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099296505 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100085739 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081979581 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06952312 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069859303 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065883939 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072816768 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064995078 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067833469 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088438479 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077368226 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.336297092 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123740304 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068033773 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.955196856 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167945942 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068102508 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10497225 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164741609 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092469259 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137949976 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066579964 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064528968 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150870822 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064041807 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06830613 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066216021 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079983189 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106146712 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.264815552 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066732834 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068269183 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164700057 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068571769 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077527749 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.216573776 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156304728 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069349215 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.271515064 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09003992 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070139039 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065500734 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186879024 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117290992 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066617724 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069487395 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068154211 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068162927 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06926479 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39787233 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06803615 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.145709219 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071440688 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077372347 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069832085 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069470067 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078250678 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078181734 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089979266 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068345549 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074924482 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067709705 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066993479 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067973316 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094392795 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065487378 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13529481 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068023496 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073580192 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066060758 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091211334 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09898076 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069922996 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066453312 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103101453 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071025407 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067191676 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067891059 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118254227 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069150174 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113216379 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069419269 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.063217734 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066050092 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.190432924 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070441241 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101189599 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078525717 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073874155 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154627637 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065814034 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073088348 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066705442 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068912314 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067346756 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078723057 seconds)
  done (took 21.162315908 seconds)
done (took 38.058366304 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250141241 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083597636 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083764388 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083811872 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084046527 seconds)
  done (took 1.724964984 seconds)
done (took 2.85484987 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12879034 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099866542 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065343274 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098212527 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064880315 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103907094 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100715904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083971235 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100352375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065158091 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097753447 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065580328 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065667722 seconds)
  done (took 2.275667075 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082468918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08307552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066433993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081886527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065135689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082034671 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081160185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088042146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080877582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072589068 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065636275 seconds)
  done (took 1.970741921 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082929218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083506125 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065549754 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081608445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064923696 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082098204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08200474 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085601514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081977838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074155725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065417305 seconds)
  done (took 1.966917891 seconds)
done (took 7.329052354 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076815488 seconds)
  done (took 1.18455582 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541520475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.644683108 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07915584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101547824 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196188583 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110253602 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241436299 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083208381 seconds)
  done (took 8.262839052 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098826094 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069449904 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081457668 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070950167 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071089827 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069693642 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069912343 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070000797 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070604221 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070363234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070605397 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069915049 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069828209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069810796 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070455828 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071079415 seconds)
  done (took 2.348003819 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100242722 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098682225 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074524669 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075479302 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0732055 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072492861 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074944561 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074551238 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071927302 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073705682 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076368196 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074148972 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073994483 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065117767 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074880992 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07757815 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072413361 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075908708 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075943828 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077016488 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076494237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065682718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074327042 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075294656 seconds)
  done (took 3.025206369 seconds)
done (took 15.937741988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.103119007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068426042 seconds)
  done (took 1.288472937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079313253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079749905 seconds)
  done (took 1.284639033 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078860568 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062807201 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085459095 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075224653 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064239918 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064046753 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083703864 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064112678 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063988117 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064136915 seconds)
  done (took 1.832579545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065262769 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073261057 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069770118 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079679355 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071095626 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064843261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068749684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065528251 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073633339 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063493947 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069093667 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083650301 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068412363 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085447876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0687119 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068549563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070687021 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067444106 seconds)
  done (took 2.403213413 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062927632 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063622154 seconds)
  done (took 1.257911573 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066619156 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063837631 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06694424 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06603303 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063627962 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062709824 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063433549 seconds)
  done (took 1.579569596 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380214959 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121334562 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325394212 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065306916 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079521772 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242896646 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064872629 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06978113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069876171 seconds)
  done (took 2.579579496 seconds)
done (took 13.358965446 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082624887 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.0864095 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097189071 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389732083 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092737244 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06805534 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116096726 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182985765 seconds)
done (took 2.255876387 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216532268 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.774198737 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.486266495 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204444549 seconds)
  done (took 2.599766881 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334806763 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077715547 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076926164 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0672676 seconds)
  done (took 1.698605213 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065085309 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070809303 seconds)
  done (took 1.272823093 seconds)
done (took 6.926122147 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065248174 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09246953 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064177124 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064758251 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064669594 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065024884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064940117 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070396844 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064483103 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06483668 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064397515 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064705485 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064954018 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064858623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065109796 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064617884 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064777133 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064942284 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065269075 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064305711 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065001277 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064527016 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064700339 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065074193 seconds)
  done (took 2.749955387 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082292319 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066767537 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06829221 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068170652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069038878 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068690221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068515853 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068321879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068977583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066544952 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068893615 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069286306 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066512782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069293082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066823128 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06918601 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069078869 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067041135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066629675 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069261655 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068485861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066922064 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069014778 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068496393 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.182320699 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069033765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067000693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066810174 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06833993 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068848956 seconds)
  done (took 3.317641863 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06542944 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0609515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062731508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070264898 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061435784 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061725194 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061005008 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061707871 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062570515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061030562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062153273 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060910096 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061129931 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061749453 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061934528 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065344969 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078865342 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061132136 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061540617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061701422 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065203547 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061476424 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061367409 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061153563 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061888368 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063387458 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062026718 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061432853 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062105814 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061652318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065259014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066141144 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061057487 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07035141 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065743675 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061506066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065486869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061068647 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062139273 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061230716 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061064235 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.060923027 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062365199 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070361928 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061312475 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062299153 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061697865 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062690554 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061771424 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063256243 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061001551 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061101766 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063638266 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06257525 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066366496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060870556 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061769158 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060870882 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062011415 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061225848 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06100324 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060736552 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064641395 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062019633 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078335081 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069791105 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061174756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062980946 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06223728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064582068 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062769963 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076752882 seconds)
  done (took 5.711079473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086404907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087724901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0667798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066420928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062312006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061976567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070141897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062044046 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066911063 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081019133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061996778 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066905339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067056718 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06643289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062410413 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06713904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070831937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062144063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061899397 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066036191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062137187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072578759 seconds)
  done (took 2.660179437 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145951715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067621396 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105208634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072651057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070887516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072889541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067847599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068031757 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068369892 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068737999 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06864315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068158876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070416612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068537141 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069168533 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068538717 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0682341 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068423741 seconds)
  done (took 2.509428069 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078430066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06774524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08654664 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06725414 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067819756 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067180617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071938206 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072614429 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067165623 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067459562 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072762864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067165247 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066977604 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067940093 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06723214 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06756583 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067215733 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067595687 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072113732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071614769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080866913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072454047 seconds)
  done (took 2.707986887 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078649204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066460763 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081701102 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068492837 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062884179 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062167784 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06822642 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066659141 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068279961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066264067 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06712179 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062328338 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069001321 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066496422 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069138272 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066535461 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066036697 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06685669 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066405388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062245331 seconds)
  done (took 2.505759528 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083554882 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065309669 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0651709 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070987976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065249829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064830055 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071441692 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065310315 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064894381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085998152 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065123571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065568475 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071766182 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069256375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065129134 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072008542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071572502 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072109601 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067860183 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064942949 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085685591 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065213974 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071727363 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065105642 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064821896 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064832953 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065262697 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069202296 seconds)
  done (took 3.094386286 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06530398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064417314 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064593469 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065080177 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064860376 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064823183 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064936882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064816646 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06450612 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065252017 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065050024 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064512515 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064773459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06477155 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064912106 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06458623 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064533659 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064966638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065211113 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064950661 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064629587 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064532368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064645784 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064687389 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064746942 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064540339 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06479094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065266201 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064306528 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065295805 seconds)
  done (took 3.103446752 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075354274 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073230934 seconds)
  done (took 1.307375342 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063275039 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079107067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061057151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072032754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070559496 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065540131 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071506115 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070442332 seconds)
  done (took 1.708046362 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085014525 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075249786 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064140493 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076175247 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074913466 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084716268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12586673 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06369261 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073920329 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065158479 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08240563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06603902 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074297115 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068834109 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073966374 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077580378 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061799931 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068729879 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065251332 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062851084 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064602171 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077330284 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073251261 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061972558 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069041923 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092013791 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079923436 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063164697 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070542299 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076284204 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073798828 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060942867 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063991469 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063983576 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061946799 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074998277 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082458371 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071136392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076268993 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064367589 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071889364 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062199179 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072348794 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074598668 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079668485 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06369243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063823414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061396414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06458844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07025137 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061720017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06807319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061468754 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07590163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071741214 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078610669 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062538388 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069412247 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070246795 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070613168 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07502006 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069647465 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073028286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062828657 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079324811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073385123 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075667781 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061672922 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060693874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061687475 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07731608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092037266 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073301824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06413837 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064202673 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061951698 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071404461 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064511427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072873981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075595885 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064042779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068636729 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075806104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068245721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070225038 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070263602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062366735 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066748774 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064635855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083125876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062759495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06167709 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064444067 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078888303 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070770301 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062869119 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067078418 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074644386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060456507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0635844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064529721 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069042765 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076757268 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06766981 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068203752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076264775 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071957668 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068243477 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069136967 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059979459 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063032732 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064779584 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073984156 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060148302 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069338062 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066894435 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063119561 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073881325 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061168662 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062026325 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074678321 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073476472 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060766025 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059588301 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069482875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062321711 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065114753 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076060756 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061185273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060942939 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060510339 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069736288 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062066783 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069950554 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066166629 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069747026 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.188657068 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06359475 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069286896 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077180674 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068566593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070823726 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074128153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070222449 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063284322 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075972703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071069743 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065864932 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073848354 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068758243 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06188012 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065813569 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070636915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062354445 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070985412 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066181066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070346078 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064264339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062458459 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06958417 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064262007 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06576891 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068454548 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062347627 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078380198 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070018523 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061720934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061299038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070837658 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065169718 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063104502 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065658248 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070397982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063830795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061806894 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063914893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069955806 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071456181 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066816385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064890937 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073675254 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081048339 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063821233 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070790971 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063767989 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06486556 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064326597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078448844 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074293905 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067887625 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070386697 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061244755 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072820573 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075723935 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065947211 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061813798 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066525569 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067351617 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075285104 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067708121 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064197756 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062546842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069530408 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066618351 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070447906 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063374989 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066459071 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068972383 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06227895 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069692223 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064838897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078511954 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071280717 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061889728 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066552578 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062214197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074910321 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062253561 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064980081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06669072 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064414769 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063229943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07034745 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06103123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076080163 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076656429 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06893807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066240825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063496062 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075855694 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069470966 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072371444 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071250493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073390924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078914929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066116478 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070508299 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078826285 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063736818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061262882 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073098603 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062133019 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065294969 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063066217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06279891 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071254289 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071265281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073725044 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061424032 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070338162 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061780412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065487677 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06106075 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071667029 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069785428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066949003 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074589123 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062994058 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062805172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070102163 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062021241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062927661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062917592 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069337591 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062550361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068107218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065491328 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068617664 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064208652 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060840562 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067724373 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062237977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067361329 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071088445 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061581013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067750627 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068665216 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.193350319 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0711945 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068345928 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067133567 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071660125 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070410312 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069514208 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070732075 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061953651 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075722106 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063204837 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076388279 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069017794 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061043517 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069740355 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071228007 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068618604 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064341911 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063947493 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069634048 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063869247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07078839 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075785965 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065905839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078988041 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075330914 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069468723 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070747802 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068874643 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069484002 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066382267 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067829093 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064280979 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068817599 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063310618 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072204119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070626082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070339445 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06973376 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064166206 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068847243 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06428607 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061657778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066131266 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066343226 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063805888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076068271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064161346 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067160829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063049599 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064820192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063367437 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061711085 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070861421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071265157 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064667389 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074709319 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066286666 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069929214 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079177885 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06184882 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062451285 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061980267 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065182403 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076529252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064688491 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077337723 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068997958 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066599756 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061677012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064397272 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062592839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061619703 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062135197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072102787 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066022627 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062885775 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06406007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070459674 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065167165 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076834919 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063410068 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068322695 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064387355 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061425963 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066702848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066626603 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071047002 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064536941 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065672405 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06148597 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063531616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068138343 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070200949 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063459815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069422199 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075849191 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064061096 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070740882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066302446 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062276247 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070525397 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063171726 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063350734 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066122172 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071330361 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070900468 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064196104 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.0779026 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063175783 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06936139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063686154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06449638 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063207133 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063511463 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063510442 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065784176 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064355952 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076440654 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061681445 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068666923 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067945259 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066518143 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072310111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063290792 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06888211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067889891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06481698 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069203324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075847464 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066172197 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069441444 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062731502 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067629112 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071835904 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064502597 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073560573 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067510569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063029323 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068052004 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063579254 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061986975 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06185746 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061711354 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.207582686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065062085 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067112613 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067251512 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062823999 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068556105 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06674804 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07695896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070317766 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070608184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062155781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061352341 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064857255 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065408328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069632556 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070306247 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073556704 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070472323 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067620118 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063144956 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078333273 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073225625 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071267724 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065722257 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071487239 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064342256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070373282 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068293239 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06850999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06536813 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071589138 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069664587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066221936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074342707 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071789821 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065641823 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069286737 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069750304 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068517675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061765386 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065079043 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070456303 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072948551 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070715263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063582492 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079185936 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064968966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069204211 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06625337 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063692592 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072894975 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062167807 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070013055 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064776652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064500976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06237772 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066261284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06531353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070742 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066902852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062006632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079225997 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078288411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070528573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063034328 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062884724 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062275352 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062466341 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066676658 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064624148 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069845179 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07940222 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066200311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066319018 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062414355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064077357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071804683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071621683 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061635597 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062452186 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066683747 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070283558 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075679344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062868441 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063793572 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071226036 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070892438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062286311 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066762442 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062018323 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072398005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080602363 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064351617 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070147265 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073822549 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076498153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066440337 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061997042 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06464401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070182262 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069196581 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064672237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064826177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082994483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071328317 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06625605 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062477079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070921487 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066450483 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077520765 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064925113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064031971 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072429652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069652565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070997509 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076226428 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074406965 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069486082 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069683376 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062537549 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068100702 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061878484 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065954967 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063901041 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063854819 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06676851 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069148329 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065370988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077684521 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076450456 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065121048 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060181193 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064926908 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065067087 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060691793 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06310583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060532468 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06152509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061125904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061171779 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068162335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070784547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066310359 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0626704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.196035803 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062775616 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074272034 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07112648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070700969 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061819527 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064559091 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06488892 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071990153 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067233846 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065540019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070219643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069378696 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070020604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061935064 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075184902 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06317268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070095414 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066329156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064059875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065063337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071679583 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067892035 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065569544 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070814013 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070691129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066454938 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062103743 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062149714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07335115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062372617 seconds)
  done (took 42.280690752 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099683949 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063798793 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06225143 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062934759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072311237 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063392919 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062444988 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063154114 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063324291 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065232279 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062256389 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062399033 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069878638 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07746936 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072408196 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067471922 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062671667 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063328737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062310943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06386299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070425158 seconds)
  done (took 2.65445214 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070087662 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078340387 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074934516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079917998 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071297083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067488876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075152206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067374353 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075324244 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073368219 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07666173 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067785785 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072593037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073268671 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072655565 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068487585 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075468582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0716533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068139826 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075175316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067874669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074903799 seconds)
  done (took 2.828336988 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064558645 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063023722 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070142874 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061739777 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063338285 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061620416 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066940263 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061917042 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066926334 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065906058 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065944849 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065362224 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07027355 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062230402 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066671054 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07741396 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107242298 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065990919 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062933446 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06398271 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061418445 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07028714 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061480087 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061935854 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065259121 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065671257 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064424141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061314295 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063337447 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065424418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063108124 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061502434 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069594788 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069065476 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065316703 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065465743 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062839981 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062906596 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061918506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061718062 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06926673 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062110739 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063787059 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071838539 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061733264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061463728 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069587075 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063055331 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061305696 seconds)
  done (took 4.454854387 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074578759 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112025441 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067828312 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093209113 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076316854 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069312947 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067587785 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094135005 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063724177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063950913 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078129019 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07818847 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06533636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066920471 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069586313 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065637052 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066123645 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064658415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068679168 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064763939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068781045 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069471436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076229755 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077351426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066266423 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064114012 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064746746 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066801347 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076552739 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069348096 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067016173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067940244 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076712372 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070492007 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06467263 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065193021 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078084081 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065864232 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065240873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06312475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064961101 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067032691 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069856486 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077758852 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065536441 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070067409 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065193865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06326394 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077639761 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065341232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069891843 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078327057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06627746 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065742787 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066902832 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077128103 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065310457 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063990631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065981271 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076486738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063122939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066105339 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077497617 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06458014 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069118144 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077939246 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070604332 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06618674 seconds)
  done (took 6.148606082 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072432363 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093684369 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079315634 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079554318 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073154851 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073751641 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073450427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073471047 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073266089 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077459771 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073604741 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114399774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069375711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07520885 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073464794 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073349823 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073278525 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0736427 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073458506 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072990082 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073041517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079559233 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073228384 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079400358 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076324472 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069376195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072935869 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073015852 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080142345 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073755617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076610451 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072922552 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073639422 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080057016 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076711988 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072950242 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063156198 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07272405 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073252629 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073225212 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069021606 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079986435 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0730724 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069483167 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074206475 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073181991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079799764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076586754 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075430399 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077615007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073415191 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079909309 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073129886 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073468118 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079908229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082542569 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079255972 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0799514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073484579 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079532673 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079382435 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082582331 seconds)
  done (took 5.984384577 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078311285 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070988144 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082720728 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062130219 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061842868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072460717 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062004963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061877836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070540208 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070506225 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07456963 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072551761 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074651991 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072423673 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072491287 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074929529 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071926691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072025352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07047794 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072314824 seconds)
  done (took 2.694730238 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07566289 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081045142 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068164634 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072046874 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067238519 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07232916 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067270479 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068032411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068403599 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067864 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073987096 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073964132 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068406555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072394251 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073610689 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072191278 seconds)
  done (took 2.40197932 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083601485 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070579995 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07747936 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063791541 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06719066 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062591281 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063542102 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061708994 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062462016 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076711821 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063380545 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074820839 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063567155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062563021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06303308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069093388 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062537621 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063855492 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063178023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07690045 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070576689 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06454091 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067234168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063548098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069036999 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070743192 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064946134 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066761681 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063286206 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063902958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06894852 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070129425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063273118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063963155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063250462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063316753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063335703 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081488577 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069232821 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063186894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061595063 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068425237 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063454721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064255196 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062579947 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06382191 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062584569 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069397365 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063591008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069097011 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063685726 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06594306 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063679161 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070641017 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065717507 seconds)
  done (took 4.926763677 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078464693 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067312417 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061424171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06138968 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066807725 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06841605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067255378 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067762305 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068118617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061937064 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068100139 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067608766 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067962352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067285641 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068484433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067676191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06149867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067628306 seconds)
  done (took 2.478696347 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072652405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066845697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071321958 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066430951 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066237677 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06631648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0618449 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061849567 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062780048 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06659717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06687877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066146478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062171291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066344501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066705855 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066901755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066470229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062520405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066666711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061933877 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066328035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062314976 seconds)
  done (took 2.706486729 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093929853 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082048643 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.127688085 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077987543 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085745856 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071855155 seconds)
  done (took 1.803810213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092424077 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097366243 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067025379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066997415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073436597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069847343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070371102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070430188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074994114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075014695 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07027785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075187276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074856565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077246051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072645651 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072657947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070695302 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070297382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069640122 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079991459 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070549279 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075346852 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071008961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070240039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070243958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077202778 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074720136 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075362472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070608976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07495292 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073241965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070805925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075486589 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075854996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067195675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075186488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070474733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080210044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073127612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077254955 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067425771 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072994529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075376218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074621739 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075565538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070867839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075015199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070816726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070797277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082086156 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073042133 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077003725 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072894489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075569523 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075191919 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081851664 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075679563 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076922166 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073237903 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075397219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076471808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07285355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076603733 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07497488 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072656441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076846855 seconds)
  done (took 6.170384407 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104096875 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067189022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070446636 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075204788 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076803193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070734459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070717105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070682881 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070741285 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06814524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105458839 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071156717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077367964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077584086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071182839 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070861655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070582439 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077297941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067582915 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081876844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070777476 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076789514 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076942059 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076941332 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075424654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073009682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070511553 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070263638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0706937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074744848 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070773848 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077023614 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067386079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076905546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070536684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070433288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074671615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070460874 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072934081 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077407375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080326831 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070897767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070569722 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075785368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070705929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070664485 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067559676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071149489 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067846615 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075294684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075406161 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075663704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076701965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071066246 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070618435 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070955383 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070459086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070359267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072795102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076988742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070385472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081554408 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071955082 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070511251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077008676 seconds)
  done (took 6.162898535 seconds)
done (took 126.210626455 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207597005 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184646835 seconds)
  done (took 1.647991768 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073271921 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103720798 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082898246 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133170384 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071441723 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104828078 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104091331 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083554257 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071158385 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071033719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07082777 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07307673 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136113996 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07121711 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0710859 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073275679 seconds)
  done (took 2.667656165 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108684127 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155091548 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113328461 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069084654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108781885 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079089093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069158105 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087097321 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077822355 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07138699 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079478097 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077688463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070861151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077776243 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077655149 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081736045 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070920512 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079280186 seconds)
  done (took 2.829703827 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11147261 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097154343 seconds)
  done (took 1.487150122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164096783 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13377677 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.195120122 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328739702 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.146361609 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.446743375 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138739728 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139581853 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112895486 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135998932 seconds)
  done (took 3.21420764 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102162596 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17450916 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300104014 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118578906 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.093141886 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112266394 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120474913 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.095764039 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086703956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086066912 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086325137 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077581684 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104793343 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076391249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075616505 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077050246 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105044934 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074752687 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.068570553 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077630612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10516274 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069748216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075942317 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074623426 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083562255 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084356273 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070929558 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0693608 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077558743 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.068300033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078366086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105628983 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083367957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108437092 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.088400053 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109322701 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075720967 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076445187 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.068239477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076851468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079168534 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079340046 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093101044 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076841139 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071111194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076381334 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071085327 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069839082 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079502895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08285164 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079206408 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078348035 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10817913 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.083569379 seconds)
  done (took 6.194409574 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10818953 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106366515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07108747 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112843828 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104206845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070296587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105850024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098522854 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107685472 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070891666 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069005351 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070892682 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079925711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08091285 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114442709 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107431834 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072663918 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070104886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10794622 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107370264 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069384342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101994624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097394973 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106408061 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06904879 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070526085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06898254 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07051149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076306577 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078060812 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069888073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079391233 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083601986 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077211822 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068060993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06912199 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069115841 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078023545 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07886386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07841603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076386465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068056018 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069109702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070407235 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069768542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067971958 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077346685 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07868816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077002238 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06917856 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070294774 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069050945 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069997768 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078380763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076122639 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078907126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078723879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06950059 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068898394 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071716526 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079335165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078109403 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078241159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069806281 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078278162 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069380298 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079655083 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082932484 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068973479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06997269 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06891722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071283367 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070114564 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076472025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07716434 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070326725 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069544714 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069260745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078590187 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077257378 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069117966 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076324304 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068306228 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069097724 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070386451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069954845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076058272 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078277508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070363041 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069068004 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069104637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068632043 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06765215 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075895903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078215876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07788609 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077209441 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070023825 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077987088 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077017406 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070290658 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077456613 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069045324 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070273941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069147747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075747989 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075202892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076762269 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067902716 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068174476 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074774393 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077204439 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070179205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074255826 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076797747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075372302 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067256918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07727955 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068220116 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076293433 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067611726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213034131 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070679149 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078480996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070156636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069333721 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070259654 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078068598 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070636937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069844203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071192253 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069238145 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077852159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081252118 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07096637 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076903165 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077338217 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070770227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077649001 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069290667 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078311012 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069130564 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070171837 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068290741 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080338398 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069532031 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06954461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06905596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078422439 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069788732 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078582449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076370343 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06849505 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081288782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078824614 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07610116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078915853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07137181 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069359254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069109451 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069308637 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076587649 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07790947 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070383267 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069624316 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076562315 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079171079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069017487 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076981964 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077333656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077262373 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069717628 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069628892 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080173698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079486991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077247137 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077512016 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077710157 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069892031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076747235 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077593152 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069602311 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083331886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069329535 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081985048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077783892 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075914455 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077625413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079010929 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079081505 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079274383 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081876999 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068863309 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069103888 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07749562 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069035566 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069560446 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077203388 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070985256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070756178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081708566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069492522 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07916028 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06846979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077872569 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068051438 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071127351 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082024154 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06958483 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071054387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078080677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069693124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077135865 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079406385 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07695689 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068993929 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070103535 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080634622 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078196009 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06912795 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069045533 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070516306 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076952725 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076358835 seconds)
  done (took 18.41059864 seconds)
done (took 37.742074067 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203108289 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152853674 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174538116 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113348968 seconds)
  done (took 2.001007837 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.104922739 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096654579 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087108129 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065587044 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.092830312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065704736 seconds)
  done (took 1.823521841 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276009828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.186544468 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173342331 seconds)
  done (took 1.943520844 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216978524 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181015829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.48309962 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279982817 seconds)
  done (took 2.544330325 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143473657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082340718 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064577874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08254012 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124392503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153174557 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092786623 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118468295 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076156073 seconds)
  done (took 2.290458064 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149890469 seconds)
done (took 12.082128878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.246724094 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232070045 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164950202 seconds)
    (4/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108626261 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072538221 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096300764 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069165934 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.116007503 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.231006662 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187255209 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10181311 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088824881 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078148164 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085512989 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076679448 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103773847 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197773754 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079292 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.187705805 seconds)
    (20/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.206830472 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.231848007 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075262278 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119582563 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184345345 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076467537 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074287104 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080163241 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129017353 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.209718706 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194329143 seconds)
    (31/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074906277 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091238818 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175162403 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076388875 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.12956092 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.230483429 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084709513 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065908723 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075046079 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.132403564 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074380911 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174699211 seconds)
    (43/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.135645675 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167669549 seconds)
    (45/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07464073 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074515347 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064751477 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074933671 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.132065787 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08151962 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076068136 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177480135 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.368523836 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078476045 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073908251 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.084319326 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076165756 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174676416 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.06703212 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066341721 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135901525 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073525777 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066112203 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06505974 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074368458 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073958495 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071611934 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072049257 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064514983 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086413736 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08762628 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075638034 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075987546 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.120136866 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124713682 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17087344 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076197644 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077214852 seconds)
    (79/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118475466 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122362862 seconds)
    (81/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073379715 seconds)
    (82/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074015215 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066856542 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135764821 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164146704 seconds)
    (86/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.174061883 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065169284 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064853396 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066179317 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165262989 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078410154 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06512566 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.184578593 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.080128732 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.167773295 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06468136 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.221808605 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08115735 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069925708 seconds)
    (100/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089028165 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067098411 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132296616 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073410276 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065706298 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.188710649 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067426923 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127743986 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18834751 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192567116 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066836686 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080246221 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06528956 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066635886 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066038403 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069753408 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06631573 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090153165 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074379439 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073941551 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101024976 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074513017 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066044581 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069231272 seconds)
    (124/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071760177 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06601181 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13564847 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113693331 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179013095 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.198816596 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067526902 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07207954 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065600746 seconds)
    (133/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11968818 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075730103 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066253822 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065671815 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091826931 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072383125 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073683047 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081820844 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075127136 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198155413 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073272674 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068542322 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074342847 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06708037 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 0.1480208 seconds)
    (148/309) benchmarking ("sort", Float32, false)...
    done (took 0.132329515 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08786333 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065168758 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087387425 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131414865 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070575663 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069300122 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06624194 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078541705 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073851894 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163629414 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220218119 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.1807982 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146838033 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144357678 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159329575 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090359503 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066341402 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0702989 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089800024 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066208784 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066660916 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06606644 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065721634 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078731022 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065773378 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065576229 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166376665 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065419748 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066477229 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211285464 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210454752 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067275914 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082485481 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065281282 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121534254 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074079332 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153301734 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066172692 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089039385 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11668139 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065835552 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111823026 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06531234 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134817096 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.173484039 seconds)
    (194/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066761833 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.131072968 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128830278 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066373342 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072132387 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067783471 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0658782 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065951004 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217727203 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065310531 seconds)
    (204/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065830498 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073102822 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071492344 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066329546 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163436363 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15985623 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087102545 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103556103 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071591494 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074288243 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072241537 seconds)
    (215/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066696036 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.296690358 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090604689 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078897309 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.136008653 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081649562 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170735562 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074675178 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075234894 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066568942 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066956531 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 0.131813105 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071087896 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072739724 seconds)
    (229/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066331537 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092906566 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067378333 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066333319 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067433456 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066683297 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066195119 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.121906961 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077613894 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066025532 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066764731 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073347981 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070129081 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141897217 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06639451 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066160449 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064787936 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092771414 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07387742 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208652099 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068038437 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07866982 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065796847 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06618081 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119090063 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066442157 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066318341 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08105135 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165087184 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068341751 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074046034 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065608197 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07013423 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075722363 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066563221 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090364783 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075471053 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066561584 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067506482 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073187631 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127872779 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067823357 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066395096 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067295716 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066571464 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090116445 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066199737 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067092977 seconds)
    (277/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180438259 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065862191 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067008749 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11153737 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066205946 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06655987 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066641301 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066272497 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066704639 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078555302 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066838347 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065218529 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172024013 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065906495 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06573551 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072465365 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074280286 seconds)
    (294/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092898979 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069691925 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072708357 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073493618 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117407921 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069454966 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06980156 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066202614 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074497406 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076697896 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067680912 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12049861 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086409108 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065681553 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066404946 seconds)
    (309/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065128353 seconds)
  done (took 32.432011552 seconds)
done (took 33.752192617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08563701 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097750588 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073136333 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092267614 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080473328 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094948767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07330175 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078561863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081074236 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080026167 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079081729 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072598043 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074894351 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074955036 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073447078 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097114238 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079670514 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073672862 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074019929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065804331 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073953402 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066109232 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065537749 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072627688 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077127605 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073331159 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075471365 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075098746 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066209068 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066339662 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070582544 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074497076 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065676905 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078140597 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074577786 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07392236 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076102462 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078391672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065615776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066412152 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079208689 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066073273 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073576951 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072328521 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070489398 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072513468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073847434 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0781289 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097218297 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070362928 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075635928 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076746072 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078208413 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07147873 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070807432 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073816263 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073504571 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096828731 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074211242 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070559962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075526493 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075188713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072134193 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074421135 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074167606 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076991269 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078077742 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072267026 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080176657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072912312 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065620133 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073875112 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070731041 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065911898 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07682018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078411718 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065189967 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070263203 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07389492 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074407449 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065894344 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070321103 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06759691 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070442638 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070373226 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071951583 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070974679 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073134685 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066118988 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074374565 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073042675 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07357035 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065239566 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078523951 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065939802 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071939914 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066108967 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06618714 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065072976 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070767209 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065882553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069766172 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074162281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064903976 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070064277 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078736438 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065782442 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072922473 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065108223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065196716 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077078409 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075583174 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06552765 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070050211 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065935064 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070995553 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065330479 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065299679 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065351849 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0658705 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070267693 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065496374 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07011007 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070759024 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077847026 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065528459 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070348949 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070045104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065465333 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071961529 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06527102 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066069815 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064517552 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078491403 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069447655 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065341496 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070093447 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06942319 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073120632 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064800442 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073233744 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07087903 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069545028 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070815836 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063940208 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075150992 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069001402 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068693711 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06414811 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064713364 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063708003 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064166125 seconds)
done (took 12.43505181 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069224932 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117034289 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092537475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091084321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081328241 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068616234 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07232408 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091084665 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067270019 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095997305 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086474245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086560776 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109273174 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065403799 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066425342 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067122715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067317534 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076432804 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093863641 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086538311 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104578064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066051906 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.084821641 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086875056 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080284566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088727278 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067148148 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067069591 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067292691 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085468239 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090193256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067716287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067594601 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090006725 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.083249144 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077633125 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067247197 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074737686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067755977 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066392821 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06800744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087205707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074555243 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077082785 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067452222 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073122063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06655114 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080650914 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082558283 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073592259 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.079641795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089223503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069500761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080861549 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065713239 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080559495 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075616317 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067273522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066916332 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070794754 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066888208 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067223557 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075573828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075383829 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070157145 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079649051 seconds)
  done (took 6.505578506 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084054755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089562759 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082862625 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083063607 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066062845 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067213951 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06671082 seconds)
  done (took 1.952363766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066789697 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086967298 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090278727 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092635384 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080700623 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09102976 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074706814 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066863967 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095484591 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066034861 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086487 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097105698 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070914204 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078573886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091679443 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067067458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090991661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067101714 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067560331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090944696 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071728636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094036672 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077916859 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067220226 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079637645 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066241989 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099214444 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075106119 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068338975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068317828 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068005789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.095164659 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078801163 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081090013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068483812 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082179665 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08083825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070399802 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078000331 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073283418 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080158621 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067952193 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065920578 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068641087 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070467548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078580107 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066079237 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068784047 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068523819 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085921434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065689308 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079155709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071135939 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072999237 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07268336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071892983 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074948585 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068568519 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086563269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067994149 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084474601 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083222007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080217362 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083119623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067423631 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079313033 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080413386 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068328341 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069078281 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068645541 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083065096 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070499141 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068640835 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078581794 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066966909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091078506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090958635 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0668317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080171664 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066732892 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068892344 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078737483 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090737713 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07230552 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068150528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071183237 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069274824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070556972 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066094964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071191669 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06818141 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072720028 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068121059 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070452716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069795711 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083552444 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066315299 seconds)
  done (took 8.768525151 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069817018 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067991973 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069482328 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067885086 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068154536 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068143026 seconds)
  done (took 1.85168326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090694818 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068626925 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080617709 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068009384 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103471477 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082312118 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082158038 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077449873 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081736046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079657325 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081897408 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083687105 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087263666 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070601244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081818836 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068950779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081883516 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07282936 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07970217 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071331001 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080758926 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070196524 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070279985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086240767 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070315951 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068822767 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067901165 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078856103 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079217616 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077363205 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069634631 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069791109 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074486411 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077177253 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081973355 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074339393 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067640549 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071947389 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069494694 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069829435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083677727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070053055 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070483186 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071724442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077088996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074680271 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073693067 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072064065 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081069928 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071782544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071466475 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068730957 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070108266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072075141 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074559447 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07730456 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072273596 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081468211 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069949804 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074710354 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068104541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070581015 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077203925 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069777443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072762406 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071769167 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074947984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070241305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07044279 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068013348 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07168759 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068228492 seconds)
  done (took 6.813317273 seconds)
done (took 27.326236939 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515644134 seconds)
  done (took 1.90847729 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622258151 seconds)
  done (took 2.044361925 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.550629177 seconds)
  done (took 7.967052579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.369259047 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.443643849 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718053626 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135051074 seconds)
  done (took 3.123498358 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707620138 seconds)
  done (took 2.128958122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236382642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225848849 seconds)
  done (took 1.897476098 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345652336 seconds)
  done (took 1.760082852 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.058202608 seconds)
  done (took 2.471567911 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233869688 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161001726 seconds)
  done (took 1.815141353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.433915084 seconds)
  done (took 1.850323046 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.259980841 seconds)
  done (took 5.676788084 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224223452 seconds)
  done (took 1.680018507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240749778 seconds)
  done (took 1.661864449 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.732368411 seconds)
  done (took 3.148473112 seconds)
done (took 40.56559054 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082780064 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086239118 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085155136 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081462768 seconds)
  done (took 1.734296473 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07489986 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070997901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074808589 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070573654 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075193992 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070774593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072427886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073384343 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070738483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071241878 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070982677 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073785652 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073782976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072588418 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069705498 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073889428 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074562426 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071540472 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073552961 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07086439 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06916164 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073944505 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073917943 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069970115 seconds)
  done (took 3.15698128 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078610413 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073320166 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072587406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072103126 seconds)
  done (took 1.720751668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076903968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088223406 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086104176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077264335 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088535479 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084004313 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067283129 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067134841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068558751 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076615786 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066226886 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092954597 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.0860122 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076771023 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078766452 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06380219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065784205 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085373333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077583384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.0778974 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068631396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077244846 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066382489 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087502122 seconds)
  done (took 3.271764959 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081537214 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066541077 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08137178 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091706729 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093287607 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066580843 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079781334 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093506055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136307037 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066489987 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07227652 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066924239 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10477164 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066733147 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081071869 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109369984 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112718705 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069802178 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098934976 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066572508 seconds)
  done (took 3.136319128 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08387737 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069614742 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070549144 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068706122 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076825908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073113438 seconds)
  done (took 1.875100829 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068634767 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068033462 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068010384 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067585391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072939221 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067476966 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066525877 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068322201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068402205 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067873762 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067520458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066635307 seconds)
  done (took 2.244104783 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189294268 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068606686 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068708516 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06627838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071316803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068094199 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083390928 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068486702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093590272 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066976586 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066881125 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069499098 seconds)
  done (took 2.408617954 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192390664 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073727095 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22171183 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144435005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102039029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108835418 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111251608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108756223 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133345377 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0976847 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152180326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160098583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102660378 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131063298 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086781439 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118504385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14389188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154033887 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098920985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15418019 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13405014 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121192414 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142483681 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095999289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100923296 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112771634 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07206503 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077017775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158880963 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122310039 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13543891 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104257367 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089589463 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166002254 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15664964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131744449 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14130374 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081217965 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120437213 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128253836 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189755423 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086154627 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147399302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101387897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076655783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122108843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109316783 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114752646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099202798 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085149366 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27531681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172911469 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127082427 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083281744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116455694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104420979 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109334886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11356497 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169419618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148827998 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120359177 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069430806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106366522 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142432338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126654563 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104002452 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117277306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089748939 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123327368 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148243246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117988827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132813346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112470112 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087284339 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11544763 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12981 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120829951 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161383416 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117339138 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070527918 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115760023 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095033197 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077988427 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14111028 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073565561 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163395318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095136515 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120303564 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12534743 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104840319 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10425576 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149575503 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134092552 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100462994 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083253212 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098733904 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113428646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136523669 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083355135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103044509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108587167 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07643927 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125269018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.071853886 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113427169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091306148 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112677811 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117901588 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.224337946 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120057341 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099144818 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099490846 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121706038 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148403374 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085452641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079582532 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155740865 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116514813 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100043399 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13356172 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147941961 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117786959 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094082367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137736523 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163115353 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08705915 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151734053 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098677588 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081195169 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102442534 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11768829 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106467948 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117795538 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078581364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115319908 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153014686 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07197189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092877295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125544069 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078941235 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077900718 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100847487 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100222442 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093558801 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097782975 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100933507 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130617309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116929683 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101430146 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118027702 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093866131 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155978468 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08502689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101216691 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10051297 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070398986 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125694057 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146632018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076343018 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150072652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116226698 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109998273 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113739878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080022413 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128186032 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075973133 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070297962 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13158384 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107477634 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101366266 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290339517 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110028992 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118213699 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11495331 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125403568 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122720146 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122261552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102447724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086677999 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111069887 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123026618 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070702166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089403817 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079732432 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099072706 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090537573 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081398572 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131404727 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114889934 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106726663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110580592 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093261656 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140454041 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076416733 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118347737 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117400887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091987261 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145524976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145410234 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125334178 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097197479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129593762 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071262837 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072550308 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086161406 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118642815 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081372473 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081500025 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109122677 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14104078 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120645005 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130180231 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118128596 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111078057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148429127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070839612 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116149377 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135917399 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115347578 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100752835 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08793959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093604302 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134868213 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09935981 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169276837 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109312657 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117550721 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147353503 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09720845 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075772242 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099561016 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273748018 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098981959 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135855483 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097643563 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0842683 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105590724 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076161732 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095757726 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119500191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112032038 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129695657 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107650542 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12650422 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075912428 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107749728 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117968454 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115823201 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081411294 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112256228 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155800331 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093607441 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111761924 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142203386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076612382 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134323756 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162127329 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137024584 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081997643 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101034986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116353078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120644467 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114530165 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131062046 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100555309 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131396702 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106277812 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083086164 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083746448 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091965085 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099694092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107968893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100996068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110331489 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092672998 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123295055 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099202847 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106441603 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114427576 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097271507 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092791702 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093004415 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163592089 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111513862 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157008518 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095513008 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132782734 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148642281 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072196167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075379648 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076561344 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275818089 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082834366 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124683477 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108256285 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11098155 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117730472 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129933737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092908631 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069632555 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106162061 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126127994 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116843287 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09287256 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099751578 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1479769 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114068155 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076670559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107008467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110748915 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099566528 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163457419 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079271266 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104460458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074733252 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07741662 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120285727 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14270954 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081194479 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100648947 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116034864 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107114201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120536821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094994786 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107199579 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124983721 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139376422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120127392 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087408707 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106477135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12377792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144792816 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100741491 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097107307 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164525312 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142939926 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149050043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085059599 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112917092 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110733419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106035079 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130592891 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081963992 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150695504 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078654706 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125515317 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096422171 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086032501 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120282494 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106930417 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083669813 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284473365 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113651656 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080883357 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078458441 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107232322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113577618 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09886539 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073257404 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130851109 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072197938 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129106949 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159519311 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077971624 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101158491 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092966692 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079596195 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099423291 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09754292 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082847374 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09656887 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159381522 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085494088 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138228516 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126366229 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106299737 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132401579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100369782 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640233104 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07771531 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143341322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111108037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16572723 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095317242 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114220543 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107090617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115349335 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134930344 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098521822 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174513044 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123512557 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113056353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076834509 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09812911 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099331981 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086079053 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102032918 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110143416 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108660319 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091661963 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112955958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116125238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079836737 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092974721 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145751386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109491964 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132384593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129307501 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081487149 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112172748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276294888 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07860675 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113597155 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143323812 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101679082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096843638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081365727 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097144483 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162890569 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071199565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149921705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114404873 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106394967 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110768829 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108010907 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123714432 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100270422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115177677 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089843175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140160813 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108826599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080910447 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077090241 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101694374 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106821442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096021928 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09452865 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096242279 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142735677 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070876626 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094809877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10971205 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136487421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160673796 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102341155 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08137479 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113661355 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113743595 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110167491 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11547505 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079149827 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07847814 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079976569 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09702927 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120654234 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109078119 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11380683 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1059113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150993453 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081254118 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222705483 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092659961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101370499 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086593483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078123301 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092932312 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093271216 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099436114 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105829084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160425611 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090695811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0861504 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087963243 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072195828 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08018788 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268712449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106314551 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113751581 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100365454 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080366324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100162154 seconds)
  done (took 56.540797181 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.102940821 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077165772 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097562766 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143717993 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121004035 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199175875 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150261205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188696104 seconds)
  done (took 2.607024148 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068587587 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081315616 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102889938 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082400111 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067242572 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068483525 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.214506238 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080762555 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066328037 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090048722 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077281221 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068561862 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.419838442 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066594914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06725204 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075505932 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067386153 seconds)
  done (took 3.281800008 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382817967 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.801937168 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351126345 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075999587 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.526762659 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090835493 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.66385107 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163043312 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083161052 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.728093099 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.377742128 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156376596 seconds)
  done (took 21.929990375 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081251531 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075446966 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089996095 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090043648 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077366013 seconds)
  done (took 1.938789362 seconds)
done (took 107.289169194 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08081501 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.508973757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069346167 seconds)
  done (took 2.126371203 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090476147 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088950413 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088600356 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086661418 seconds)
  done (took 1.887627056 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074845952 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076300031 seconds)
  done (took 1.675737649 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22806749 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172457456 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095423142 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089456275 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079476622 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079632535 seconds)
  done (took 1.776982959 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0724497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072659436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073183136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073325849 seconds)
  done (took 1.814077977 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067652294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066439287 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069263748 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071871662 seconds)
  done (took 1.798492835 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084335425 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083792876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079530619 seconds)
  done (took 1.770585521 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092974486 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089806018 seconds)
  done (took 1.706853807 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080797756 seconds)
  done (took 1.605151273 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088665393 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098584467 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126819758 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112009557 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13163042 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110751603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076755791 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.080131958 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077772986 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.079394935 seconds)
  done (took 2.504546387 seconds)
done (took 20.765330915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078539778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363119993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359819897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085981569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.661483542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35693366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970163885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086182087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133522285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068244159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084254774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649774579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960796659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322023934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945254463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325208682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652550898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068614935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067897355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068267009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954841901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068143946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067902287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069007075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.661879711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373943887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069162776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323335957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068816788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070775658 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356052857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069121059 seconds)
  done (took 15.966396607 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070051326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114267805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073166544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083318153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070619694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06997704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071616477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069457098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113711838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068444418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084543283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068088192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071875993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06913444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087101591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069033643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069993924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069604125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069753226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069405417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087791197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069315599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069121166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070118621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068970622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081232829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069720607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069640854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07197387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071208112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072702252 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069871469 seconds)
  done (took 3.940061421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113427576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116587211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073418833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103723163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103862733 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070561728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144149199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08719089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118347489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068431433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084723962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06876043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102523668 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070299761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088541698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069807859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07047802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06980836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069486542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069218146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087597485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068870181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069060728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070117302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070181903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083594121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069792473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069804618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069457365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07117588 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073016585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070163578 seconds)
  done (took 4.174509816 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06992184 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072984509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083934018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08092929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067042382 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070204568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070877099 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067525091 seconds)
  done (took 2.125137962 seconds)
done (took 27.736378048 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077876154 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068003637 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071507619 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087177044 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073250854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078680287 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065549134 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074490102 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071605039 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072143896 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073336302 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067494685 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07091519 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065936839 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073465598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066937117 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081804357 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071241981 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080546505 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080740879 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069436254 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073012541 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074758966 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080376269 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080677149 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080746345 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076423558 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072603105 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068166724 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071029103 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069933035 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079224509 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080918833 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08146995 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067773188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067676284 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071398218 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069058619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081746933 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076316554 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069122684 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076367373 seconds)
  done (took 4.626434278 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083927956 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088695207 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082471181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078873254 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089637522 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082711062 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086212191 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077554472 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077471788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086147914 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073884431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080160073 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078326525 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072209333 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076934015 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074130558 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079541402 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073439552 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077582206 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077816697 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086357175 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072580093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087233206 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080388349 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074254766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080077027 seconds)
  done (took 3.627935603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073274254 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085492221 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088861554 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139526922 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110185682 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081176563 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081456153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091584286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097221958 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069647654 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073037641 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093109848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092690755 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074243239 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072873656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083937161 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084139608 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07123218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075059321 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096940337 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088811969 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084896286 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093310974 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084614261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06861923 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070852171 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07641996 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084149354 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075129751 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07946412 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073394639 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071752856 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071361868 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078688327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072504369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067837818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092036077 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079153335 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081183368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069258179 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077411644 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069588141 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092620077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120474872 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068696202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072191478 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071376873 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079123528 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069451486 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094971111 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079271199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06871537 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068338771 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070518961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069233906 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078173724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069519698 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070130947 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077943713 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074235149 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089185046 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074340638 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084966802 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069185653 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077621715 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070739769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069489978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066707326 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095697834 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074773513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109298686 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069194821 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066329571 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07860839 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078054815 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073792604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067612346 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084951852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07941003 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071637251 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078678 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071068162 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071418355 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097792916 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068538359 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067600142 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066677693 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071678807 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071293973 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068883447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079688577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067115843 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071529366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081016647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06837364 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068913687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071627343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070699134 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067361852 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078236566 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07216251 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069037356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078084971 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069365767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071850525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082001473 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074614222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068702336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069887774 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07139125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069183181 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07233492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071046521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070865953 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074586779 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074395861 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073786623 seconds)
  done (took 10.633746429 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160010128 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153596679 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070474284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140354385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076423471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079747928 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14366207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094786656 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06819619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069512019 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068441878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.105231183 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.100918385 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110836423 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080427834 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068836761 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090923018 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11044642 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146402288 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139814942 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090888421 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076370435 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070989695 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070482033 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070280146 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078388566 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085113834 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077260956 seconds)
  done (took 4.285749819 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078422562 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105464707 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074701308 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0912916 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087960348 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068675799 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070586482 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06829873 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085602994 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075715394 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068633648 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073740356 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072881677 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071780873 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069254364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080804192 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080485803 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067600246 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072290478 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075849563 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078025693 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093020285 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072157725 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068320062 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07139778 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068268536 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076812862 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081172915 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066806961 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104035058 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066376299 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074837756 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084455863 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071051882 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068087844 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068792353 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068964348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068586539 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071886184 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06691451 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067524485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072292917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067278091 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07652917 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082891042 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072237594 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070242165 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071232709 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071368874 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065876324 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069612622 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06979375 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071216155 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075322606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071667023 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071686409 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069302094 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095353088 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07645256 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067845843 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06744484 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067207376 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070710923 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080177051 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08500045 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07079301 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067405648 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068278389 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081135867 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082194202 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06818475 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074810666 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066159289 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073543571 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071024046 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072431264 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069399606 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067258276 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068103229 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068539766 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068013737 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06818257 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068213822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071388783 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066836077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067866082 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068756065 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070761486 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081134118 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067741337 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072365622 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069504032 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067216855 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071245682 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071899657 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071415713 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084661044 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079915024 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069307575 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067445158 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084189798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071135448 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067870275 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074050592 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071722614 seconds)
  done (took 9.292202555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089197355 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066635841 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084578712 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089817457 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078009017 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073799162 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076085793 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066638676 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080992961 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06771102 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077210638 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06730995 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076401225 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075165317 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067051255 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076542007 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071864835 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085789283 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082993225 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067143427 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075189321 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079869836 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08024332 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082789203 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081722857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08335552 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080457637 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071292597 seconds)
  done (took 3.747424664 seconds)
done (took 37.751044217 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.630372963 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.877755858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.61520763 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.2425942 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.880101977 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.62731532 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.698836017 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.60643569 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.874928916 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.657941444 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.927124916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 6.60648269 seconds)
done (took 65.928664034 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.692940012 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.762045713 seconds)
    (2/2) benchmarking "String"...
    done (took 1.870801243 seconds)
  done (took 5.180249988 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.852245209 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.607089895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.135954252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.60670311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.613015452 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 4.45792648 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.473981966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257976966 seconds)
  done (took 32.702080803 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.764148313 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.833218719 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.297819232 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.339703065 seconds)
  done (took 14.831809863 seconds)
done (took 63.88860355 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.624027798 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.656150782 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.605779414 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.60505272 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.67715042 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.617510424 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.72483702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.629157868 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.604159227 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.609571519 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.606873274 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.0759198 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.617142051 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.748781761 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.606071971 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.605901094 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.666824575 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.06759703 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.773198306 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.619633411 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.608699364 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.667780693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.609400633 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.602200554 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.610185905 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.605575304 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.981304486 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.618628265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.4380998 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.609153572 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.662465426 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.01538609 seconds)
  done (took 198.318187255 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.606711374 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.502653805 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.598571605 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.616993445 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.959675151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.795739305 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.708115117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.052665668 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.611881571 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.613144968 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.794766583 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.608419622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.82414516 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.553528031 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.646889172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.641114606 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.768960161 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.838755272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.650014694 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.768923494 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.625257314 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.736045977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.671635127 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.789516758 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.613395959 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.640666343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.62647126 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.639451426 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.794676695 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.726294332 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.613640438 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.630170911 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800551173 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.477956287 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.618965153 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.62657206 seconds)
  done (took 163.342278153 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.258789379 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.609426085 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.609001834 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.608890889 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.613706084 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.608715131 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.728648233 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731470605 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.260561269 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.138015564 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664690728 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.608654737 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.609240812 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.3977408 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.6099784 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674815531 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.62080434 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.609212069 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.624257228 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.635138665 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.612116125 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.609359374 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.731316026 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.623737297 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.60840898 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.617016799 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.609808654 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.614614498 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.995489889 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.608610184 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.625443813 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.611186087 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.615546488 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.849897482 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.611507747 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.60973546 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.445411872 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.702405421 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.693007739 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.612383091 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.615939772 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.611442942 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.827978336 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.610484037 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.610398716 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.61054541 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.61081634 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.734848011 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.611775686 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.728782244 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.612984098 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.107174082 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.613523271 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.610808564 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.974912948 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.218963654 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.614383005 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.613445333 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.611064511 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.611617127 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.617763606 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.977059145 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.685961863 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.610983284 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.612663082 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.612140022 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.61749907 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.612569005 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.787335669 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.611285359 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.723913698 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.625900344 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.736335241 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732890038 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.614884099 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675720369 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704360046 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.611749868 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.610798235 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.611115806 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.611920558 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.692406092 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.611733309 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.690750318 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.612634909 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.621548663 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.613112618 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664601908 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.681642407 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.612432642 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440462098 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.614986369 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.61281726 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891610765 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.679084911 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.61243147 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.611846455 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694332699 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731703158 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.344821261 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.614381353 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.993578257 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.615066536 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.688502546 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.613583711 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.737870998 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.616562398 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.69272313 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.618340107 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.614928122 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.648222837 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.613017391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.625616469 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.613398931 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.98518815 seconds)
  done (took 382.031007963 seconds)
done (took 747.558659583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.224169445 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.182126378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.287785998 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.20592962 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.183211175 seconds)
  done (took 12.637469237 seconds)
done (took 14.190231628 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.69059305 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.696910526 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.631744949 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.694824195 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.627934966 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.693095336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.676979666 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.635791618 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.663214985 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.637371921 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.662570822 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.636228448 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.621986499 seconds)
  done (took 23.123038856 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842925578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.850635391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700405096 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.846607643 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.665913343 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847068124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.772885707 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.758075585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.756524961 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.624263702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.626614655 seconds)
  done (took 20.846514274 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.847852628 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.852441424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.690830092 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.850167907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.66140773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.854363808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.772322327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.760588954 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.757669117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.624728422 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.624256984 seconds)
  done (took 20.851510084 seconds)
done (took 66.374072424 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.616898029 seconds)
  done (took 3.172160148 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.635039055 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.789858076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.617066253 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.618561546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.616690571 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.616846386 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.617339371 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.617346796 seconds)
  done (took 14.684384086 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.618769787 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.616716883 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.617430434 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.617538446 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.618209436 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.617426606 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.618133523 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.617683873 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.618429509 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.618353685 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.618059925 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.618010008 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.6193533 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.619132701 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.618400995 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.618543041 seconds)
  done (took 27.44621887 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.620530882 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.618056967 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.619647071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.618124813 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.618584368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.618907591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.619468806 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.617895885 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.618392351 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.61923963 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.619088061 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.618593151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.618717968 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.618449652 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.619875048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.619150857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.618434565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.619047731 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.623966558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.618983192 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.620767185 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.61906165 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.619258926 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.61902903 seconds)
  done (took 40.419916771 seconds)
done (took 87.277013019 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.480099672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.373265693 seconds)
  done (took 9.410377505 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.61910871 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.620680077 seconds)
  done (took 4.800629217 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.618995047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.619013222 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.619715053 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.619540127 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.619911831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.618815172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.619497084 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.620304192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.619852853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.620142109 seconds)
  done (took 17.753401012 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.619772321 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.619717377 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.618857299 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.619640513 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.619774711 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.619119528 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.622112625 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.620565113 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.61974069 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.620778117 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.620025212 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.620391115 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.621473635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.620478035 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.619897182 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.620890958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.619841988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.620719652 seconds)
  done (took 30.722810257 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.620746753 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.621733907 seconds)
  done (took 4.801015692 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.620763855 seconds)
    (2/7) benchmarking "second"...
    done (took 1.621075215 seconds)
    (3/7) benchmarking "month"...
    done (took 1.622373634 seconds)
    (4/7) benchmarking "year"...
    done (took 1.621720042 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.620709013 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.620997956 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.620500402 seconds)
  done (took 12.906272492 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.621885839 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.789086928 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.859497539 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.251571799 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.62118399 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.625377841 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.495336871 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.62546767 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.626364441 seconds)
  done (took 18.075713644 seconds)
done (took 100.026816337 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.432451704 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.620987707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.866578766 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.687624183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.645379423 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.914415421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.658079613 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.126986648 seconds)
done (took 41.511634835 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.714215699 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.237982735 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.288943871 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.654584611 seconds)
  done (took 14.743040112 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.626647738 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.046232265 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.644756379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.471139428 seconds)
  done (took 21.429337841 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.997979142 seconds)
    (2/2) benchmarking "read"...
    done (took 1.907568109 seconds)
  done (took 5.469478012 seconds)
done (took 49.917344111 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.624671038 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.623078815 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.624037811 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.62400732 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.623745201 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.623767821 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.623726568 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.623711571 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.624157175 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.623733122 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.624194835 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.623427918 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.62411111 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.62411593 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.623463757 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.623743489 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.624247001 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.623953262 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.624714145 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.623742987 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.624785881 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.623716059 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.624276783 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.623887943 seconds)
  done (took 40.536398499 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.624511153 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.623758923 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.624943971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.624399934 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.624627544 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.624773922 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.625215181 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.624761294 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.624891851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.625767694 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.624655769 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.625715454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.626977246 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.625319413 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.625666234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.62587501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.625649281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.626636466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.626444197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.625934905 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.624877471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.624735504 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.625318992 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.625924235 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.626904985 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.625919077 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.62479812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.625755389 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.625918841 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.626335197 seconds)
  done (took 50.326235356 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.625169652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.626594488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.625221396 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.626744342 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.627000045 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.628185525 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.625967316 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.626098286 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.626553591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.627254828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.626877434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.626424555 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.626331998 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.626466635 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.62655701 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.626237436 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.626167338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.627289794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.627348441 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.626091683 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.626050715 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.627778891 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.62655943 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.627175069 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.626666519 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.626885359 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.627230122 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.626298954 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.627121797 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.627049635 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.628555514 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.627475709 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.629330305 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.628203023 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.627572258 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.628536824 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.628199405 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.627667876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.627125214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.628191534 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.629306373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.628163151 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.629463993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.62867248 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.627636385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.628456606 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.627818057 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.628415964 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.628713324 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.627682208 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.62755625 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.627845514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.628217923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.627860609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.628621784 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.628269163 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.628526436 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.627901893 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.629434277 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.629026944 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.629516744 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.629405509 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.628767731 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.629317996 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.62906035 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.628908011 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.628917165 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.629034264 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.628997973 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.628423255 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.629188933 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.629114121 seconds)
  done (took 118.763659776 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.629906702 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.629180999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.628949367 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.628945583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.629581033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.628892794 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.630955251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.629246159 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.629955095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.629497901 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.629418717 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.629969986 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.630653596 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.629962496 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.629499177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.629794178 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.629596208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.629487821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.630143225 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.630730501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.63074765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.630292497 seconds)
  done (took 37.422040781 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.630616498 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.630318126 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.630704962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.630887755 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.630039642 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.630701464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.631482784 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.630906774 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.631769517 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.630664284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.631310493 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.631897701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.630528609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.63183001 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.632469595 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.631096123 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.631685446 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.630868545 seconds)
  done (took 30.92761372 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.632350743 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.632179377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.63152118 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.631914132 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.63232017 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.632223438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.630498868 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.632114686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.63117146 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.631685741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.631622148 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.631298984 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.631944945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.633155504 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.631236741 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.631574854 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.632077655 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.632097064 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.631905762 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.63231873 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.631595694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.631479815 seconds)
  done (took 37.469699518 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.631765059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.63141221 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.632798061 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.63274712 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.631303421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.631669665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.632631547 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.632050039 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.632183953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.633114736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.632173469 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.63275518 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.632582107 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.632850411 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.63319047 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.63331012 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.632428968 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.633789382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.633180813 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.632642852 seconds)
  done (took 34.220063694 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.633099165 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.633288867 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.633012931 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.633477819 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.633163912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.634019827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.635215214 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.633246767 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.632475898 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.634028269 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.633144728 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.633989778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.634783038 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.633816905 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.633591249 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.633696787 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.633339755 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.633554785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.633983234 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.633595881 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.634225451 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.633451513 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.634173394 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.63406829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.635210676 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.633525551 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.635128769 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.634002987 seconds)
  done (took 47.317042886 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.634844426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.63367867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.635402584 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.634064258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.635207811 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.633887779 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.634743163 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.63508281 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.634657402 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.634341569 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.634051773 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.634584436 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.634055555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.634631804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.635170613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.635186602 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.635428725 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.634744323 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.635906875 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.634963571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.634940528 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.634558885 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.635338252 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.6354314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.634866505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.635872796 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.636514766 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.635687053 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.63490217 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.635291128 seconds)
  done (took 50.620012121 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.655677276 seconds)
    (2/2) benchmarking "in"...
    done (took 1.658133285 seconds)
  done (took 4.886686684 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.635092618 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.636247163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.634912604 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.636356896 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.636329882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.636194492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.6357586 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.636533663 seconds)
  done (took 14.659853459 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.637276857 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.636522736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.636991011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.637111573 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.636374011 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.63807436 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.644495971 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.637253413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.638703041 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.638630045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.643081476 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.644838946 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.640450227 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.637610042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.639232077 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.638324651 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.637522652 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.636468526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.63631432 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.636757298 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.636890328 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.639909783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.640246017 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.637447797 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.637797858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.647618329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.642871415 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.637697433 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.638160449 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.641234177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.638966796 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.637954083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.638130106 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.638262482 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.638444069 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.637455459 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.646168392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.64000298 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.644984215 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.638402018 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.637592299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.638789783 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.640136302 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.639753818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.640593195 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.637619545 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.638155193 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.638768657 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.639464078 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.642187016 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.646497461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.638993961 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.63738833 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.642180901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.640342733 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.647090519 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.640014931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.641642842 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.648268618 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.649306667 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.650999539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.647898052 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.642082346 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.63892235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.648274152 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.663077463 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.647173323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.639805213 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.639578645 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.639982494 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.646365499 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.650485549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.649195409 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.640037544 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.640679996 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.640252274 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.640981869 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.639542499 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.646967124 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.642386066 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.640570737 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.639843132 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.648477381 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.661599997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.64047613 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.639793622 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.64055606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.640245435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.641779932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.651986393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.641844503 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.640486426 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.641129263 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.640881963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.643174404 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.639725695 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.64123196 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.642146531 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.640829147 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.641679276 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.64060077 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.644041748 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.65002404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.640731866 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.64093437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.648159987 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.641888457 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.641870089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.649137066 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.642155316 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.640516718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.643882697 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.648445048 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.641466922 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.646104993 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.649529279 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.641794379 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.644560426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.641139405 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.641740454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.650528212 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.666895165 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.643092102 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.64217374 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.645973609 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.651849329 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.642391139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.646072915 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.642355249 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.643154892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.642295228 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.644684224 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.642844617 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.644618337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.642727753 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.644794548 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.642007711 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.642512699 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.642047335 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.644503115 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.645355699 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.644720963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.644696855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.645760516 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.642529528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.6461031 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.649883949 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.643414858 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.645713036 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.644838095 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.642791184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.643609877 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.645419238 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.643752697 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.64539207 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.643511782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.644564408 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.644138365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.643026242 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.643939199 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.644565906 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.644558296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.650948636 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.643897095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.648238557 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.644233145 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.644834497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.643934958 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.644575028 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.64503632 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.64356223 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.644464101 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.64814043 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.651518779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.644024282 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.644337156 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.648517368 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.644992387 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.645565486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.644672357 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.648214777 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.652970332 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.645149778 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.65244895 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.645580594 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.644769985 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.645207526 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.646384287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.645222912 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.64532468 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.649086028 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.653336552 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.656608381 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.654610927 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.648058125 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.649606411 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.648862045 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.64853654 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.650552954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.645009452 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.645757039 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.645522047 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.646698456 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.645690491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.647097754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.645974306 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.645686875 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.646280432 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.646401317 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.645162137 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.645498923 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.648160798 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.648607331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.646269582 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.646615863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.646001531 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.646759732 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.646633223 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.647423033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.648098963 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.648978958 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.64846866 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.655299261 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.648717107 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.650055405 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.650230254 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.649600328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.647818175 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.646381476 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.649279728 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.647676054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.654171902 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.648307272 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.649027895 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.653941529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.649084676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.647834621 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.650645353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.647747707 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.646913294 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.650903756 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.655920354 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.647942633 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.647049795 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.64719374 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.649569051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.647683541 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.654218069 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.647872008 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.648153176 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.648154144 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.651171434 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.646973213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.649648816 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.649538149 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.649742019 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6511135 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.64889019 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.648785195 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.651028756 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.648071773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.647234997 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.647901968 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.651930783 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.655135185 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.65388287 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.649864896 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.651315421 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.651202226 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.653374803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.649489471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.648802708 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.649185234 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.660425853 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.656338781 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.655697152 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.651808072 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.64843482 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.65490569 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.651584575 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.653583369 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.650018893 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.650616561 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.650329381 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.649696688 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.649085142 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.651994736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.65075418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.652186483 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.650992056 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.652793187 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.650425281 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.649979978 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.649332416 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.649383733 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.650101976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.650741529 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.650832663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.652756587 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.653418516 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.650681045 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.650383112 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.657965492 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.652173192 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.652928721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.65189637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.650686421 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.650989918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.652857747 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.650250455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.654910035 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.659332814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.654058489 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.661080563 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.652285359 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.659957371 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.651320101 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.654610064 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.658157811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.651849411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.651828864 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.652592664 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.650490583 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.659987265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.651276637 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.65193323 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.654764217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.651021458 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.651298077 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.651587001 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.65087111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.651125145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.651600252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.660400272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.653424938 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.656999012 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.654266859 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.652459779 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.651290931 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.652658314 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.651857424 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.656303859 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.651821019 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.654147299 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.652462095 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.65323079 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.651978879 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.651964194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.653799708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.652483491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.652268841 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.659968451 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.65420993 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.655652578 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.653370333 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.66040005 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.652005355 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.660729275 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.652431393 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.654850282 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.653679724 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.652641547 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.656076621 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.654418709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.654897353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.653668139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.655535119 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.656728638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.653523464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.656508465 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.654111966 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.653947195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.656047436 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.662539464 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.675671503 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.655572275 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.657300656 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.654096071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.655776378 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.656657035 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.653761998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.654531605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.656286231 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.664427379 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.661250619 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.655059625 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.653561906 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.654856281 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.653765723 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.654611011 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.65485722 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.654755892 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.654043411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.656395835 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.653736757 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.659065991 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.655073934 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.656264492 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.657097525 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.656068136 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.666626182 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.65474445 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.656648718 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.65518718 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.654664454 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.655021052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.656606728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.654661414 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.656515237 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.654859324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.656901066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.661785896 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.662584491 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.658302087 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.65603479 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.655191639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.656694792 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.657052317 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.655526891 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.655211717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.655404027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.657759666 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.655578575 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.656881183 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.655870343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.656194257 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.657599292 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.656512045 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.659478042 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.663736822 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.657200368 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.65661931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.656361086 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.656013572 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.655513302 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.658209427 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.664924896 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.659899889 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.667440441 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.665070345 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.660956156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.657603916 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.66081002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.665279374 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.657375229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.658857411 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.655744329 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.658534698 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.657976801 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.661340247 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.657132445 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.664541337 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.65790006 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.657856627 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.665238253 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.659676108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.65702729 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.65890447 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.661979263 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.658457022 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.656816837 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.657069985 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.658337312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.664671635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.660632562 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.657418231 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.65962186 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.657270676 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.659448998 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.660960756 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.657727225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.659758527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.657717515 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.6601174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.657423385 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.658090369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.657433895 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.659410596 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.659076273 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.661619901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.666516384 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.657700829 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.660788586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.659279557 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.660376864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.659437764 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.659522676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.658941815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.659472772 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.660080163 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.658485325 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.660486343 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.663059868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.659525428 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.660995607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.662769264 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.659430247 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.663208835 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.669797477 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.665949621 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.659189763 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.659580482 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.660891557 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.662670119 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.659750169 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.659231854 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.661348408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.661671514 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.659852924 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.659630616 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.660110208 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.662451699 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.676291876 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.662576513 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.661202545 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.660573287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.665241695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.659925176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.659670561 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.659915964 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.663694053 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.663390798 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.668242289 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.659929881 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.668043395 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.66167786 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.662431467 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.664262575 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.664938192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.669506261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.664039134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.660778833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.660808288 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.66569022 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.676884571 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.66062755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.67037814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.69053399 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.662658101 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.663620902 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.662711974 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.661915872 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.660700572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.663075546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.66127915 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.661659588 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.662507359 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.661376304 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.664228394 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.668780406 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.663723942 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.662437135 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.662772144 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.662795388 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.664288679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.662228281 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.662430365 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.66202155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.662909567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.662223355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.662385774 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.663665383 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.674648447 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.673686055 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.662680747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.662215323 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.661758545 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.666436782 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.665127999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.673057721 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.670428357 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.662181368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.661756758 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.665034892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.66337529 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.663206411 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.66391923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.663902492 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.662852158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.662942815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.675160118 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.669628511 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.668937063 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.665139755 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.663270602 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.663782894 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.6643918 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.663272991 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.663533811 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.666943404 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.664972062 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.667229761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.664023637 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.664203686 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.668428865 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.670653078 seconds)
  done (took 986.446298501 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.664625938 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.663719845 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.663743782 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.66407963 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.664458413 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.663818998 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.664919926 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.664717643 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.664411641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.665020229 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.665364354 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665110931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.664768928 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.66570779 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.664538772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.665208007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665026412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.665504249 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.666274502 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.666050254 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.66542049 seconds)
  done (took 36.563052189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.666078244 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.665715223 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.664580131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.667908842 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.665092152 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.665728007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.666343222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.665269944 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.664790352 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665404858 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.665085156 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.666986001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.665550596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.664578196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666299196 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.665032103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.665398324 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.664900864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.666332445 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.66536841 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.666148501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.665857412 seconds)
  done (took 38.245905896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.665605937 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.665917162 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.666244196 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.667020533 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.666491643 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.666354899 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.665880402 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.666769004 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.667165712 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.667317906 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.667185294 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.667683097 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.673360053 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.675113774 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.668672185 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.665944192 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.812296156 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.666815249 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.66702664 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.666958394 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.666554925 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.672947433 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.667216408 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.666644793 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.667782024 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.667615003 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.666769531 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.66789011 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.666823425 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.668723419 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.670640576 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.667968938 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.668048908 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.670285656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.668434345 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.6684521 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.67121343 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.667666411 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.668448547 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.667389392 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.677543794 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.689364997 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.668632085 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.674688028 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.668184752 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.6675094 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.671044687 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.675295884 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.667774014 seconds)
  done (took 83.526006585 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.66864652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.667567004 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.668016045 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.668037464 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.668099205 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.668338896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.668021135 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.668207684 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.668139923 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.669007583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.668484836 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.671858138 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.670109172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.670632666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.67074289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.671030268 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.668896635 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.671082938 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.670807976 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.671019454 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.66998266 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.669210566 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.66927647 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.669615011 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.669629923 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.669526861 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.669991163 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.669526438 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.670063234 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.669824817 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.670427447 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.670217159 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.671329101 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.670042252 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.670641126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.670712327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.671137133 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.670511443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.67090015 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.670888925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.671289724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.670819074 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.670778132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.671122777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.670680976 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.671299038 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.671758392 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.670859546 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.670712031 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.670977102 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.671037261 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.671823092 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.671490156 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.671408327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.67033782 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.670936311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.671113324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.67236917 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.671048802 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.671499849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.670759203 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.67104567 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.671471192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.671402655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.67228399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.671970931 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.671191526 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.670890761 seconds)
  done (took 115.19077485 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.671153838 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.672960407 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.671911185 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.672382906 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.672754895 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.671615366 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.6720306 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.672872048 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.671688704 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.672556338 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.672871044 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.672734624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.672702993 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.673374316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.672341387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.672568501 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.672968343 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.672231238 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.673141656 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.673598091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.672239201 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.672414763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.674041857 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.673159921 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.674111693 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.67458055 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.67333124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.673194152 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.672785192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.674131587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.674732478 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.675787296 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.673821788 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.674111147 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.673209335 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.673965639 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.673393793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.675038202 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.673556451 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.673617958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.673770797 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.673816717 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.673636545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.674934691 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.67389182 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.674386322 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.674315953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.673964694 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.674696933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.675226615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.674450414 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.673486276 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.674307929 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.674332756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.673880421 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.675076364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.674994341 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.674258746 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.674378547 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.674671542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.674792208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.675223559 seconds)
  done (took 105.37137502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.674350192 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.674999068 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.67547202 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.675019891 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.674778237 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.67590577 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.674769426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.675495736 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.675547251 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.675673069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675399224 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.675734192 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676481201 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675139257 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.675504192 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676519468 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.676376478 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.676416599 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.675635682 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.675636147 seconds)
  done (took 35.121979708 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.675287079 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.676406516 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.675824248 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.675921761 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.676588596 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.676941683 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.67587445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675911558 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677263439 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676569474 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.67668851 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.677228062 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676215455 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.677250259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.676642487 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.676552235 seconds)
  done (took 28.43463382 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.677132523 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.676179666 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.677008605 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.677379011 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.676372923 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.676452862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.677029854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.67637102 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.677214832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.676597727 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.676687155 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.677866266 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.677240142 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.677280813 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.676863899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.676831721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.677686603 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.677384075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.677387452 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.677344139 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.678493181 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.681050665 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.677802056 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.67773981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.676606922 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.678197463 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.677436975 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.677038158 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.677549344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.677389029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.678044652 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.678745691 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.677850409 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.678013876 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.677719118 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.678643518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.677451981 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.678049327 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.678513459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.678515457 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.677833508 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.678685455 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.678220131 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.679258994 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.678784231 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.678730159 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.679026772 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.679420444 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.679840072 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.679436625 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.68064356 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.678636787 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.67901988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.678220681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.678699774 seconds)
  done (took 93.899284266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680002001 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.678908598 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.679535287 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.67915932 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.679007955 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.679364201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679420722 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.678799773 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679211874 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.678843611 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.679418925 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.679164664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680121793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.679510857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.680480266 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679188382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.679590375 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.67991822 seconds)
  done (took 31.845652398 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.67958927 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.679318622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.680132066 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.679945864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.679775573 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.680672185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.67929659 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.680199054 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680376751 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.679772233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680009778 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.679861538 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679996464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.680642356 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.680810709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67998048 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.679947226 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680620183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.681387574 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.680593134 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.680842672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680110681 seconds)
  done (took 38.58043761 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.680912342 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.680740607 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.695417109 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.701850492 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.70092993 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.713843493 seconds)
  done (took 11.79005933 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680094039 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681034576 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.680820749 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682166633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68134127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.681132449 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681436514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681016996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68126161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682376858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68254191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681100328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681898846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682810174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68206528 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682501935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682932298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.681661953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682380217 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.681889178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68177427 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682816698 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680989285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682076799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682086866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682921072 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682879337 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682444271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682869918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682268476 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682693902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683151248 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682411918 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68298922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683147223 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682201633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.683191405 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682728429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683243727 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682569366 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.68265247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682833072 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682499775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682965007 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683122281 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683224132 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68379014 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68371315 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682656656 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682855447 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684243874 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684370014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683462505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683518313 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683458543 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684793379 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683982292 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68359851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684535827 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.683870976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684310382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684611043 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684388506 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685187187 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68407881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684041612 seconds)
  done (took 112.680614493 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686345967 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.686154326 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686733316 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686788626 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685787924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686667742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686036847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685312155 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684990541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685215358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684090225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684502141 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683774211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68401424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68375537 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68419423 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684489638 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685005123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684578878 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685087485 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683916514 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685266518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684718792 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685228965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685566596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6846483 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685149389 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684916872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684574445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684974354 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.684881996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685606743 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686277934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.685124692 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685174076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.684905312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685819274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684587953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686556312 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686120501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685869973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686426302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685159043 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685124905 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685969706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686543345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68627746 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685998614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686303594 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686474866 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687028376 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686485788 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686808656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686442036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686885285 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685917273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.687678376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686846943 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685925033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686271106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686547354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686323205 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687849956 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686260234 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68702557 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68646479 seconds)
  done (took 112.877035884 seconds)
done (took 2299.286507621 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.693051878 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.708955922 seconds)
  done (took 15.023678002 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.84826875 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.802221218 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.686826157 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.720357616 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.687787711 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.714967597 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.713941138 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.687036984 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.687625375 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.688311027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.688023443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.872632396 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.702649886 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.688535686 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.688533564 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.780318436 seconds)
  done (took 49.284738474 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.692446399 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.691990693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.702602213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.693847155 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.692005991 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.705388859 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.72242445 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.697432413 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.729697639 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.716805556 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.763180994 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.703417096 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.696780601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.744258602 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.707014046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.710127657 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.802627323 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.770355965 seconds)
  done (took 32.565659471 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.771632844 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.700038136 seconds)
  done (took 10.103361374 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.698941025 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.751151311 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.698848563 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.710388265 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.688525129 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.729304836 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.737987763 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.730384018 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.715752068 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.732851827 seconds)
  done (took 68.820421869 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.696554753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.696868341 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.715455163 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.690345638 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.689311421 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.694183624 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.690842409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.694410915 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.368664852 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.741391547 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.710864825 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.725709685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.695261254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.690684792 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.689062919 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.745200026 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.814158465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.688411388 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.688702865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.701432013 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.695404537 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.757225664 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.704298893 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.693437653 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.734475902 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.364998783 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.722683053 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.700623509 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.810232682 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.68948516 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.690645361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.084206089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.706357231 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.201548996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.997469702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.695834533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.727178805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.703739114 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.690215901 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.82520136 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.696273509 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.700904726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.641784716 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.975216395 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.810057472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.761552979 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.026876946 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.715448676 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.691350097 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.74738548 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.693706739 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.691677439 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.737117881 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.229079186 seconds)
  done (took 123.767742355 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.690222511 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.037010533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.857179737 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.691980417 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974518541 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900196742 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.694523149 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.736619987 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.695758984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919334518 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.946759357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796430518 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695798663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.693371667 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.691565655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.690518638 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.843078226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.761256402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.696173322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.690959095 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718175993 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933435571 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.815244514 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.694554611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.717982085 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90122598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.813004543 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.796683913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.433345597 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.690417389 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753667046 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696099524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.691411589 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.690292556 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.846457756 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786733044 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.776013775 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.69393953 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.693061816 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.693589146 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.348577307 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889562475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.787768671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.822836883 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.944002004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.896970966 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47193377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.692281095 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.427608842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.853942608 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.918640833 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925803905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.813290784 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.696168942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.02678349 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.692694313 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69182131 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.941553764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913664087 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.790475598 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696984042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.694213158 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.693081912 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.931136469 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.695055487 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787333963 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697030376 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.692786976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788897585 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79240178 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.923165531 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907170922 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.723284497 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.031595412 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.192082117 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940742076 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.758970606 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944278662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.698270989 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692429259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.770999371 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.54199921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.945269926 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.938620718 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939777386 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727791944 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.409732991 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.692541747 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919818297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.91453653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954387971 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.93857598 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.930976627 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.019909965 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.69355528 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.693602813 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.941537577 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.817826531 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.697268154 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.034029736 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923603325 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.230242503 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.721505731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996330036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.825451919 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.696962656 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319978311 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.695885353 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.923427108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73454239 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.696728594 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.694721206 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.913662729 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.683707453 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.694605092 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.340263922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.755761587 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.697754429 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927681691 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.698717874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963120383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.69774067 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9256505 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.146587083 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.725564331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.867582359 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94076798 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.698915195 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.934887597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939235962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81080238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.915685914 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.396257039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.696819082 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981916103 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.699052735 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.696254463 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.86433231 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.698287568 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.836795924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.700211079 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987378776 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71746911 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926337926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700984353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94976943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.728001807 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.745931655 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.700100494 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.826587105 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.700047833 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.531032475 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.852060974 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.699941883 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.697035483 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.24772109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.698732485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85141547 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.923470756 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71842453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767962018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358184443 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.697089141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782583491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.719265655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.080263209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.697258735 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.947831479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.700701195 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.696558463 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.696793067 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.93136677 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.880831315 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.700073914 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.697509311 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.599542664 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.697475395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.697965494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.879110066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.033462685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.697877968 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898995135 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701803214 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.825074313 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.703003319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.769419902 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.029480395 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.696982652 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.698443324 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.698637498 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.697699641 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.69907037 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906324051 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.72370643 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.201519648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.834039622 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97051709 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.00743935 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.939200472 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.741746702 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.701852846 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.952650152 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.701899876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.761801851 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.701926213 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.718545053 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925969454 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.704069779 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908708233 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97418902 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713209315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.74700197 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.705597223 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700260772 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.700135921 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.843694703 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781486028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705072217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.699711563 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.814268192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.820585633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.909382359 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.701651572 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.792552916 seconds)
  done (took 863.425748363 seconds)
done (took 1164.613752604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.699731338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.701007994 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.701291509 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.702938369 seconds)
  done (took 28.440973604 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.701651629 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.701711507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.701557913 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.701228142 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.701453796 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.702945349 seconds)
  done (took 11.846687168 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.729573566 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.701848435 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.702409532 seconds)
  done (took 20.770348366 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.772361029 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.083766675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.834254724 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.116492099 seconds)
  done (took 9.444388391 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.702121046 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.702581645 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.701933629 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.702653811 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.703324454 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.703857451 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.703066193 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.702141816 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.703313108 seconds)
  done (took 16.963323779 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.40092655 seconds)
done (took 93.502460292 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.928045629 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.059971325 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.729927585 seconds)
    (4/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.703174402 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.880899179 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.701414231 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.938116879 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.585818581 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.011286062 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 6.707486822 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.672125972 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.718542187 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.702428573 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.987753671 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.721134809 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.012063008 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.88799396 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.962780013 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.706446855 seconds)
    (20/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.897347932 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.707330636 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.360618397 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.191326013 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.710112591 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.702873496 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.532835514 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.012358139 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.804394929 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.886929217 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.075228498 seconds)
    (31/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.729972807 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.03665241 seconds)
    (33/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.920536882 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.703597517 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.993101663 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.038406942 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.799483211 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.100874068 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.785181168 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.835860773 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.862554447 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.70361183 seconds)
    (43/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.94322882 seconds)
    (44/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.814288159 seconds)
    (45/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.710591382 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.873075458 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.807370724 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.703241281 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.499325915 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.515588151 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.70997403 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.155412401 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.277892713 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.610795524 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.860858767 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.971711751 seconds)
    (57/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.709902244 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.03014153 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.391253694 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.785390307 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.709646325 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.957361918 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.894371999 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.874996987 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.727247794 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.727776159 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.798746091 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.792319203 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.801163629 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.682370501 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.870429855 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.844552868 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.723260549 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.806284199 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.813273983 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.705798182 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.727798965 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.836738864 seconds)
    (79/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.729961592 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.831860442 seconds)
    (81/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.729285489 seconds)
    (82/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.717193723 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.707636424 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.955136414 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.914879376 seconds)
    (86/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.952204672 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.943431542 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.057599363 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.906688606 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.81398268 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.103553805 seconds)
    (92/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.710314639 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.560306281 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.397900702 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.223811824 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.882863716 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.967304852 seconds)
    (98/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.202469936 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.012779655 seconds)
    (100/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.024271844 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.712791401 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.925073604 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.731834138 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.786417257 seconds)
    (105/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.077598395 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.039290158 seconds)
    (107/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.714123157 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.02616966 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.4544998 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.081614355 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.281708355 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.861334718 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.65335608 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.712700702 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.271430981 seconds)
    (116/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.943023355 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.389847073 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.72116809 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.446232595 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.55230598 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.739038812 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.101816379 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.038352388 seconds)
    (124/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.807696598 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.787287549 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.711071822 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.836944106 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.710068213 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026539022 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.09319331 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.727304908 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.056770107 seconds)
    (133/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.711249125 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.738496003 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.799007993 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.03691786 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.514234776 seconds)
    (138/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.092447158 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.96259014 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.709591981 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.137002802 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.495898877 seconds)
    (143/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.849213869 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.794111855 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.732032122 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.708658307 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 6.312827944 seconds)
    (148/309) benchmarking ("sort", Float32, false)...
    done (took 5.401536605 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.596373007 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.733672154 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.720176542 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.744607591 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.866948988 seconds)
    (154/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.77707028 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.881256582 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.716942069 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.827327681 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.815291674 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.713738271 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.725313746 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.711664534 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.712244644 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.714415903 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.424902373 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.71904573 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.895059649 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.49376537 seconds)
    (168/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.825361831 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.716128217 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.922605121 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.087462213 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.438756876 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.897552894 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.047114366 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.643252022 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.805725518 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.884161091 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.16599653 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.160505749 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.719238506 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839011433 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.125604035 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.714508426 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.088273668 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.023116667 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.846735106 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.604366557 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.719700396 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.056787516 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.849733554 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.897875559 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.715943982 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.891921456 seconds)
    (194/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.200464005 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.982147186 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847686251 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.713356393 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.989693447 seconds)
    (199/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.791036121 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.504672367 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.013208914 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.717981893 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490108508 seconds)
    (204/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.939835064 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.741676696 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.948309253 seconds)
    (207/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.03414102 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.917680981 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.840818234 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.757041875 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.725365698 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.740503928 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.358991226 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.915159477 seconds)
    (215/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.7143693 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.348134034 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.616645433 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.023968574 seconds)
    (219/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.921970577 seconds)
    (220/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.620785482 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.804985921 seconds)
    (222/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.748197174 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.736558346 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.817036346 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.797310695 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 5.447901462 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.84825176 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.726563898 seconds)
    (229/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.050090435 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.718925895 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.205490436 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.912912618 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.723223243 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.151774888 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.076004234 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.823733695 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.725461743 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.963527946 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.032782254 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.859520286 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.775168867 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.715401355 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.094078529 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.029109115 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.819851142 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.335568072 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.86270454 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.716398852 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.056321064 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.34350159 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.336198635 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.867039968 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.72299834 seconds)
    (254/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.823683109 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.574659909 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.980218344 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.975706906 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.754674707 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.971448622 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.814602646 seconds)
    (261/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.731112637 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.738640089 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.588009608 seconds)
    (264/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.722039762 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.452685319 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.202063773 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.718073682 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.833172115 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.849170678 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.716344716 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.193626959 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.720028841 seconds)
    (273/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.809853962 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838050349 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.973260015 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.948319133 seconds)
    (277/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.722863735 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.054209036 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.805149458 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.863041362 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.874011203 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.04556253 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.727300081 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.110771527 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843453732 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.988440904 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.986608495 seconds)
    (288/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.724950887 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.874148304 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.122719934 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.043069607 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.726164971 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.527484215 seconds)
    (294/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.752272048 seconds)
    (295/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.884044646 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.727325419 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.747326829 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.719947085 seconds)
    (299/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.077176354 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.005090304 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.821689981 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.755427372 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.177750664 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.778281356 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.986974655 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.880467292 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.942959647 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.721828573 seconds)
    (309/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.886319558 seconds)
  done (took 959.268791756 seconds)
done (took 960.964510163 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.745520444 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.739110579 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.721826596 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.743820765 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.833430406 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.768508936 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.73464354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.72572572 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.772638162 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.771765844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.720473365 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.767322902 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.723410045 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.723586751 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.721451929 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.738552458 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.034775891 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.758367344 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.741116267 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.734533005 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.740332529 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.720453352 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.772177879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.768411048 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.727009828 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.727693012 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.725923172 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.74205007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.835475311 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.725459919 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.728683274 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.735782546 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.034387479 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.756070255 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.721218692 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.742523442 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.734697823 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.735125984 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.727358052 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.757427501 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.111888343 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.766080549 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.724522615 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.724569541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.723880879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.731599217 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.724692018 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.73239158 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.739488786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.740138837 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.116626464 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.781976988 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.727430471 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.724204392 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.737433698 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.724286607 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.728113947 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.741161039 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.744343942 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.740873337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.020142928 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.765174161 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.727489224 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.742731819 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.734285175 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.150764376 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.764548661 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.731729294 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.113806192 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.774919876 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.151376537 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.776634964 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.727664718 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.739908183 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.757634722 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.03614328 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.756813352 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.724067641 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.735043376 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.723697604 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.738154211 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740481681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.730687566 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.726349771 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.741607892 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.772867917 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.738889758 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.725985698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.737935597 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.746062279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.734621012 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.737894383 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.729601551 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.724167843 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.737941369 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.73032029 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.729259892 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.729996542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.731190157 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.740691961 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.111472642 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786872307 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.724977525 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.723980727 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.72753423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.742050327 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.113076985 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.7700836 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.750756819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.777040817 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.728772214 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.021816573 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.763469557 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.74395295 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.73912977 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.731292666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.72546959 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.022437509 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.15343778 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.786074046 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.727583478 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.72513174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.744168262 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.729381933 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.725968431 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.039687551 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.762568121 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.744636305 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.850523873 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.740916472 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.76008492 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.725276184 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.731692135 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.778741696 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.745113011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.761153158 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.731176094 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.74519111 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.746058298 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.72527626 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.741184731 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.741048391 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.728272877 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.737749109 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.726471835 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.779095936 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.741339888 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.741899071 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.747839975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.849857516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.724745405 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.021623222 seconds)
done (took 272.069601305 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.80632195 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.723231838 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.819501439 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.726129402 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.817630854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.802026013 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.726872423 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.726280118 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.725809284 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.210760932 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.7258211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.733172149 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.726077051 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.725081567 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.798973886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.726503339 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.725925992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.155813702 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.72849682 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.80813655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.724650057 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.726103247 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.726369269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.220336078 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.725541114 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.726263208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.806640235 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.725986858 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.16626004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.724638983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.72714529 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169164474 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.807642628 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.753469854 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.734638182 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.733629513 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.817227912 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.735174423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.797653271 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.793705853 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.820401158 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.760001626 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.725713511 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.727444963 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.730840974 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.728394315 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.728160832 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.757264758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.727630954 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.734681675 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160310202 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.732647406 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.733207208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.728254483 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.727352834 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.755625077 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.728048496 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.728384574 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.810653324 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.728734414 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.796114323 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.218380839 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.21188406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.727921678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.726730374 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.729217225 seconds)
  done (took 175.625754176 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.795543559 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.805286148 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.793408447 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.733656194 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.776129877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.795792108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.733447894 seconds)
  done (took 14.094629018 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.736471602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.728781566 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.778127532 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.777997602 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.728103966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.88606241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.729672488 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.740108417 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.733483187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.757075064 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.729828955 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.729900755 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.737446667 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.729982995 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.781780382 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.74250702 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.847541308 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.733550298 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.732166069 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878900716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.736416582 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.737761022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.756347495 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.742995367 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.731657402 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.738339036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.309023353 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.730668633 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.731197013 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.731373471 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.733182488 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.772305078 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.731324936 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.730136123 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.731162257 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846180499 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.730867153 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.732007954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.730966552 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.730471028 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.731553676 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.73165799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.732341225 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.732202386 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.732334494 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.755838909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.731779151 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.732285902 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.733068043 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.732239419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.757778852 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.733298261 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.732735608 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.737960688 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.775239629 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.740569405 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.732402945 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.732957501 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.733910374 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.733155892 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881229084 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.781940556 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.732328195 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.781473973 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732595283 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.733172575 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.73317539 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.732459633 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821967549 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.733822398 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.781892805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.733499218 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.891098373 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.756917507 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.734257438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.736719347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.737441819 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.734529225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.733143332 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.741556883 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.734551174 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.736187518 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.740884036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.739353871 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.734469709 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847826438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873925897 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.734550608 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.736311579 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.74225388 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.734815834 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.778173489 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.734928451 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.734494273 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.792062767 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.850670296 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.761914057 seconds)
  done (took 192.326872667 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.742789384 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.742845781 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.737149582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.751056602 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.736652539 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.735867991 seconds)
  done (took 12.114546139 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.738035841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.738538501 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.736347834 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.735763753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.736901199 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.735598033 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.7366262 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.739405409 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.740382911 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.736226709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.73554933 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.735953083 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.736355627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.737296705 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.738656045 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.737514366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.73773394 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.737324142 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.737260402 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.737434232 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.985389921 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.736137926 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736515793 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.739174809 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.740134186 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.735580263 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.750173651 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.736434465 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.736515193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.744254395 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.741440001 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.737046382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.739822299 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.743102929 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.741083933 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.739355263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.742405005 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.736104242 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.737694031 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.736901107 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.736733802 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.737292439 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.737452925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.73679489 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.739211827 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.744156694 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.740869631 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.750659206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.737454013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.737345823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.737567393 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.737386991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.738146572 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.737848234 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.741313433 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.744636041 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.74181261 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.73797324 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.738075235 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.741194848 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.741807849 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.739057028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.74039524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.742821669 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.746397195 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.73890585 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.741207941 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.74173234 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.738605416 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.739039696 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.738533293 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.73867301 seconds)
  done (took 128.132813911 seconds)
done (took 523.97237176 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.931990024 seconds)
  done (took 8.603261936 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.937972366 seconds)
  done (took 8.657295932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.293973811 seconds)
  done (took 9.973482478 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.750459475 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.789135582 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.751604405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.743946677 seconds)
  done (took 28.734413154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.982985607 seconds)
  done (took 8.65543373 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.762211228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.73678842 seconds)
  done (took 15.235223193 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.86188577 seconds)
  done (took 8.534331515 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.77417636 seconds)
  done (took 8.456233452 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.748763874 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.740757744 seconds)
  done (took 15.185306483 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.742086748 seconds)
  done (took 8.414279933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.029588398 seconds)
  done (took 9.790162809 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.761687705 seconds)
  done (took 8.50041042 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.827422698 seconds)
  done (took 8.500048198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.791969133 seconds)
  done (took 8.463996093 seconds)
done (took 157.375616487 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.742525555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.740279319 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.739984843 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.737381514 seconds)
  done (took 28.632123191 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.771462981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.773276934 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.774610417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.783907841 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.776230835 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.772463853 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.765310109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.765097396 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.783633925 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.775356844 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.775201328 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.775930867 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.772274824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.76571823 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.775879863 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.774922971 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.78396455 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.774622451 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.76626642 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.775919029 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.740794258 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.78493615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.775949471 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.740973223 seconds)
  done (took 44.198878338 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.458839904 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.810890234 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.105742407 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.792697356 seconds)
  done (took 9.840982421 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.79182506 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.792961951 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.80525349 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.843439358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.867002858 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.802679087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.764618831 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.761478406 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.748527975 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.794558512 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.869452033 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.788719361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.880038569 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.741938102 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.928873943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.741640369 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.740661041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.79292251 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.844461241 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.866340652 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.741370485 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.792994749 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.796209757 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.788747254 seconds)
  done (took 44.960693784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.742677623 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.749933751 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.74944242 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.743752511 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.743522849 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.743748387 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.750112698 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.745345711 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.765941644 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.745435557 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.742808613 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.744111671 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.749720999 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.743683819 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.744062266 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.756750002 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.758692575 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.743536434 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.746954769 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.750811538 seconds)
  done (took 36.636049985 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.742159073 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.587822195 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.087189955 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.993978644 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.742653978 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.74416321 seconds)
  done (took 30.573377382 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.756164301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.749905284 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.743264399 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800741682 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.886875001 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.751249027 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.743039724 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.754670761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.790805015 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.809880701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.764150241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.772376907 seconds)
  done (took 22.998925802 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.744950146 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.743788822 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.744758935 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.757683455 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.755276024 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.751485375 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.751794523 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.742559829 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.75796125 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.764833666 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.752715785 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.755493409 seconds)
  done (took 42.703461341 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82167408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.616709855 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183403539 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204010911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266750173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945499306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.743174975 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.82757006 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.74479684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01390966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029693513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936655617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986333229 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.530951712 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.747073441 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.213846965 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024106656 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959042966 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770128802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386646579 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839958558 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298748979 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.386311813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84269962 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947399616 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.864464212 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.007724629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.693233523 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792819262 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747365286 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749919761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.745411083 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016319587 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864859977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815523699 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750207988 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.155288736 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.450299798 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.754886984 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.447733453 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.157419196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853428037 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748142054 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.745156081 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.671879591 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298406405 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834519114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.748794973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.446156852 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.747176675 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750206165 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820687473 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.746891557 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.552156096 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428712395 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013634798 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.74718946 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750123661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316820213 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714696503 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398165089 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.678743389 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.83015827 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330025008 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182938933 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.892885756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.747425133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747663448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672082869 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327717373 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848358057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881936599 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.764383183 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387018418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036466632 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.096246669 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788139493 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015866911 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574649889 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.680109677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963262842 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703210149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6745676 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.577899099 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.673061241 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956739763 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778840627 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.339998583 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778978398 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828388143 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.752776263 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764426267 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749003989 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960914118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.641785694 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.747111719 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.969545966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989529191 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765735893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.832386482 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.674619038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.749649855 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992138999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.950519574 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.042746014 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.209796915 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82610598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.712462877 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.760255001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.714602632 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.75527266 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011976342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801029823 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717664848 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854477096 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.698495905 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991474082 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.618679649 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.97575973 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.034370173 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975213011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.079432937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992574059 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811248658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.756351914 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.749622117 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.402277175 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348700307 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.966276091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.761424365 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279090645 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756314647 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.74973791 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685113091 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.372425664 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035995091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.817754908 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964794681 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.747840133 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024987585 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676788795 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888100345 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744768355 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.96477984 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.383525262 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.816404608 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999429934 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040289461 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.036032219 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757885099 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764759451 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842680229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768059219 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.23645367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995295264 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.752357398 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.753204911 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.403849037 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.799829004 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752702247 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.75476576 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279180934 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018350514 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.767405425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.75511552 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625803683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.76268472 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814152144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755255536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756443509 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.27372353 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253228512 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.758619549 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.409831919 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968998097 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755931681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.38859639 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924671702 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.76448888 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015330064 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811089999 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.67918308 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.451630022 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.452862235 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753466435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679852918 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.753045247 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755813758 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757763319 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.94095035 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021419384 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797723908 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.392878616 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.848092556 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757650596 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.755591812 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75391935 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.269874204 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.729094471 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282907858 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872235357 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882818321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.766535034 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.680016599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.754830869 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755531445 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.754560882 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.689587843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804410478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.348689132 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949873446 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002398573 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.159698495 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762552393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.34869436 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.858606479 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.769319167 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975288028 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297543237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.865422505 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835356781 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.759451295 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.349505402 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47606668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325043319 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046005011 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059275086 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08776339 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.159338849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080508479 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840667744 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979968459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274415728 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809526919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.843456806 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690634338 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769464959 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388713653 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093163679 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763762461 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971756756 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033322578 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.037774996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876860674 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959154279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784471312 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.604971253 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786328017 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.291320508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77142912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.081627996 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946937244 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837378516 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979765781 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824127263 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.755127454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08736224 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795502812 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.457573839 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.109177545 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.188873257 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.162380534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968313124 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.759105551 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.195425622 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100660893 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.977298892 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.881662932 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684241049 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765643602 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.762889542 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.769319715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.729544677 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.61481555 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.999731888 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762170105 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982844841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.914475808 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121257142 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.717192231 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.759866911 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757620124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00045777 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454498814 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916908468 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.106932086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.334730974 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763580313 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.687161813 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684347976 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.457628474 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.759906521 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723362525 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966194853 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.858440099 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440090939 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.175419529 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072173874 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001681161 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.769276154 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020794304 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026241866 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.250019762 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779333302 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.856766277 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984753678 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.474274655 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.973832252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984758181 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317091686 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976387848 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200723717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.728141302 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.758776796 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964711354 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973621415 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.055397033 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921522709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.468366098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.772051614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13073344 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813205241 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.052613165 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933996138 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.845019134 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766384663 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83502835 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763266783 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.765924856 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.765539495 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769026892 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.056889747 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866110111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.770983191 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835749814 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73363453 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.31707675 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.768495596 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023583472 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101295446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.078883855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815385613 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76100733 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769168442 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686414176 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889462154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.199310224 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032013465 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.881803344 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.894750733 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781442721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990493359 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.042535291 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074905865 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033702096 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.644021879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420022899 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.884979553 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.978536074 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767070579 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.964417871 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976536832 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057586114 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317815608 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.926308842 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956929888 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03407992 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119337411 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.761540779 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344677104 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.770248654 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17206959 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.793210643 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049158041 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005170189 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764991344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882687642 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.764513047 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.966043561 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.213877315 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403594332 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09829542 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621907685 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.766066638 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028012392 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076582834 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058372177 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838824743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768484474 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453853443 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896347805 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.663835032 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998102478 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.7637725 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967250845 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.473249166 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.766200979 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028767415 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059850105 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.764609072 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.690221899 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792713002 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.766859993 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977717413 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97415827 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007016016 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767612889 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.766211078 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.571862383 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032112385 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817444821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690294762 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.76591036 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808972657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99027114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.782207835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.279885094 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.465382667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04085087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.668466291 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781041161 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.194575206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140640478 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080744694 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.27897489 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981552559 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314818215 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621173979 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146052728 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.767707832 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.197342058 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148468146 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.765725126 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298502928 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879199495 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.027493159 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085600837 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.778299205 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439962838 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.783642302 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978847715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120136407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695868169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774960655 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.815624145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.765989794 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747766198 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775029864 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.721967458 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230476508 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.611927548 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322475485 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.76804395 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.779765848 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.091992359 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317347441 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877567761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782941374 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76998033 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.464629635 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.053635821 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00967665 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.296515484 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.863999472 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.768263292 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767193643 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686175145 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949797493 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.953729906 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04443931 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.140016042 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.878847564 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768839451 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.974347239 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970449734 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.065075109 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887216399 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92363564 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885070344 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.707541211 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473356401 seconds)
  done (took 1604.321309957 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.786845351 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.846167206 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.780656676 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.80459281 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.819690427 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.797626969 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.893408721 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.831152038 seconds)
  done (took 56.261089415 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.766597754 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.783103838 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.771844409 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.768259817 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.807729469 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.768597305 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.913242698 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.782314711 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.772191418 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.773294291 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.769307035 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.767895276 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.0438092 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.790313746 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.768519324 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.76884114 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.773245437 seconds)
  done (took 72.357993088 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.77141812 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.114690961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.799224959 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.76967925 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.816380422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.777916287 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.293584037 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.773794772 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.775214327 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.810997899 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.076690754 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.814497867 seconds)
  done (took 84.296286644 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.775382626 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.771359817 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.771572594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.770937997 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.772070621 seconds)
  done (took 10.566362987 seconds)
done (took 2090.03697333 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.995026962 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.961887014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.011433565 seconds)
  done (took 5.675593175 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.910442134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.961475195 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.07614489 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.094762668 seconds)
  done (took 9.748396546 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.04072944 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.143810652 seconds)
  done (took 5.885628927 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.089510579 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.803697231 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.181732786 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.770556137 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.774662448 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.777276811 seconds)
  done (took 22.027977612 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.771779975 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.771860818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.772119685 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.771735014 seconds)
  done (took 8.790666767 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.77051948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.477259738 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.770440563 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.77957875 seconds)
  done (took 20.500451222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918046963 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.888325981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.914258598 seconds)
  done (took 7.423460898 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.992554127 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.566712229 seconds)
  done (took 6.261922408 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.927376308 seconds)
  done (took 3.630407194 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.799111634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.04148307 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.286895162 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.299636582 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372187185 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.484321121 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.058131408 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.994171349 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.232033513 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.210483862 seconds)
  done (took 23.482170446 seconds)
done (took 128.199253751 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.100491797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799151559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.980484366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.113226348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.004072285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.97855969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974038269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.102056185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.788753099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.778602545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.114928026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.001585846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944186425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.787401334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945420377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787084825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.005979175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.125351372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.804444533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.021081952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.004259868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.765599775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.960777136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.782674486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.006554227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935794745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.313279781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790796107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.95264832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.325125446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951296195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.166534676 seconds)
  done (took 164.817534825 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.774019272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.774790787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.774558956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.773690163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.320157069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.775362717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.774447374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.774845835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.196811557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.186737559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.775966574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.307351204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.775021086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.77550125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.778370649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.773153354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.350005193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.775246015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.776720791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.774292893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.774901013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.143785805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.77628205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.151119701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.347322472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.776963385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.775438692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.77602239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.775268238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.774920186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.776510329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.775392232 seconds)
  done (took 206.318572482 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.69331387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.775955199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.775974979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.775927213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.77640324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.776162496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.775917091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.776535362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371002395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.362026848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.777887562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.777975336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.77516433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.776751203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.775178537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.775406962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.776371151 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.731971109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.77695136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.778093029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.77973239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396836668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.777388732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42034573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.782247597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.779537542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.777298658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.776997538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.776601878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.777075163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.779173151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.77632552 seconds)
  done (took 216.888281479 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.015167704 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.776899771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.778091766 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.708396671 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.778102417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.777714914 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.751223812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.023753967 seconds)
  done (took 18.322446427 seconds)
done (took 608.060227474 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.140865476 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.985605423 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.953480992 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.802275508 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.041582871 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.84355753 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.797605423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.861723953 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.59815773 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.872426897 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.487774739 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.819350196 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.585307779 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.824974801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.921733874 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.854517133 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.404446136 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.512476085 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.974324171 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.881729722 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.972060406 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.696143688 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.874414474 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.634280794 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.603509333 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.748966948 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.819005122 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.412597639 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.807987789 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.957606304 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.481003338 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.052897453 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.812372979 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.796147555 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.851478531 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.831102074 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.00248576 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.810316302 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.924229281 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.499235933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.867329423 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.505162255 seconds)
  done (took 98.833922576 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.78904611 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.784620492 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.784514249 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.785786704 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.794083325 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.785140354 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.784753413 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.785867432 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.784930443 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.788227617 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.785901495 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.795668543 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.784607936 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.793288552 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.784960765 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.785287625 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.784947091 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.794228694 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.785915332 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.786379363 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.786319519 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.785925243 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.780438345 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.786304102 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.785865441 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.786146708 seconds)
  done (took 48.182435138 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.780758785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950140489 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.024869004 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.801972721 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.782188542 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.784681339 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.799528497 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.785867952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.784020451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.783932103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.885601761 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.785932114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.797096168 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.023187763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.796916855 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.779464043 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.780037055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.780886151 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956422963 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796169568 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.799328202 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.785279095 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.799179345 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.793149149 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.782104095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.780562317 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.784299743 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.213390988 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.790000077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.884768374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.824949447 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.805244375 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.159928201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.035907825 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.835774055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.789399422 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.781264689 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889866391 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.787606988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.781757095 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.799974338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.788902105 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.026035481 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.295818698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.799015435 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.783891138 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.22538788 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.901619918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.82429489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.790615546 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026997873 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.799156791 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.783395179 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.783650796 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.819048219 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.789316087 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.782993972 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.120580966 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.795432824 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.801701903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.787160894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.783699151 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962412727 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.791571863 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.951055285 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.79246169 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.789578884 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.784423138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.028681811 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800601425 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.307892906 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.79777018 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.782943095 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.888018005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.955897348 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.253741556 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.79673735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964529595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.175353109 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.807795604 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.790216256 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.207587788 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.810468206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.790100886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.784349183 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.784502412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.783218129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.824860903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.79879348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249569348 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.31001365 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.132555349 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.810685667 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.795715749 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.78479557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.114223501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.791570334 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.782767104 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.018350516 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.316134177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.798799753 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.790317497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.285163433 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.799781147 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.802317028 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.792151937 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.033579303 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.801903587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.82567635 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.783368604 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.789510403 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.786354019 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.802587796 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.792550934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.783531413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.277598819 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.908268822 seconds)
  done (took 221.953457789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.787128322 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.787912339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.784805679 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.788878576 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.785139874 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.785784138 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.784095654 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.783747077 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.786896038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.78482627 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.784657124 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.784725152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.787063958 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.788202317 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.320540912 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.787829397 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.38589731 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.784903109 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.785918416 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.788815098 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.466586592 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.791162315 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.784867049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.783846549 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.784327711 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.786241586 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.793163925 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.790482869 seconds)
  done (took 165.557328195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.788866898 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970260713 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.80809132 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.819453847 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.79585366 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.788800144 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.929162377 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.81171144 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.794359113 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.786711214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.787043533 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.847508038 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.797521045 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.88407344 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.819665792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.897980948 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891981511 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.79426887 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.78695776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.787399125 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.815972664 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.795959649 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.848670569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914031405 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.807614669 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.901379496 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.807812017 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.788668494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.789681805 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.901660872 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.807041506 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.849450106 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.819076666 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.80640165 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.906255542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.905262669 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.892759348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.893972912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.795513016 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.788181281 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.788961861 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.790349932 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.902453869 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.807420149 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.790054147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904158866 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.807258496 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.790917667 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.790892523 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.7904226 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.803225317 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.808538244 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.854851829 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.920974107 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.825603783 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.813223832 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.88944944 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.917876332 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.79018519 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.888074919 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.797802394 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.903582249 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.811332528 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.792188106 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.791577482 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.794699221 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.819105667 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.895609173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895534724 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.797059797 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.888225579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.826204782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.798401724 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.791246575 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.790513775 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.903643709 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908224308 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.825132977 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.82718853 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.822088769 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.80021338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.789725151 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.793086429 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.808420015 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.794867052 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.904578117 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.909023593 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.798163059 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.791976338 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.792136887 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.791010926 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.815280941 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.911708106 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.826288915 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.89710146 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857399353 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.865973206 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.804792719 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.804838041 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.795934829 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.854282119 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.808281392 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.804307178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.094911053 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.852531905 seconds)
  done (took 194.466060893 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.210512832 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.871859096 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.84795691 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.133882064 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.154027748 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.073365081 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.841552542 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.868468629 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.873283871 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.06299985 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.914372407 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.857326578 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.827086948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.814516063 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.87002511 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.876578649 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.862090516 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188380402 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.062382419 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.97811982 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.82936433 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.143852651 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.147778364 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.463413974 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.890638306 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.247351462 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.436400813 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.020773538 seconds)
  done (took 60.098753048 seconds)
done (took 790.801897614 seconds)
SAVING RESULT...
DONE!
