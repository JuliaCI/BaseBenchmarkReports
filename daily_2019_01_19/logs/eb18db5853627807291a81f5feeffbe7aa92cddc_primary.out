cset: moving following pidspec: 9235
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.314488584 seconds)
loading group "string"... done (took 0.537307296 seconds)
loading group "linalg"... done (took 7.403145676 seconds)
loading group "parallel"... done (took 0.170540815 seconds)
loading group "find"... done (took 1.15371559 seconds)
loading group "tuple"... done (took 2.044735358 seconds)
loading group "dates"... done (took 1.294718521 seconds)
loading group "micro"... done (took 0.239084525 seconds)
loading group "io"... done (took 0.96326837 seconds)
loading group "scalar"... done (took 40.446959339 seconds)
loading group "sparse"... done (took 13.02731222 seconds)
loading group "broadcast"... done (took 1.038229859 seconds)
loading group "union"... done (took 14.123683183 seconds)
loading group "simd"... done (took 4.704062602 seconds)
loading group "random"... done (took 9.548115591 seconds)
loading group "problem"... done (took 1.977254294 seconds)
loading group "array"... done (took 22.311868653 seconds)
loading group "misc"... done (took 2.012169177 seconds)
loading group "sort"... done (took 3.408683919 seconds)
loading group "collection"... done (took 19.571649547 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573078429 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157728837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148572927 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148327084 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.198342978 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143701816 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157717272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097688483 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960585415 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173598079 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152711733 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525322957 seconds)
done (took 5.165904779 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218947804 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095054456 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103948722 seconds)
  done (took 0.87147219 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077997094 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146289686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094720596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078502418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095312172 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078113409 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094550414 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077678255 seconds)
  done (took 1.343212953 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087270385 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097677464 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082289336 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09612808 seconds)
  done (took 1.041823115 seconds)
done (took 4.239577496 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727517404 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273383044 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205141061 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463805737 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19297923 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215602997 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682340834 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344634362 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252232283 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099336881 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135634652 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394737556 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137266665 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678567736 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092255453 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12543174 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177684861 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440173007 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085386255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111129785 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116580442 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141287466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130898294 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091562722 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185101009 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081789589 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193019442 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10803911 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080096849 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274955484 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205259354 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685001809 seconds)
  done (took 10.84452834 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111719332 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133700868 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097747996 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138263647 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135380874 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099794114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084803745 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096793402 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122236293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176157957 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130881714 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123732762 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095353958 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082622996 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11601666 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246402952 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121538764 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099161025 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100672194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104415015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122500176 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112894575 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108911169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092455882 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165681491 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222241399 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114168978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128510951 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099530662 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113843656 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143190516 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143571036 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094429608 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080742256 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172184059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122927437 seconds)
  done (took 5.147302466 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.102924747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191273205 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121365832 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169979958 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080642925 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142767423 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094156404 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113619248 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256915287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186329947 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491895055 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141997461 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099049419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099186227 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08257455 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097769738 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.649858455 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15674033 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116234 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115522372 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102108017 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084350548 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364081967 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095732448 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080113117 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097367316 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067011825 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160969651 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103001044 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.193912845 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123448963 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101272651 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13328528 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200225145 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12724283 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118938299 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097243019 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079162101 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191662943 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088130288 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096413032 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104338455 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135094455 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134977294 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097576173 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081420923 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213030802 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080297429 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115680571 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.919066456 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180837184 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123866331 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099605053 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308628375 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097506294 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098690285 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093744792 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081422186 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270799284 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188779007 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.103383467 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079994441 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096995135 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081464304 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395902039 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080433196 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.700988714 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084217882 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108892311 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082543008 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095886242 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103053175 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08633031 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115706562 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079805411 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099003851 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079861029 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096831994 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080622748 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108292289 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122067177 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217059086 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097699581 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080799016 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095160476 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099499178 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126449957 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101051936 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079227363 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130827601 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098927045 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081436325 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133960656 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09844517 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078306584 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106807887 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098285225 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126943047 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097822041 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135305576 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095022601 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126471293 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099349901 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113302771 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110165722 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098328022 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169037957 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078233362 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096427145 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078069971 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096453367 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080405361 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09840876 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081896707 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110391634 seconds)
  done (took 22.874105179 seconds)
done (took 40.644501033 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324093853 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101566375 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102381888 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102304358 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100934158 seconds)
  done (took 1.483841796 seconds)
done (took 2.210075671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28435161 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17293731 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095053845 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16564661 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092265684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162585211 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15991314 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094117066 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217855121 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093158499 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159663513 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076421412 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094054644 seconds)
  done (took 2.62261122 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094180425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115214505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085113976 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111592645 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078223736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112220173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094741487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118507636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111678414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087644748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094899095 seconds)
  done (took 1.830395792 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094501802 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112202146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083890901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111130003 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079032262 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112765387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095083573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119027525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111380332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088334555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095512807 seconds)
  done (took 1.826665044 seconds)
done (took 6.998352973 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090633712 seconds)
  done (took 0.808149878 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925090732 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.564031337 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11303197 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151328639 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317009207 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172058998 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468710376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125869864 seconds)
  done (took 10.764088122 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.144165712 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083519778 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098790429 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085534089 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10267713 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082744435 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100494149 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098347564 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08513569 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101443543 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08317011 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101548479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10066126 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083816972 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099638138 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084907284 seconds)
  done (took 2.328470566 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119465462 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118055682 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105089078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106918962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086796296 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104544243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10541254 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088419883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100763058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102226528 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090432059 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104269603 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102288869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079796793 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105000968 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10723847 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085538328 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104299424 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105692966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089645095 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105762249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095267285 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085958377 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105411336 seconds)
  done (took 3.242524898 seconds)
done (took 17.867383403 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157089494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107783089 seconds)
  done (took 0.99714263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09451855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111444231 seconds)
  done (took 0.938602817 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096643958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095369668 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120789308 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108054912 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080104911 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096375296 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117049281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080678208 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095822065 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096012925 seconds)
  done (took 1.723426285 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083065525 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108089472 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10053942 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093893674 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103812427 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095421351 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088281193 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097398078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109339918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076989339 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10130099 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114471746 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086430137 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115645259 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104643721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098182398 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084197568 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097941667 seconds)
  done (took 2.495755339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079166236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096278308 seconds)
  done (took 0.913628081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081708657 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093016013 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080995668 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096692206 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093304635 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076241171 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093332709 seconds)
  done (took 1.352910378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.435009502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135448469 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2647432 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102831773 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103880327 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294726774 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096545274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0846823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102180327 seconds)
  done (took 2.415043926 seconds)
done (took 11.573000237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093435904 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114177545 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112800184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454298645 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106225466 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096581024 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145756862 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246122141 seconds)
done (took 2.115859839 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143201562 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.565733151 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421799619 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22934099 seconds)
  done (took 1.961849042 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402136898 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098662888 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08405858 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082916242 seconds)
  done (took 1.414828578 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079738357 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099717764 seconds)
  done (took 0.930242626 seconds)
done (took 5.199713294 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080329474 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130800276 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080369514 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09523504 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079682194 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095863999 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077839019 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095664603 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097462073 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079868816 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095562185 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080599739 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096460317 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079708443 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093798193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077656496 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096610781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077313763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094504333 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077307933 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096660585 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07971029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093924055 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077817972 seconds)
  done (took 2.915474626 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10005275 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097940316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102167901 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085421903 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101506083 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086193241 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10306764 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096437176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085804286 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099173171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101131788 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084837955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098548376 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083799091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09889311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10123598 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085522917 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098538483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083111254 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100738534 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10243668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081221711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101620795 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102003811 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083837069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100855154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08275841 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097267747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10174978 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083872676 seconds)
  done (took 3.585913107 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085117642 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093490304 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078112605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101666143 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077748485 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09613206 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078136506 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095214442 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078651228 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094496991 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080208136 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094924316 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078804328 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096300981 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078753494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098168429 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111925485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078372704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094924589 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078972649 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098310474 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077775813 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094087605 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077880878 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095343916 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077099217 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094810996 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07765132 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095534101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077942256 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096980803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081619504 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094276156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084436955 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098711337 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093474779 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081244702 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094156331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078253298 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093773601 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07735166 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094927744 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078204164 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101370658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078252523 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096910122 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078208721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097098057 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078930833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097606444 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078168811 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09387753 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096270408 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078812643 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098243952 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077327284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094816848 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078009839 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095803963 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077432357 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094250809 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078151864 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098136011 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078924778 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109485103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084161948 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094370905 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07947503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096072144 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097383182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080255104 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108380996 seconds)
  done (took 7.137990162 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130878591 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124902291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080641389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098272486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076760335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095462095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081542485 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096010323 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096994521 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085520434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095043364 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079975791 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096999724 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093875693 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095022118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096764327 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084171704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093205845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079350203 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099940103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078920737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098897382 seconds)
  done (took 2.818461878 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207047575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105126055 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140566057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106485221 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082486204 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105498822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102285481 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087393604 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101599386 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08315499 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099057934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101828978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08270266 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100419999 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09986567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084056078 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101471494 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085272752 seconds)
  done (took 2.636197151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092780936 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098048595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.209134635 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097743216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098761743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083922588 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103888388 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106027334 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083180151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098219758 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090875496 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099995252 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100786911 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081322777 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100584515 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081537687 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100740182 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080764816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107311427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103760405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086961742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107015786 seconds)
  done (took 2.976669869 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096993214 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100405091 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118089139 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083203547 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094665411 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079890296 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10552659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081250581 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106555552 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100535292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081420328 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09652213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087730132 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098112886 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103143544 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081237116 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100002742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081834958 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101089123 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078266749 seconds)
  done (took 2.64161441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101451473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099266838 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099073151 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091046541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099506585 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081938342 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109080044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099536008 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081919747 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124113673 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099293919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082504831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109238547 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104797097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099937368 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091356512 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108617098 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109322085 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082327105 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099854225 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123981037 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082419343 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10893085 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099162109 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08267484 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100100208 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099150236 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088483654 seconds)
  done (took 3.52654188 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081038764 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078987309 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095951636 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078183703 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095656028 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078465184 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09552915 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081028482 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09528822 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080906074 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097775396 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081040402 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098164648 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081775984 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097944136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080963218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095864535 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079114683 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09761111 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082175617 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100720787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083800377 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098306981 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081134274 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101208349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080235628 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097725616 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083314148 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098839934 seconds)
  done (took 3.446377991 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090597248 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105949561 seconds)
  done (took 0.967694727 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07890698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113937298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078604992 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103035558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10298195 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082293527 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106528232 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085817411 seconds)
  done (took 1.520830152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095833069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109935184 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082470125 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111966826 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109962139 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098602643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173100989 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101605103 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108204323 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080874148 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116722549 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083178361 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108840323 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083256853 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107195734 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090728502 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100153803 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107981704 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087144782 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100936325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086247355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114343488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104793011 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079966238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103956487 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092351894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112905597 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101495158 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085541281 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107877835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087961481 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093925654 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081578922 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099735009 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080112626 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108096787 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116107243 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084459663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109297497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100562259 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093420777 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094699768 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086747084 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105430217 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109553287 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082202106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100089403 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077476517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099673473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084490757 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095540001 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081870379 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094604991 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10612609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085375656 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110211759 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081639064 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100981438 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085427138 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102966619 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106709906 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084710825 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10254124 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082001806 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108800924 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086088582 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110027207 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094162368 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075944752 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097399957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092520666 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123303011 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106030468 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084031579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10091637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080009401 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102425224 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101596571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088503865 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106831326 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083089552 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1069569 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107427768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082205163 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102218381 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091141537 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099174143 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102037415 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079947186 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117742857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081059109 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098671248 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079902405 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110972071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103342041 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082047971 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097249315 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089749905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093619495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083082815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101034984 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08243975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110885335 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104752347 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105593057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091015607 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107181404 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081801593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103074663 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078917441 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102351765 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083719154 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106688303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093697903 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085163531 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101025545 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082925834 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109162402 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080174784 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099891974 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107383964 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087471088 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097744661 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07941013 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103253432 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081964224 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103532031 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107827764 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080339067 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095329181 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077490394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102562942 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082270161 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104990544 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1075617 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087809279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097433026 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082464405 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108203114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112524921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083529124 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102245616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09112454 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102680332 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084298668 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109396677 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105284636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083075176 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109357177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085066934 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098842861 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088841338 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103281424 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099186499 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086018716 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104501249 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084645165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100932794 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081040968 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106082886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1011293 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080972224 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100021366 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080998398 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110683779 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084507857 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094995608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096901257 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090830837 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098072143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083020741 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098722617 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084841152 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100528381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080661012 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100440988 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104331581 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094494733 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105367588 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101233971 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087573387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111560855 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082429749 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102416288 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081941073 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100989855 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101464857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092114283 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105919003 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088316944 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102467135 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096362859 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089663981 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107645873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082781404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097830251 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081701869 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104726465 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106865273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086595729 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101441546 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081323134 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101234288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087130958 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103228675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100589783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081407271 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105354242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082325806 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106870829 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101600753 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093049884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103965032 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078054408 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103978516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079988198 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106914372 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095910591 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080090528 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099376554 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084119739 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099604594 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085822755 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094436063 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089358442 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108053056 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100784073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082145528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101190851 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089731862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10202786 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086738781 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105267971 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10850494 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094555427 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101173208 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085988276 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112667113 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100818521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076777124 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106020474 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081421592 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09941459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082865859 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099040144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085687729 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109685934 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108615255 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077964926 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103416035 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08206671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101114411 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08047257 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109488338 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107986098 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086288573 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110724343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087299987 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104526738 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08941716 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103303783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106788388 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08491141 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105301766 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08567251 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105084966 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082218327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106339959 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084191452 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102625293 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106025819 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086360965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103926347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092058889 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104358208 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085045115 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107695879 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104932056 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086587592 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104837765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085616073 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107893514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086826028 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104279809 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087869182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099753122 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111898745 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085142232 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112297832 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085907794 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10104542 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091383511 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107324619 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109080343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085326361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104057559 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084752947 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100490174 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085585414 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107844864 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098628499 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09355778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110634456 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083809313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103238187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10112172 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084720775 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099937161 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084213378 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101401057 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083466886 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101081928 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0878868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104109057 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100824246 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085281165 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103090287 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083477055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102253669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077620387 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100311464 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082413058 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101671926 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112623129 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084244877 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10352063 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082602157 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102596859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081965354 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097861575 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109882353 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092067915 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10132441 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108773024 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081840782 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103479427 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093712656 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095407448 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081058877 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098950443 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081350959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109947959 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102407722 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092295945 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101122707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082848709 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098160809 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084269508 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.107927028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077297106 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099204902 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10558663 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085232233 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099892972 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083385198 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104655863 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084701232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11182654 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100437937 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084006251 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101969977 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080960888 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100180829 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082450568 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103918279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085072598 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098953637 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080286571 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101243569 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103045557 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084141247 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101244062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084648925 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111792487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083639231 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10413479 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105482654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078236297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103757791 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082783521 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101083174 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081983382 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104881805 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085968677 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102913795 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110284886 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082925186 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102018867 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083199457 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099495411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082666065 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102745598 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101690972 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082439573 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10248141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091899108 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09918374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086522607 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101390166 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103552865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091538937 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102616421 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086443013 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109631656 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086367764 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103053345 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109406302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087662338 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104422043 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08485718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103734699 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107733127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082651169 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107755324 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083687351 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102941866 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085169759 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099458999 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083697005 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101761022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100252659 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089495994 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102935598 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083476336 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101381581 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081555675 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103116761 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106265519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092393824 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104874701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086497191 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097597882 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081305195 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102568109 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08089662 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104000703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105579529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089684797 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104268519 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084239837 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101801119 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093494058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108660709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104860343 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081583359 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105155187 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085016667 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105045809 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084760527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101571231 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103638809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086888222 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104098144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083291826 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1096456 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087288433 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104034888 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103745214 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084631818 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101701834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07936366 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102726813 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085782223 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107284612 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085889731 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102827599 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113050914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083605957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101858956 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088659266 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101060215 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10617703 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078929111 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103069945 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085591152 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103832553 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079314353 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101311627 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08178294 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104741632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082952727 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097549144 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113132542 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092880139 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10572559 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082396872 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100838812 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07892093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097263758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101085996 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085454664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103969044 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094325044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101641985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082783731 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097419018 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083885364 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105691259 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105479228 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081783673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098139249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082369758 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105623236 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088577103 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101091248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083349894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105808338 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103791043 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082238873 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106469488 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079942354 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106465077 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115926556 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086078697 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102844342 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089599495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110489976 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103481252 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079460707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102813198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086557947 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102294372 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08624465 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103710403 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11862434 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086322361 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101212549 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083112113 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104436431 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083664864 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111014972 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103464637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085497878 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107425154 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085918668 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111889142 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104921198 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093277931 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106368423 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08645975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101336043 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083348638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100882712 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10131928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086370049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103612548 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088611829 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111652562 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101523288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095423844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112534566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088864948 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098660836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083775379 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101888299 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097360961 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085627142 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10021348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08284989 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100612305 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083380362 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102880492 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090070225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103547203 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103271808 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083834733 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096418246 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086352202 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105145063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085404581 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098883694 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083735266 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10320245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087642703 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106986779 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102346652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085377379 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104252938 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084670494 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098563283 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090382649 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102105007 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086549445 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101316042 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103594086 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085014163 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105748943 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089279891 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103805221 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104558218 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096786757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105207366 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081854793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09938148 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089250263 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101264653 seconds)
  done (took 57.959619701 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145943456 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080568716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098123203 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079840221 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112167133 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098956334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078920839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098849647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081428434 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101247467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079733473 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098671662 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108424864 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123444264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092552257 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10236377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098153534 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080725411 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098569877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080448817 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108897207 seconds)
  done (took 2.868074564 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103224872 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120664046 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115028531 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117886807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089080172 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114399164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113718304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113957789 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098859011 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110844155 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116968382 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113510063 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090734289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109816549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110009727 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093592025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118261586 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108915235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116064816 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09498577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112663933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113881724 seconds)
  done (took 3.216840135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085008304 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101951668 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085171908 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097131213 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084454093 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097375909 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088714556 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099921358 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086734906 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102043464 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082556639 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10181984 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104418805 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078717855 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102443631 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081787865 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151686411 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106556343 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083243454 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105326875 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098954775 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085815666 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098254704 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079685484 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101653013 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087994672 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104306418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081311416 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102940728 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082376578 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101857895 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100480403 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085439107 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103239699 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082620882 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100612855 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084475016 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103243783 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079299722 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101215369 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084873457 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098812313 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083952656 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104256449 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081841862 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101336971 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104291183 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083384434 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097908777 seconds)
  done (took 5.455472273 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103811572 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160061277 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086584663 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143505349 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118878267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113304744 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089060757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142352583 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102612743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082350262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124589099 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119213708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10338823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089502371 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111529578 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103510459 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086624351 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102269817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107900471 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08415931 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107611863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109670083 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099906176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117884851 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107224181 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083074093 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102930402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108810377 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097369299 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109745301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108380036 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090422819 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1204249 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108802998 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103578139 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087443396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12252696 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103687318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087774731 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101413682 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086711124 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109164287 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110417571 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122196226 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085538983 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109151015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084239499 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101584475 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118095992 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086757184 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113202305 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120355712 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108789596 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085743915 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108803473 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120579116 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084211733 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102628573 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107689634 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097735934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101684562 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10740826 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100064013 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105477847 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111719119 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119033671 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089944463 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107996552 seconds)
  done (took 8.126984089 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093109516 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110583451 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120229947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119837134 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090828576 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111146436 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110570826 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09161531 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109795666 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115668836 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110167992 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132863305 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086135326 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113686709 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110709362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091244982 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110206107 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109589165 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090814166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110753924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109399863 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119399203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091134304 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119922241 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140938293 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104986047 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090704976 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111817351 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119366112 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110692912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122560416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090689356 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11045272 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120135244 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123629821 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090963196 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104084393 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11025147 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09048693 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111111506 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10529683 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119949455 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091724587 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105361088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111440636 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091512439 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120292508 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122923862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114533625 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116401072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091596371 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120502276 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109946404 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091530487 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11931433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146116244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120453782 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119894756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110448493 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119505898 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100612137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127332083 seconds)
  done (took 7.641121871 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107159955 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114503138 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115856477 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100730602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082889936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108204524 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083058017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102516437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113963909 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095056251 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117004875 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108286403 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092479369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116002105 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108107879 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111434508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087912342 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109012145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113745849 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108662126 seconds)
  done (took 2.931572227 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09389285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123234168 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085345034 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112675573 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107138074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091281194 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107153046 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10757182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085716411 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10722362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096499324 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116863681 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105218293 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091236676 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115949139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11043128 seconds)
  done (took 2.491864992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097206295 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116973282 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120195952 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085017728 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104128016 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081256537 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1057436 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099901229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081269545 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119736579 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085372819 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109368882 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104938064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083588287 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101938494 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088074584 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100472652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082620891 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104700039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118586252 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09614729 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103896656 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105374975 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087146416 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105781184 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090431998 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105341095 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101868378 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084082096 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104556474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085545012 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1135331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102741986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084475232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103208076 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082777684 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104078056 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084906592 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109032652 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103865957 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084066239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105279422 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085555705 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10568671 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08162182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105522797 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101060745 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091602499 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103675536 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085600634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105509998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107257947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086483749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115285472 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089615247 seconds)
  done (took 6.24185234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099177087 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108617486 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08096887 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103359038 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088362999 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107352124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108298558 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088932028 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106557449 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083232721 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10632978 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089180398 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106665332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108516634 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088078138 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108557115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081305487 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106621539 seconds)
  done (took 2.614561207 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091093617 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10551725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09282194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105090658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085308337 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10720327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080636209 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104048372 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103119123 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085473342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104930179 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087432235 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10317007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088719669 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105234893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086134649 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108348534 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104351917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085557113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100100261 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087446211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103396759 seconds)
  done (took 2.96723806 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118484132 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125123802 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093489938 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230719024 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104075276 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131545875 seconds)
  done (took 1.646528842 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109929169 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119677471 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10611252 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107656942 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113908939 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107159085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08797409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106372504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117208347 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101365277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108393427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117265939 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116363312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096934003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114150345 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114041125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108043337 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088127696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106173094 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127199825 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088579939 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117208215 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106804087 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086277392 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107576532 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116511923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117429046 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12219766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086927651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116282191 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11335968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087648362 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118457792 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120533426 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108740895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097107553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107865548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128298184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113897737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096010291 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109547071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114669217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117768058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094112305 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117834349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107465147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092694985 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108067592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108080554 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133927122 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114210955 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095718687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114176244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117048105 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117794948 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13403533 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102094629 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116774895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114240335 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121782721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116852476 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094977184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117088596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121525878 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114277329 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117309587 seconds)
  done (took 8.113477547 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104267938 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126022134 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10858435 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121750828 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096274788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107268034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10772394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087874826 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106546338 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10755281 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151966507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088301898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117208486 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116489098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107924289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088183171 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107436925 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117331172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087610761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133129697 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107304884 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116700803 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11691435 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097238097 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122549229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113910735 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108111178 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087015582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107356153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107030556 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092665362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107700615 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117428299 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086749652 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117041813 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108197763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107920904 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093227374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107735372 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114893071 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096795707 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12723492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107680961 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108096633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122505681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087447067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108016658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087051747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108496946 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107127549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12219839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101710246 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121455618 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117168325 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108644775 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087633595 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108137016 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108207715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088286333 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115306943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11696223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107844501 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134654072 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088067366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107638486 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118025759 seconds)
  done (took 7.990972793 seconds)
done (took 155.187607582 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219379079 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20546859 seconds)
  done (took 1.27349107 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087415613 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135905577 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09685792 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168070508 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085598533 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140533002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138300655 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097686955 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106519933 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086654425 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106089023 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087965598 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170760354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086530367 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106091316 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108559355 seconds)
  done (took 2.661402036 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113863379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255931007 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122683356 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105232789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090126372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109937564 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084783914 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111573212 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089511453 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104982137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089016537 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107372728 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084642165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106548975 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109673395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08826156 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104664804 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088404436 seconds)
  done (took 2.819396848 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112771452 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147009306 seconds)
  done (took 1.118042289 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240717497 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161229149 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227525103 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.467390372 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.26863023 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.356145099 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198520281 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210076289 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169010417 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207777943 seconds)
  done (took 3.359123482 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119435216 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178711691 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315743293 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156559038 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107032998 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126584132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157082001 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13074691 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122469784 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123331635 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101659292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117640788 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138279459 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094840124 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114844263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117519422 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120585877 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113807919 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115015635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095808773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137936438 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106550403 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094750758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114295828 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119569368 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098915533 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105948389 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085447803 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116647237 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115400781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091712626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125044831 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119233143 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153773138 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122737209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155654147 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117451103 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091450529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114010511 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111808426 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097578979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118148428 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124876391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096631431 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105696453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118161742 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085695958 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105369743 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093968605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11830658 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115234662 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.093007357 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153675085 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119648197 seconds)
  done (took 7.372739147 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787337423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156100502 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091492224 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.873361808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139119579 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103253865 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.769935446 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112442237 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2537235 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.747110189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133903394 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120753881 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204587141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25912505 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954477047 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291020405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637646419 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124988755 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150872713 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153820361 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119485791 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136754823 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110259689 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452873748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116612717 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112156434 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09687607 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119813587 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160114635 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125118568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114392658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17732997 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249852648 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204975008 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094282342 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111835714 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111572709 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169755657 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262524757 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192629192 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179738863 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109223963 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089381388 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12210873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132449741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10811721 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162146509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173522545 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168440083 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114512047 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118895558 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097967205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120156003 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163403754 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120189774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320118312 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309709184 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089772834 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122312277 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125778989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259245757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101632097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224792911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140200166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212388128 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090251721 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77392667 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169225425 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112018892 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095928011 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119906431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117468037 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121803812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146474133 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38978036 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124073341 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116061285 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090240977 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254083239 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12598958 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090903752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161272452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116353683 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121603543 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125071394 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101084719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189425057 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235732163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122795732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098639457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115726637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126015016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094143582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210311927 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218471609 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183421239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208702017 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122566832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163868775 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170665434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119242519 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172584055 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120005131 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124831344 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100665781 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216696073 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14568436 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123774529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09407494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119011212 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148197676 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127242437 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118289196 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170586358 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478644462 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190194082 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087281853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128131725 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119064359 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161125811 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116690282 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235985763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122582977 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169126129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120575694 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087345246 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121295032 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161754349 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121260725 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121757052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122130143 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097063391 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257063572 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193970851 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121187869 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242085901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183710328 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096634578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193211048 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0991928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18885062 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098964695 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122849509 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118712891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764379109 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124423853 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121554902 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095124933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195568824 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112876021 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12374856 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102203009 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109906341 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78576228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104914523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121867993 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124431339 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096064033 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12159179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118151128 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093393259 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183666664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226764945 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098770414 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120767564 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124375295 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160473032 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117379987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103324344 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125770218 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125193682 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100051345 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116316822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125529512 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169932187 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161885077 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218651261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590553508 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090671448 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126092969 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227463904 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112436137 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265328664 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12100972 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224793974 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162823907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121803172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308183487 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165335903 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195299513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127847053 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175700168 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109274721 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096817626 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186893672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090412407 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117026104 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163151988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124968316 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101509659 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95864519 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113163151 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224917526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109799226 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172514216 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117397821 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098061129 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294889532 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112853102 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10571873 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185810946 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093286117 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125527942 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.740199851 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103216815 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122647407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118462906 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218322543 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1640523 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120065852 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097326578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11889267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162986491 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210102242 seconds)
  done (took 43.956573302 seconds)
done (took 63.41560302 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278289031 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217605589 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269754977 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170836738 seconds)
  done (took 1.897237546 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172442471 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149664718 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121269413 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107764461 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151486713 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084129073 seconds)
  done (took 1.6709111 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363986472 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276033751 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242781448 seconds)
  done (took 1.773047854 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289553344 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246487834 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473058183 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323705216 seconds)
  done (took 2.34100003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209406591 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132244863 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110926368 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102547872 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196243873 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245486246 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141905898 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200689857 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099090529 seconds)
  done (took 2.371670588 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196941684 seconds)
done (took 11.138923114 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.251993664 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.155759722 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123354818 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.231462391 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.181565855 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.195760808 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.213270531 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.284018322 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.182636743 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 0.196554595 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197861295 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.192599507 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.148886774 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102238427 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167581351 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098518102 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125878575 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.202127548 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093850955 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.18389821 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.163789933 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115188294 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113738886 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122073106 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121022798 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097562833 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134690496 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.131553484 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182167008 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1462469 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194408744 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124569392 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093663286 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134520725 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094861933 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118205925 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118318241 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116903895 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.206304422 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.246660559 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.205279943 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170588811 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 0.172967727 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213549319 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168536797 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.228542478 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113416497 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.221662015 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116622783 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154226677 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134896303 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141018756 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.122690457 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136090656 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.191862068 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12498012 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090210445 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133668718 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.231985764 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196643142 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088128004 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220673613 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113090622 seconds)
    (64/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093387355 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.168116845 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066349067 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215373144 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.213362644 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099110221 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124599222 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093557426 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110382642 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.098946072 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115296851 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133025314 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.124314493 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135964723 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222186866 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06673864 seconds)
    (80/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.176488853 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094327074 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154426074 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122444677 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113947001 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212485886 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.158669366 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076932163 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182781044 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185317081 seconds)
    (90/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138113048 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082800279 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066211271 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183947613 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.110584042 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077093269 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18091301 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.116060751 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117383703 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125294036 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.22158108 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.125482086 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.138150771 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.151695283 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141470405 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.111012492 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067158013 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084064054 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10989278 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066722098 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21592645 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106096973 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086359408 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218580776 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066082267 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111502554 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066333809 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089703536 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067345782 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092638831 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137230975 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111576399 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216199743 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15520358 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.331303893 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095293664 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106656574 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094139667 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121588687 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.173824478 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.182667727 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092259755 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193974477 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088275013 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109264994 seconds)
    (135/309) benchmarking ("sort", Float32, false)...
    done (took 0.172749544 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111812638 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190459168 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107700174 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08811373 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152040919 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179886231 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179149989 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174272135 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087746177 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149428115 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077047308 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 0.180966037 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119421471 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094864185 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133680077 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119768144 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091930071 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089530444 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110880309 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117163825 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086955001 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148187939 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086317081 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114594888 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117574152 seconds)
    (161/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11435502 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143796363 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09308298 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117449277 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122361793 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109194308 seconds)
    (167/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129880508 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177874031 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120605089 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140510167 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121709627 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086305387 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11320567 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077490162 seconds)
    (175/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117216158 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066701917 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085911479 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.144404698 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116261766 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067364448 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093938765 seconds)
    (182/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118343549 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066649358 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186467275 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109471945 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067583375 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09242043 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134375979 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11581235 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093448832 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090218294 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066232215 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095692175 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.089649539 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086263477 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.130564054 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069045022 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.153637871 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.093266889 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154565194 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139237011 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092734582 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121205596 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092900831 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110460187 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184787002 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09580324 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.100090158 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11397333 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109699349 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093320227 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121153415 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222743788 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066812567 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189244642 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12422907 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085945761 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090171876 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085645177 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177794086 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088983206 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089700445 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092984174 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119064843 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094418508 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089751067 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093324513 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.183800681 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085867633 seconds)
    (230/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106274683 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086652514 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121666823 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102645044 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090514203 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078274837 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115241964 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066716915 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136342539 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075959339 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132129988 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067708841 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139341582 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0882199 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090480291 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133521438 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10927078 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0860536 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090786055 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066372528 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.18979893 seconds)
    (251/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066563589 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172689057 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087453145 seconds)
    (254/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10162886 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067803157 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111286655 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06753046 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131779269 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068745473 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067812492 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113852181 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135640355 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087654555 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115776846 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099436098 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090895203 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06858764 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109490666 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066722374 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084422945 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118317506 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08960479 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109910736 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094063482 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16410815 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118549893 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089986465 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11566235 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095145376 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112652581 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223430603 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068513037 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087281146 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112255972 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06738514 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.092432975 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068688065 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066554802 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195166344 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119669019 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086170347 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091146567 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06835797 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085167359 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111984503 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119113539 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068107578 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111137411 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086357959 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115695977 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06738117 seconds)
    (302/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067942592 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110200128 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095266535 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090309132 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086416048 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124578961 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09219856 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110324767 seconds)
  done (took 39.858475178 seconds)
done (took 40.751456559 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100418423 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14628494 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0967828 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135820007 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123600425 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091612914 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119383747 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098905656 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12450317 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125130652 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098216648 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093492147 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097000516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120401688 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097019826 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138906674 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124517667 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094669813 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119689024 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085677131 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119279213 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087127929 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111668187 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070766994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122039056 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094409277 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117201049 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119984208 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086405036 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110678453 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089913783 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117772119 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086176453 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124587764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093259184 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118590212 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120475232 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097356137 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111960634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086728836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121121826 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087002801 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120429592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095080214 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118588575 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092006253 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119096292 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12388412 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116298859 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11647074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095054232 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122272486 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096553046 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117764389 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09037582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119511293 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116175892 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115623167 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120530258 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092157909 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119871785 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095612796 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116721515 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11853312 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095264721 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122218389 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097846477 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116831121 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096973447 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116880221 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087616375 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118998702 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114448418 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087158446 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119683519 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097545483 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110216298 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093713956 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117748418 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091660464 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11100064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08998565 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112634976 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093179154 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113301393 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069856462 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114513791 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093716451 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110199234 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096511284 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117311195 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093575553 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113476912 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122305738 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086277453 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116233967 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086885887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11146626 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088684818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115572755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087113144 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114330459 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095748177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112625311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093272687 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123676809 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086631783 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118313947 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086515595 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110732116 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125775046 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098049208 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112075844 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092119102 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110557058 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094082545 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110371611 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087271528 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111375944 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086771136 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117060488 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087125173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114247925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095008753 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126067428 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087222124 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114756634 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089808568 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111714082 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09309259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111774365 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087696342 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113786111 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077921704 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114096881 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087803493 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119400842 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090161951 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119470819 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113362204 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096709001 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116387785 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093912656 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117040284 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086168426 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099102547 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093318925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114242405 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088869067 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111058442 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089411175 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110914515 seconds)
done (took 17.000608459 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08805784 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185599309 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152374465 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143095663 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107763677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112256643 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123834915 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119537132 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113991251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144668355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110693504 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133110642 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14831646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086428499 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112560324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091359928 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113871453 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102403219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146002583 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13466284 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165487581 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086897962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14773737 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136376724 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121886774 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105342544 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114714489 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092110251 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115325571 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112960162 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133130574 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11589509 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088385185 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135131286 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105133143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12083795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087717396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119490759 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112642395 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08785093 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142521879 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134238304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092856781 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118168119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091271519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114507901 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089640129 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121854355 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123536609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091689455 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127278721 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158183125 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091459955 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122464987 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086818207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123465064 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122316899 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09029106 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113247397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090044987 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114284145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091634605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128112925 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143900698 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091767599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121597339 seconds)
  done (took 8.658478973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104918946 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139529643 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131396351 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105912884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113389026 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088153451 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11368306 seconds)
  done (took 1.757086109 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088809391 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135295059 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12774882 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136888907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132186117 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109509799 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123800126 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088501352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132205862 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089806261 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133809787 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152659239 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089838446 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120947886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139167182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088507269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138464487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088435812 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117169971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137846114 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09171598 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136272444 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090571399 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114317104 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10349981 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115013215 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16411326 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093365198 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115384997 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091807504 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112708689 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166528014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103374408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124833354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113649212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103168558 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12990045 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087122237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130960136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093828125 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128337367 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114376433 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089956034 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112882517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093675812 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125291876 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090524753 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115474127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091424344 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134183301 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089744702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128206792 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08902478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117975986 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11566442 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09469469 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125385278 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09016748 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134323403 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090714318 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131687832 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13375878 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103416371 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131485153 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091669868 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128837373 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128540024 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092168786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116119439 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092238897 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131483829 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086503872 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117849661 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099486178 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116556592 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138132648 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112136069 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115931132 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099307644 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116265862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089692213 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114807747 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112226727 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118043265 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114827307 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093896861 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117734913 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087828577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113923587 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092943792 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113104502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090117815 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11874385 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090141977 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118255377 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106048391 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116051113 seconds)
  done (took 11.879429821 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090711614 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116042144 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092259656 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115495012 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090349672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115803591 seconds)
  done (took 1.59155887 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114860814 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118189941 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10418457 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120511143 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157481076 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130220359 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105207053 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124854596 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108003897 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128274363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129966466 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10501013 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137056306 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122906507 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104149305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121711747 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130429915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100077794 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129121168 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096605422 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137125148 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121941023 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096788852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133921827 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11956212 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09625786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12653005 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103468885 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127491757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124907668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095913364 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119845101 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121810813 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097849265 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131017716 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096626028 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121023594 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119606151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100065949 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11932897 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130533805 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096879397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127937292 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09490752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125283475 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122574909 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094238213 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126335486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130050662 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093489309 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120076266 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095860453 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118969925 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119271986 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096941151 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124207926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095031996 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130774371 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122023882 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096328632 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119115267 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093141524 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124323518 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119153481 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104443113 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119860494 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121853396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095592537 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122744088 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096242939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11999675 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118176135 seconds)
  done (took 9.289678232 seconds)
done (took 34.126101158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688455614 seconds)
  done (took 1.657075302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.709752624 seconds)
  done (took 1.680745697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.208400573 seconds)
  done (took 18.179161537 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503431252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585474286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819559315 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178689685 seconds)
  done (took 3.059072686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940752526 seconds)
  done (took 1.933571172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296769109 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259386579 seconds)
  done (took 1.535084799 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768127483 seconds)
  done (took 1.752499079 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.351903765 seconds)
  done (took 2.329172801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331249065 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185198943 seconds)
  done (took 1.502379017 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550987955 seconds)
  done (took 1.537598167 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.802842784 seconds)
  done (took 7.790987658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258661429 seconds)
  done (took 1.258654785 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302122988 seconds)
  done (took 1.292548502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.543556127 seconds)
  done (took 4.533131432 seconds)
done (took 51.016500145 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098836976 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127979925 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102004436 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124547082 seconds)
  done (took 1.436363656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10119865 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121572353 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100831121 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121097444 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127621655 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097231066 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124607497 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101331588 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120735754 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09689305 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121367503 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121039788 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099015487 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123787516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094256677 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124773656 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125334388 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097243764 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124852602 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09643165 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119576023 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098249147 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125724931 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119620447 seconds)
  done (took 3.696128162 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100121861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11964735 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09739597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119151212 seconds)
  done (took 1.42825538 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099804938 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142812553 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139007901 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100544364 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142559609 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13699814 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092362716 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117899852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094628423 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126090765 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091178171 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149824845 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138507802 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100020659 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127527791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113697073 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092418324 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137762745 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101167327 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126025461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094265896 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124932663 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091368411 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140479135 seconds)
  done (took 3.815297034 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157839251 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151470562 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140210841 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095956231 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156604486 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14204186 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088059274 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14184171 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091305356 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131234318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118842055 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133366667 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129103062 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088537408 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114091158 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087816667 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128863567 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128535852 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091165317 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145893769 seconds)
  done (took 3.463141546 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097563385 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118221362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088705727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117366033 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099520181 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12187201 seconds)
  done (took 1.64270604 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090822358 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115229862 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090741198 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115277189 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094232164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116112889 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088846692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116065965 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089811835 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115120573 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090417914 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11503086 seconds)
  done (took 2.237799939 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458200198 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092851392 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121539007 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112450553 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0966413 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115287578 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104866431 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119497702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141321608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090226223 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116858909 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091036784 seconds)
  done (took 2.661621978 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240349482 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126441704 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293293096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192190801 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160872287 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172989544 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153461348 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167808697 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226266176 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159824806 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209723012 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2219762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126052995 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219992043 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112314591 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144995207 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229199909 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221323868 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156160827 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234332169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202657195 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16640158 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180335955 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153291213 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140708241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169871558 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121796234 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1042683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236089207 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181099776 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216019391 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164870293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147036772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243274155 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248691717 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198501589 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188848184 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13666687 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147427451 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166094265 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271112346 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138871448 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239301396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160222818 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105137555 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222785298 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169091135 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176529128 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151493129 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139801896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200228937 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243080619 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194414725 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138381698 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163612294 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161433073 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16804065 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153403126 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252508733 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199534178 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205492925 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095210497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146379011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192472578 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18262578 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167431776 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208410078 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146314665 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194339817 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18688902 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167986163 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219332288 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184478723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138746327 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170165899 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176053379 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172962692 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256416337 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178070806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121319788 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169365563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149818584 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131804512 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168402578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124384041 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241628195 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123588119 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134778474 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164300475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16269679 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162577144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20095828 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22142832 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148198892 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084760879 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157121158 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15626226 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190950201 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140339349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162114795 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161882536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130204814 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179250478 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124250284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177550017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092544166 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178502922 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209770531 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100749346 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15931714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154796236 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149347875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182384109 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200224528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141145636 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134249121 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206846625 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202714274 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.123215625 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205480124 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199129787 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144022596 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148867698 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199634117 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248608241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114122931 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230353496 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156697118 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134975979 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107909625 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17896476 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156080693 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161550288 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133808614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182023318 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24024142 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098845929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139746734 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188796143 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134219165 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133133196 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161569087 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149440378 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111375585 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147331237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150989397 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209294342 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17937918 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15354319 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168028281 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151520829 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25057295 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114368865 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150298273 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149962343 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121377324 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193909075 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198285577 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132222083 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203494923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198997986 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130020308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19759195 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107878999 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177238567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131209725 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093576448 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22209462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167828323 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163986056 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196468192 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155504324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182970869 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208817301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174818735 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177229819 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165297988 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160679761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139247496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158848966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164630952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097024193 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144247308 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135103515 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158750023 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142852386 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107215346 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228468913 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172057608 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149615414 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158671493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149769003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180004096 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102039015 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205517936 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177322896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148278354 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196673528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193369669 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213050294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116802438 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234800399 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121196165 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098427485 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142824489 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172914208 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134065878 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108715969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193303448 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179487439 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187111334 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177681693 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16459222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178167895 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188903123 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12220675 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167501221 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186139166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176410516 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186344942 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141266796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125032543 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175900179 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155279866 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256113023 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166009036 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203184062 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210098396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149137679 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132691979 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152702144 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187216342 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154818001 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178404804 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147121036 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141357817 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161452666 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108628925 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160897468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21182591 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162332272 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193055527 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15149508 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186553684 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128434519 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166378497 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159422559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166293645 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108980472 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178711918 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204033694 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148857784 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171186731 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220116986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104831719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179047692 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242054727 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197007959 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138500725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159489022 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159828636 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165161343 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174821108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178399504 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160255157 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188082025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157982059 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137556168 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140137147 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150545442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12563675 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134681935 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149138231 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174719438 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140095266 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188943329 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161934388 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158516924 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171128342 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151028468 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14452514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151656481 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21703233 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175804114 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244130351 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150205451 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179062493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205409867 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127776771 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132138355 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106235966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177622317 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136518612 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217252261 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120473556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158121586 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181318263 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21981099 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112567738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120380058 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15734703 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174116017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164647532 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152150369 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160138274 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209472836 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143544635 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131391293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17218869 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129588475 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147731046 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226484186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081135764 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149637572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101731176 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134501117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164584693 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236152114 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109343176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185344057 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169485004 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169199984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165952582 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14844237 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150673441 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166176416 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199614494 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212527442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104869244 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159280851 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17625959 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222822056 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16248065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140360262 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204041271 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193377224 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226809831 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142669326 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167260067 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166336768 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129727518 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214276096 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13470126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206915709 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134942547 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198294495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152994446 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142828246 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17610755 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148904332 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1432008 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188726063 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173312955 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13617646 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132825554 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168237675 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177014752 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155501333 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127742395 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182775452 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125135316 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191357143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260075737 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106680131 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153456079 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147601539 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135073816 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157650863 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15917331 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140109755 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139323499 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229809274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135270874 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192254997 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202328729 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197439912 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17536638 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144682631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693032989 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103208232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221583175 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155459671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208067299 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151780589 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172894022 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158260434 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171625281 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194908723 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185982256 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203672309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221734558 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179098532 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132468559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159284568 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161604775 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1447781 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153811564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167105125 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159683196 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125127461 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205354021 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170545698 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134449519 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113278698 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224882206 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127804079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21531955 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180099354 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11191676 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199823351 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186415255 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1341922 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180578319 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23833315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115601553 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151490985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133646186 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156546616 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261132324 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09746727 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228083053 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176307261 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157887741 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167543138 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148253541 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190358127 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158282868 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205177231 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118941083 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158603078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15599537 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138763781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130832675 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154627717 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167459463 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120644192 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187152896 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138323454 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190506957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12442527 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14534697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129132523 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218953125 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215685331 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138842503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136158412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163935519 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150804196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175471733 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177508013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136520452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108271047 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13784835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156143073 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112703202 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156127384 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156036823 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167277602 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206944585 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138695384 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280951028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139389883 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154693682 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08955513 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13240997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151071535 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118590884 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156973438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150458013 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260224732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147137045 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106420221 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149033016 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126633522 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135985334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138190475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192091124 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176686509 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14558164 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081456253 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159832259 seconds)
  done (took 81.219796663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162235219 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131572924 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146293609 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202233036 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17641958 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270946122 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210135033 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254855302 seconds)
  done (took 2.636078079 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093753903 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146419864 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153688551 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133897128 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091991085 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120834576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331837092 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134201007 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091022544 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140253116 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148276128 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118001429 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.512706652 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117959778 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119515853 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083674765 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116452177 seconds)
  done (took 3.731952657 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464733122 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712622686 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.479262735 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124722365 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.1319173 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134763652 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.731278582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.210710619 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094850768 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486704119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770177698 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.186095694 seconds)
  done (took 18.612501012 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099354932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121549895 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107428101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136920433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09680246 seconds)
  done (took 1.645909833 seconds)
done (took 129.211186763 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103815707 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405005839 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0723919 seconds)
  done (took 1.598479123 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108090884 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137091107 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110038284 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136127718 seconds)
  done (took 1.587107872 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097922789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127256772 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108900676 seconds)
  done (took 1.424235582 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32370539 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193770614 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142395502 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106027815 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130986792 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103259863 seconds)
  done (took 1.4320118 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097469579 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128270911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097876612 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129845772 seconds)
  done (took 1.549881188 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09464194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071344413 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101510702 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075205912 seconds)
  done (took 1.433411966 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113474792 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131583875 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104484986 seconds)
  done (took 1.445481082 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129696082 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138802702 seconds)
  done (took 1.36414123 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105627983 seconds)
  done (took 1.195766565 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118123948 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170084849 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.19064881 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165866198 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227731525 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166401174 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14160921 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114680151 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130566038 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145049487 seconds)
  done (took 2.666266955 seconds)
done (took 17.55180991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103917339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512250162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413411831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11709447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722448402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381076142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030355023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14632383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166449849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094302358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139765867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675063174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060141144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473794863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018661092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375844838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706217901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093526954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121082647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093811618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017050351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092776637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121950037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093171485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702966157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427115159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095286119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374764605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093209338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127626982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383400542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122840691 seconds)
  done (took 17.182191916 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095972277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174200627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09901666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137950879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123276918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095161028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124737212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093848799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180717431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122967491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112516723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121753636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126732825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094634811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142586397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093597281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125582697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093358889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120984426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122150438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112343529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120788685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094676057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121812388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094044197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135579261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123016168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093736705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120929988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099533635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128373559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095994009 seconds)
  done (took 4.839903554 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141751212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183800079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129357121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129014872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1696526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124634906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200862386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147041425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155468371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123338584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140226768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093152654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157540392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124005156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114409792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.1226526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097561891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122248549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092963462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12361375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14007722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092711751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122834448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093212209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123984772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136863747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096040652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121043592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094178305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127119357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10059178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124702775 seconds)
  done (took 5.170303035 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097137695 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126591568 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108935488 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138936766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096257125 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126503004 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098224315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124344751 seconds)
  done (took 2.016901801 seconds)
done (took 30.301771681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111589821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12791138 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107571849 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134650002 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103228773 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133155239 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092147102 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134654043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134657611 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102001027 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138483103 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093575355 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123616895 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091894988 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13600784 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098978334 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134299592 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103076614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134654532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132969265 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095680515 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134704765 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103615243 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134684095 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104559834 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133409155 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13741652 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100109524 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123429239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095176506 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125264863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103831518 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126147981 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105802736 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127996591 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0982075 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124699793 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095011572 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134243132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134066315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100820022 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133901495 seconds)
  done (took 6.033826347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10757899 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140882316 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10514936 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082324051 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117328145 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081101379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138994317 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079409104 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112010804 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108882757 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074960227 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106840275 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078978925 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105648466 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077105403 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076924049 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10963258 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075887286 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077290802 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106313028 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080778705 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073614635 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108588191 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07881634 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10529281 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081685109 seconds)
  done (took 3.598828561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100758878 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13675579 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112879895 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185629114 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162266475 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100899836 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133529488 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141615762 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108772025 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12211191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096433847 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150627524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111225091 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128966503 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092890576 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137423868 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136343362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094664225 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128597244 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112915471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13903116 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103833312 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142851792 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134203125 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092005293 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123886078 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09709694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13608221 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097602273 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132856489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126017816 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096638291 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124535384 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10536821 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126733124 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095182355 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142625985 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131734925 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100885899 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123012208 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096737929 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122312085 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113518797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168008964 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092228871 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129770534 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129923161 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102916588 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122359752 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111724318 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132632996 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092952852 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125819158 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091741544 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122220844 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107617581 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124021935 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124762683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103408657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125280584 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10650337 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126204562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108944692 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122269112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101108202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121912791 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123105922 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092345497 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145338204 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09456627 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164224901 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094011337 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124226656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131545414 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100365148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128690946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093888042 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138249512 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102974714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12601823 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101370928 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126504785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124736705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111810741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124867868 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094649669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122822087 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100265311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125593458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094267427 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136565227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093568414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124980052 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140628496 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093170589 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124173384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099822084 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127459072 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091997014 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135829329 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128702996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093574124 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133062019 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093256013 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124738704 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10316548 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127164512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092332165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127174951 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099690113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122966938 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123480858 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096936713 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125141777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10316678 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129205011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098210163 seconds)
  done (took 14.888975969 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229006303 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216467505 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249518064 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.268178247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135622693 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146383842 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212122345 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125730151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123768809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160653871 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163054969 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187051908 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171798448 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180995193 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111588961 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12135267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141810313 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135190068 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214391961 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291172167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142339302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102587515 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162120208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160873754 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137547422 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102562258 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140371958 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134398896 seconds)
  done (took 5.795798028 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108109099 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15795056 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098285156 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144848321 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149122043 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093318989 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127855421 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094815241 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136401923 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137004647 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093685642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129309472 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101088386 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132800499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124287793 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10360389 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134268606 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095146239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126738706 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097620433 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129835421 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133211504 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097538064 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123321878 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10212586 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122543942 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086297468 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142405476 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123975868 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116111689 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122294527 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100350581 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13491224 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094624681 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123478603 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096544686 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125766281 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095696133 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124435326 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092390701 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120820929 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077876929 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122466101 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137653862 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099540117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110235634 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099333247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129987758 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099585183 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121133967 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096526108 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126112999 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096968874 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131480316 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098772872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129115668 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096594265 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115827315 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100136257 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126183019 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084518623 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122030194 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098248199 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119020031 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10181621 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129352779 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09245042 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125554013 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097815428 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129322043 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095829425 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126035111 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120915642 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095993605 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129329628 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098542808 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127131839 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093285288 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123603606 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094333977 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105789123 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093981737 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074633704 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126697564 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092513578 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.1226878 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125454339 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099671055 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139156593 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095665163 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131434963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094844428 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122540387 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126599835 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083633244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096658762 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13884847 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142204558 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093325915 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12228946 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107283939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128248062 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123132919 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07716421 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100414382 seconds)
  done (took 13.0107832 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128685467 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153259949 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095884376 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142747165 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155977326 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158126072 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100466173 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13161913 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095512614 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143179761 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093812304 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131576177 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097422547 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137262526 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15839682 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103839653 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126186176 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107172571 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132152708 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170008575 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111985274 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14150687 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139503165 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09346107 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129743532 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110785033 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162169777 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138471875 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106673646 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142945273 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10777907 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161782709 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143729861 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098898984 seconds)
  done (took 5.492736649 seconds)
done (took 49.920860642 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21281059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442555774 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200854505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109083264 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.22682626 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.240806561 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212337384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203517643 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.698110923 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202586474 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457155804 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.83549027 seconds)
done (took 60.176939673 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.233209636 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334015766 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468129482 seconds)
  done (took 3.933884987 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553024909 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.151953804 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463611623 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200519853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201125893 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486895847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.867752935 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.549387425 seconds)
  done (took 28.05254971 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.207689186 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.591961385 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.902037067 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.888249462 seconds)
  done (took 18.721401206 seconds)
done (took 60.624560559 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.186031006 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.278550945 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.218661576 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181571461 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.313292934 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.23519189 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.464569882 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.399743436 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.209485629 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.181932131 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.22303241 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201848798 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214009385 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.481021097 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209704276 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206383156 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.25495486 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.645764153 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.61249214 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218457717 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219218039 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.225956601 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236919454 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207258091 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.203367679 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203272964 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203205034 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.221708228 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.808119273 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207936977 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.208912209 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.690920438 seconds)
  done (took 191.704788105 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.203401661 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.288589428 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.308691672 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249153232 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.665755888 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.414611228 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.367330987 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.729725195 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22427316 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.233429629 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.466063852 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209706694 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.54125236 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19685058 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21365637 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.310020603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.55364564 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527664413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225100948 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.506956096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229893114 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.68445742 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.609571521 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.412586073 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.250734902 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.268504302 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.222428236 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.252972213 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398674907 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.476477697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216173022 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.255486349 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836294936 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068092022 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205466714 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.249857683 seconds)
  done (took 151.207735015 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.481610525 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204711117 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205293877 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205419309 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23788967 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204861907 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789105092 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797074649 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708459428 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.547525621 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271850804 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50339536 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209808487 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299877618 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217941843 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205954466 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220795422 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248893257 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208118759 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205401025 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787536511 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224213108 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276279105 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21382438 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202325404 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233457474 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591034333 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201780159 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23268877 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521840721 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249817975 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201348534 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.547776974 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.981512588 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314707313 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202327581 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23236435 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200112826 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471635293 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200508173 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20092726 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204031126 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823034894 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205311736 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768191863 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205812579 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140472561 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205323161 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200082878 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.792068869 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.755216396 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22014057 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198965608 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203296885 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200782294 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200352407 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232258203 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200288274 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.665218787 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302283826 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216340684 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203162589 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232811794 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201009746 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.230149508 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203885163 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.450588732 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276462004 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.411834011 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767359042 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205673125 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294061948 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318921814 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201066881 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200767146 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200753485 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20055177 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308648057 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201742767 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.613777918 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200932748 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206793387 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202342418 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26284777 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295436603 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202169914 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537922245 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207183555 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201681184 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970831937 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301177295 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202206097 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20179391 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202116988 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201109829 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.615020406 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768537802 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407588612 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206955479 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.589023879 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207075547 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.626775954 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.73402014 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834587844 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206687232 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307129487 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205259873 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202135956 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199130185 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.200257181 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200006695 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228748808 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.215594253 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258166648 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597341212 seconds)
  done (took 346.792699636 seconds)
done (took 692.316354397 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89746424 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852427389 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.979246023 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866032092 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.85108555 seconds)
  done (took 10.576388633 seconds)
done (took 11.703627788 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.382593819 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381246871 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258875754 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38339759 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228075217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398692806 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361292445 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221116263 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298927214 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280967371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298561914 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254071685 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228615772 seconds)
  done (took 18.107913845 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501411071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525015876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264969049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50895961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241297492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550629671 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394120742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42343789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409293456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232605625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214379278 seconds)
  done (took 16.398693816 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509937843 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508045071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267296492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512114914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2422341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513452971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399656342 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41366936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44180217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233590571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216066207 seconds)
  done (took 16.390658261 seconds)
done (took 52.025817356 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210128867 seconds)
  done (took 2.342986833 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245162697 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407214211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231933921 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216915583 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212941373 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213734973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215981514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212007841 seconds)
  done (took 11.089263054 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212216848 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209233736 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209852718 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211198576 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212194307 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208278501 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211974281 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209311481 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211511775 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21135994 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208838938 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211923604 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211532484 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208930423 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209240736 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208679174 seconds)
  done (took 20.499777381 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211417926 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210100461 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209799581 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209324202 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209619209 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210477227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210065993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209305508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210156431 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209579063 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210615374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208649691 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21040108 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209481301 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209726902 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21122394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210196272 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211182221 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214979598 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210399365 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211669878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210693996 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21143386 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210674689 seconds)
  done (took 30.188007071 seconds)
done (took 65.249248119 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.257334011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.828416262 seconds)
  done (took 9.220823353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212981259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212892934 seconds)
  done (took 3.5626225 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212319187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213340485 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213464699 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213071235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213113369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213659399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213599948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213699464 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213908122 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213030233 seconds)
  done (took 13.269545273 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213755556 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213881171 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211056239 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214827962 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213928302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211324721 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21328491 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213587065 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214595017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21182559 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214458695 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212188146 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213476559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213319957 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215132405 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212343598 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21235576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212984227 seconds)
  done (took 22.975034395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214962128 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.215324413 seconds)
  done (took 3.567526497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212797245 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213212081 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21269377 seconds)
    (4/7) benchmarking "year"...
    done (took 1.21358661 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213694379 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213694357 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213036702 seconds)
  done (took 9.630135696 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215443905 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389714745 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.469682668 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.854223098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216141393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218571233 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087020526 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21919194 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221220543 seconds)
  done (took 14.029637895 seconds)
done (took 77.387609244 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.220073932 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.2248309 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.380527408 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222645829 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229544943 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553098952 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.231041855 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.349185051 seconds)
done (took 37.546358474 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227453214 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.955671409 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.954676382 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221411296 seconds)
  done (took 11.270114086 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194351887 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.140360865 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.199890476 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.210205983 seconds)
  done (took 17.884746715 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228718117 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545544754 seconds)
  done (took 4.913199571 seconds)
done (took 41.431298217 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218385928 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215900367 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218235251 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.215183792 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217826368 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214187011 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.215258982 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214715134 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218945479 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218635437 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218175948 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217971932 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.217099025 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217902404 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216171627 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215479881 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218473019 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216012275 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215104228 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215461194 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216850461 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219188216 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216504146 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215996044 seconds)
  done (took 30.344103082 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218387854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21696845 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218296976 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218186228 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216188016 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219805037 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219536641 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215773832 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218910957 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218546853 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217511271 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21657523 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.219570425 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216657813 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219224314 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217218226 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220484288 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216574483 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220247241 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216420005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219569985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216510095 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216534403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220502423 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217640183 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217093142 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219350023 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217509447 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219085148 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217596621 seconds)
  done (took 37.683527896 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225092848 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227262466 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219959338 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220232114 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221838629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221520121 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222056122 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220370514 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22118618 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22093593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.221524106 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220749131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221747916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222184903 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220876426 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222496253 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222202157 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220944218 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222453945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220893379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221112306 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221053765 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221592033 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220242158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220996762 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221059409 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221936177 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.222282391 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222113629 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22098882 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221854629 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22277806 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220900029 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222624678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221041435 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221765552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225945196 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229001646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222631612 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221820218 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223341384 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221966334 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223279083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223036863 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222263443 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221450804 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223074298 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22220582 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221982155 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222235204 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223163425 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223584492 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.222372773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222612332 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222894253 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22267405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223038142 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222743101 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223895224 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223925907 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222345107 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224643096 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223620924 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223384362 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223788708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223635678 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223713159 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224122767 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224411118 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224253527 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224392556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225120014 seconds)
  done (took 89.167721683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224442251 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222149476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221518907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221899009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222202864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224569563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222277306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224688312 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225710649 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225845226 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225416525 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222516176 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223042774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225827615 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225734534 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.22336106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225025797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222617262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225588072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227572236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225446817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223632247 seconds)
  done (took 28.077279208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225820047 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228071662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223583257 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225698838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223290492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226278184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22650017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227223095 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226412265 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22276675 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224045269 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226048321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224181291 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224876596 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224341845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226499053 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226406331 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225612074 seconds)
  done (took 23.205651066 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224886003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225183546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228174999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223474131 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22496125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227577584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22521912 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227956472 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228907321 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224889145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227862527 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226690873 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22853956 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225470729 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227176131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225544889 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228119328 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225242328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228855174 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225406863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226716211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228594605 seconds)
  done (took 28.134004303 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228563289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228272424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226504371 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225936181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226298934 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228373613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229272527 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2265535 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230361987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228829204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226197511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227918414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227635438 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227217284 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226127722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227129684 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22921 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226286982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22821445 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227467873 seconds)
  done (took 25.702461458 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230658196 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23055356 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230005601 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230680846 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23024097 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229970981 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229999654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230237529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229997604 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231646486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231312973 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230188454 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230448599 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231076539 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230988609 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230680379 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231071484 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230742951 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231270681 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232378891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231595507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231381179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231752307 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23078372 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231041393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232915353 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232249116 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232503323 seconds)
  done (took 35.619808272 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232268781 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230035786 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229978827 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229913028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22993097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2296075 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229064061 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229663046 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232578356 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229194012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232268853 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232703086 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23310156 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232239696 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233255339 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232743441 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231839451 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230080627 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229490622 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229904116 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23265295 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232612213 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23316549 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230800251 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230083292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232713491 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230486245 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231306187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233151467 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229871119 seconds)
  done (took 38.090351846 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251576335 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252233739 seconds)
  done (took 3.657635306 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23164271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234004723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23296111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230659202 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230656482 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23334565 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233941958 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230524584 seconds)
  done (took 11.012483706 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234204431 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234944303 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23468696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234716622 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234497906 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235684288 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241356937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25280997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234842587 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236065909 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242156335 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242737247 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23709712 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234898444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236946913 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236495144 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235236541 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.23517655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235984116 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236246575 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23589592 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23858305 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238295109 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23397718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237480987 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246854499 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259058003 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23663525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236092417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.239818501 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236529778 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234428571 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23544289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235807805 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23722296 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.237441333 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244923216 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255750634 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242476008 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255602543 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238017081 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235108497 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239196715 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238724409 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238776928 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237291863 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.238096395 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234322152 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236689697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239600728 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242392702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237540348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235950131 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241250626 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239352042 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245876745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25618504 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241857505 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246173458 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248614551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269151463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261640058 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239759794 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238740357 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248090083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261885795 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245759478 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25531856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237500824 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.238385792 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245600463 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268896535 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263770236 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239186727 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238973423 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239727472 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239698668 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240257773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246538186 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260794031 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23854622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239947719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249629148 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260309018 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239573137 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23961051 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239619904 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239897571 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242471693 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250877582 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258919709 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240493436 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239728474 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24077896 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240998994 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241553543 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239542746 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242147187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239590054 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241442892 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240919309 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244748143 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249986427 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241524183 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241652048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248193224 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261011165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241047189 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248228912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24206545 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24082894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244638168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248230547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23946751 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246325752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250369027 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241673722 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.243491375 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24176698 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242793684 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251650937 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267975029 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242338949 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243213087 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247202268 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253780692 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242295127 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246949261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242574719 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239859331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241393926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244847031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243040489 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244501474 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243279682 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244475115 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240053319 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243491822 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242772994 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244759847 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24477935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243387054 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244825124 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245518652 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243692881 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245091069 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249389442 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.262768638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245712518 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245057402 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24187789 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244319907 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245369697 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244917456 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244675127 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244301225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245013926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244812104 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244677775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245896594 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244649291 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245714874 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248981561 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246091617 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248497471 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244579767 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242800502 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246003428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246311633 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244649783 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245902261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244609832 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248779699 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252419514 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24623672 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246479307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248132238 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244962752 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244241286 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245356377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24875369 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254652051 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248379808 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253036199 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264666107 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245939725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246546712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247555156 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246396074 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247409441 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.249730447 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254153649 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260501871 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270550314 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248459496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250870062 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248783074 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250688135 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249656197 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247463297 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247818862 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247275749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247656032 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247491863 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249346224 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247883814 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247262164 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248331704 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247653561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246897437 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247382321 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248202932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249027677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.246399713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247463743 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248134762 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24732499 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245647612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247806532 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248207956 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249970001 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247565964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254461565 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246085513 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249821502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250028515 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249339672 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248287558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250271007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251336055 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249348285 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256049345 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268385255 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250203146 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256630188 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267422931 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249729338 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252460473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249292749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24759368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253643938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257737151 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250307965 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249895314 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250096968 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25130388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250964687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258991715 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266690604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249551889 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25119938 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252656326 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248644311 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25214217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251384283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252492002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252902903 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250098333 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250619838 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251239681 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25074378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250526315 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251474236 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25494897 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258625663 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257220014 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252594779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253404141 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253412137 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255732389 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25229934 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251833529 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251028311 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263995774 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275719679 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259197971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272748887 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254062653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257552424 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271349437 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255681603 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25323234 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253517865 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253042619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252577766 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25117944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252935584 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254634319 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256133533 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255075152 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257976476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25450737 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252424198 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253353842 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252896921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253784694 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252251537 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253929081 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255601407 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255660013 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252889508 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254540942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260131307 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272780641 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254348247 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255255314 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.254462425 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253367723 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255378982 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254812816 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257214221 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261759527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.258415902 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263216596 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.256391179 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263819719 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254691799 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258253236 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261951178 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252493915 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253980964 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255752409 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255658235 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261280797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274359183 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257239658 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259638717 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256021181 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255797503 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256582622 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.256314724 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25580572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25591531 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264578549 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277140406 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259798074 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258039089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253268927 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256438017 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25633682 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255054421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260372752 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256654191 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258771276 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25717817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257337605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257819876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257487053 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257644468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255212688 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257668867 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267532537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278365495 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262325372 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.257832246 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265525408 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277827033 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265277224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276442628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258690871 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258753352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257943347 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259471352 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.2584539 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.259326077 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258360214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259699145 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262286457 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258412555 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259932555 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258881845 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259425854 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257582147 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269677007 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280532648 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26096415 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263196117 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256566864 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260911301 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262157984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258912823 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258455638 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261729898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269098832 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266960643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258747962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.259815415 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260118483 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260375334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25967395 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.259203648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.259242115 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260203005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261145935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260293438 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262962635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259944556 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261344856 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261980739 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.261561673 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269513538 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.278879685 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260862321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261164938 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26065521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261322552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26188128 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261420434 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26145031 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26103643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262426206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267513374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266635244 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263461444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26207758 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262043347 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262568106 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262092683 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261110617 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26155447 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261269245 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263111031 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.262112348 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26299378 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260845672 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263441902 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262967036 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262608148 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265544599 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268338341 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263299158 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259744507 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.2614613 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263614599 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261469459 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.262815304 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.270785549 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285053628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27283298 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271030653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266212188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262772068 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267210457 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269679501 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262479543 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263753118 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263987824 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265574204 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265557469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266398767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264215705 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270349032 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283797249 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.263893015 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272232548 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283090141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26471178 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265439339 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268512604 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265108299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262472611 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265257032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263769544 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272731342 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284828044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264813069 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26631443 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264113364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266021697 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268166764 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265629157 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266605122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262738515 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265194818 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265156426 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265402893 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262740268 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2654296 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265168295 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269068375 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272154339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262963932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267223494 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265991904 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267555033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266470635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26669608 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263676902 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263267055 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267209625 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266372488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266261759 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269064085 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266625191 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.267708967 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267901774 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267160317 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269035815 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.276915894 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274611329 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264724157 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265932277 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267630668 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27455565 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267277082 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.267377393 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26697212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269516184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268213004 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268292282 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26909126 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271184101 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282604347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286593705 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268521021 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268758985 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272881714 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267877294 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266102328 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.269315549 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.270607773 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.272189399 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274543631 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.268517084 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274303473 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28753532 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26985554 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273195126 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27242688 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275641545 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271136236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268617076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268212887 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274277286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284241037 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269315909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279640623 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29818467 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288176583 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270436588 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269860935 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268365578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.270130441 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270900763 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271135157 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270235059 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270291911 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270672713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27087411 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275254543 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272439833 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272180194 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269847812 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270713282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272120341 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268187769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.270825287 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270228952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270969568 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270662591 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270845894 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270400693 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28270492 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297092881 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270257285 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.271136796 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269067485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274029774 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273859536 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280704769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278810807 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.272044006 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271353781 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273697431 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271400377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27124904 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27228162 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272619845 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271127923 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269311676 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.284722257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298428734 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276293666 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272035597 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27163508 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272651807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274394574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273371146 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273582912 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274022247 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275219665 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276150612 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272523724 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273742481 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276207248 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280024486 seconds)
  done (took 750.242459351 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271225244 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27096806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269959963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271328849 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270631983 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2718428 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270670579 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269731589 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270475041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270242212 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271774573 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271001376 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270880595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27224813 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271853193 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270501582 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271839761 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271862642 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271801343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272087928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271497306 seconds)
  done (took 27.88583813 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275529054 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272489898 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272086238 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275319247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272560766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275122822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271751509 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274484046 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274626098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272541921 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275446909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275162779 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272039039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273578612 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272888558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275392011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275822568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273398705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275228029 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273285704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275188173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273318283 seconds)
  done (took 29.219038834 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27529819 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275834904 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275571286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272763422 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.276268431 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273899349 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276824757 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275881684 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277573566 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277217858 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.274854986 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.277760688 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282751852 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280879432 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278173743 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.276393141 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421392633 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27684137 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277165993 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.27702651 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274212477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282403643 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295069993 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275120991 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.275997656 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276790675 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278078638 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277631249 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277426001 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278401728 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281146472 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.278532212 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278060464 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279885018 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277637441 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.278375265 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282294994 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278895675 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.275877935 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.278454568 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288349046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.297917064 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279255509 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284370382 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.298755557 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278011021 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.282676262 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.28567335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.274918774 seconds)
  done (took 64.024807514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.279399434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278655802 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.276349204 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279076918 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280416706 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.279384228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278909458 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279870851 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.276386348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.276373509 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.280065612 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.277100275 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276646499 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.279605073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280441356 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277194545 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277592154 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277468669 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277257287 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276891798 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277023852 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.279437691 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.281110574 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277821686 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281264102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277013421 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277223529 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281264176 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.278474274 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278188157 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280213286 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280064959 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281736189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.278338253 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278017924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281301711 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281660082 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278453517 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281152401 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277592353 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.281502335 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282086267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28111147 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.282647002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279262521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279828604 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279221718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280525012 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279166236 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.28313651 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282660841 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280340672 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283237609 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280050114 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283116347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284070891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280440955 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280338466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281801968 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28062047 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280152525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282605162 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282016411 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283108394 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282505258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280700119 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281672603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282479086 seconds)
  done (took 88.230319535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283217164 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283576823 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282201853 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281848978 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282868917 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282348481 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282063862 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282690183 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284000931 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282718439 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283294821 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283913872 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282796072 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283492921 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283380246 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284053156 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284179835 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283101342 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283295391 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283761416 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283057485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283257058 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284091854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28326194 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283664738 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285367625 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283548558 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283273098 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284364373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283671811 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283924172 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283780287 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28370655 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28405876 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284879606 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283656667 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2845618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284636723 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.284387918 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284867224 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284162928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285436873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284461955 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284859371 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285709018 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285904178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284642592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286021043 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286177835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28689406 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285741329 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284793409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286649485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286220232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285854412 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286970763 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286415963 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286312748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28735038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28565522 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286787909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287757848 seconds)
  done (took 80.836293675 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287295281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288145615 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.283696963 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28397099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285803099 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284948441 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287761106 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28706541 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28724017 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287679564 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287257874 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284448124 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285574262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287790126 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284620496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285368824 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285184542 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285843655 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28880543 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28520513 seconds)
  done (took 26.927400498 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28474253 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289212422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285461533 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285557217 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289132315 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285638581 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289170803 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287916872 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285421924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28941107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289290753 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289088614 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286858418 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286171352 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289514028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286835779 seconds)
  done (took 21.80376773 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285837421 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290185037 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.288090027 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288385854 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28666386 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286394881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289208757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287097222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287407755 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289199778 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29029061 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288544363 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.289504809 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289311228 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286515346 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289238055 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286854845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286944113 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289705024 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290104994 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288165043 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287508222 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290434318 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290215173 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288591077 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.288074534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288189186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287651752 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.287814113 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291108016 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288123041 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.288424771 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288937182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290460009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2907034 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289932924 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292507531 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292249481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291372215 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291470685 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291904469 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289084854 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292202625 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292152273 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289939394 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29215799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289442608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290630709 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289767334 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289717409 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293041499 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291045251 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.2913073 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292885468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292929965 seconds)
  done (took 72.132876753 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292259681 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293200657 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290474715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292270884 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292522871 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290359867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292857151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291624211 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289992937 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291659115 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291910889 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293829849 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291310395 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294382866 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29156131 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294461511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290648686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29103875 seconds)
  done (took 24.46638135 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291480192 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291688772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293218905 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291857253 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291300428 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293999139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291522142 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295394823 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293772282 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29214806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290899075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29456988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294715704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.294842513 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292053221 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291517126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.294432512 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294526196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291807537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291711287 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29558694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295430044 seconds)
  done (took 29.657853037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.293503587 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.293146557 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.293420313 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31066364 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.312162409 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.316703148 seconds)
  done (took 9.029518346 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303253414 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295230792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291728919 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296344027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295721052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292376663 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292623333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293475645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295137158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294035155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293884517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295579749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296694773 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292984347 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295298346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297034558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294085666 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293514814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294408411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296318309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293771677 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296224893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293858365 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294705947 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294866188 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294129097 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297477762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293927391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29340405 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296385636 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29785417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293697753 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296971198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295101567 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297878206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297753562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294622929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298374026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297644687 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294289126 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297178366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297247107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298106134 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295497661 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297686371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295215847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295470683 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295378213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295231607 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298768744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297718209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295973531 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298991905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297923761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299331748 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299199543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296235726 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296680536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298553504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29670142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296115921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298376391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296446027 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297009672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299394432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295477733 seconds)
  done (took 86.775787916 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29729553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297087389 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296470322 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297267232 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297354243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297952948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296843831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296764641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297363258 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296843151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300179381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297010044 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297549973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297153894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297611216 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297436864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298112687 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2973551 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297733673 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300849961 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297864964 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297647049 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297296793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29768235 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297831406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299860789 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297156624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29806751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299630132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299770683 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298405888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298170109 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298995441 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299733536 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298499689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299752677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299264595 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297904736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299670731 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30220726 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299845798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301187694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300346014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299102748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299804312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299105109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299431353 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299110789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300245194 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300168558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29959654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299580702 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300659481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299316765 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300249088 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300584494 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299954825 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299751446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300187364 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30306271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299178773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299650455 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304512895 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300926425 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300101659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300908367 seconds)
  done (took 86.951305301 seconds)
done (took 1750.014809512 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.340114502 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.28839224 seconds)
  done (took 13.846272132 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464208628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416276389 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301434272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.328851174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301276175 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.321525361 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317481891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301934597 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302015007 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301905035 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301258461 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488028188 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.295346446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302805738 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301948337 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393956525 seconds)
  done (took 42.669702919 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331179188 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308750478 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423133956 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331729201 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330732013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495130394 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.365743668 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306972608 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484713657 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353521907 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.910288461 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331072888 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307827856 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.44909842 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325730239 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496253418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559365478 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.914360689 seconds)
  done (took 30.245503714 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769903741 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315360075 seconds)
  done (took 9.305559363 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.308790265 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.341653513 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.31526163 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.317246726 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.33899582 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.373450166 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.358892929 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.343797928 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.31274902 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.348785425 seconds)
  done (took 64.591362601 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328427756 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308794585 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308566615 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.3063964 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.300304834 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315348626 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306217013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303372771 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.103785302 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.437092743 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.328855296 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315265718 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.325357155 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309140825 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305284621 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344469894 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442748112 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326913462 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.304639199 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31378401 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308384205 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41862681 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350707488 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306451359 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437820001 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.123189723 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311105035 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315280062 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.425097088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326788259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307859654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308645707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311756058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.873057117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760621923 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317536614 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349711731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316909353 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307311417 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44387795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331045947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.316638143 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.309360937 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733691991 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465070042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.426119359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.570842409 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311922926 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312408779 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373412809 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312228615 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311508339 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340017011 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.06946388 seconds)
  done (took 110.362963446 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.316571589 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.790115797 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474140962 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322319692 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.172618187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.12324835 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320965659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600169799 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342672415 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304540441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585157924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823011692 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320277064 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.370098734 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855905954 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.352685525 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305684535 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.219173717 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321408848 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304235641 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720707142 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322810604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316524839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.566930688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344228602 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.777897378 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.928611887 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.821351479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324645406 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.305556543 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784951509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328776017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.345014597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309046564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584107818 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675111394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665091741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327077634 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32995426 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309575282 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332112185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776896274 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676849139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331691476 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310109933 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.781140273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323230365 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316425728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314132536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515684382 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.228685725 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307052636 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.916085656 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308061198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.562620048 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383326731 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38827246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808393482 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337125573 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.490462145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354501833 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308506746 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308225914 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312145854 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309483608 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.66335375 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681535545 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31394386 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.666668575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795821265 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325086174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848977468 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.273154093 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314755579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352251378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307554842 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.020893015 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823896058 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339335849 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309082781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651790551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329437644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.59016579 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324753552 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328642624 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732226261 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.332618002 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.35747064 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.309619092 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.308654494 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.078096732 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311314939 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598053205 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.353716198 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310755237 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310633056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323329805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322961861 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309874828 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310260345 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848356582 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335846169 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.636947056 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329538173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309629179 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310653515 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311663892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309982846 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535229754 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.8173201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314100164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309588123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.309910533 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311313327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.546784686 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.316694185 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628066047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328214687 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31065461 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311784706 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.157403215 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350411048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310802405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.332639224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.164785436 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536645438 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330444647 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.329026295 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310110066 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.336329694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.851872934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311721593 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.38364824 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31312204 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030245233 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.344356295 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.351945557 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.892751746 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31485943 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313827285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316837231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313773622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634565144 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.59267037 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564933646 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31242652 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.328224316 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.021664519 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.330070951 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447127535 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332363436 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309971356 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511975832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.645981799 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313504336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.86150784 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.314298333 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534615516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314396668 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647044123 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816286073 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332130777 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319260164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030376778 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03206388 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.987827462 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316588079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595202014 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.289257998 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.766759419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314392498 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.313749394 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.911067099 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314749486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320208534 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.314753584 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.315058396 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37580791 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490097628 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.665317585 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314169132 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788509108 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367643347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321152418 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323054869 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316500258 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.667268971 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318238974 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.319060217 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.366852145 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.315311835 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315172346 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794894091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.309887695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.315861553 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469787261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963312107 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.338869833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317069605 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.965083863 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.524108018 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877258129 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.365363686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6364278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.341332971 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356181262 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.122821267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407365942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798423881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.335431241 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.316944211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933097865 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.333880044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.510027088 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.317056194 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318558497 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865123041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.334176904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.318614422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.869335011 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318444792 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588352955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.317818484 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.351225426 seconds)
  done (took 1109.91339087 seconds)
done (took 1382.149589272 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.318671347 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325325606 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.303862442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326483093 seconds)
  done (took 26.513026374 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.330305078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324844643 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327096693 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325233024 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327813593 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325149062 seconds)
  done (took 9.200233195 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.415112743 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319961514 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325461291 seconds)
  done (took 19.30029959 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.552720177 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.645387274 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.712195783 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.62761203 seconds)
  done (took 10.778817974 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.327727841 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327466825 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327388641 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328952936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.327858241 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.331378392 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.328277642 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329266805 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330334689 seconds)
  done (took 13.198366694 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.41746724 seconds)
done (took 85.643872427 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.652614097 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403047876 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.458149632 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.337783475 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.726557415 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.679447222 seconds)
    (7/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.700322756 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314799752 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.1780122 seconds)
    (10/309) benchmarking ("sort", Int8, false)...
    done (took 4.399719569 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.962553233 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.973402183 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.961619237 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.586245053 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.358644484 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.361998144 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.444963061 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.45519619 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366528262 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.413742366 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.783733307 seconds)
    (22/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.816445211 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.182841439 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.391390334 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.352197703 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.407900412 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.018171997 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.439832985 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.64010458 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.171178782 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.654550283 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575089374 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.442522359 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.403942334 seconds)
    (35/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405760893 seconds)
    (36/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428434274 seconds)
    (37/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.407641657 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.896372846 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.748513779 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.32360956 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.766255652 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.309654425 seconds)
    (43/309) benchmarking ("sort", Float64, false)...
    done (took 5.664515848 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.436956002 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.318438156 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.256528979 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.75434357 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.211585899 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.434178648 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.932036036 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588041327 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.368087898 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.873270636 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.822255614 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.331722625 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.734956215 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390485146 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.952561954 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.310093637 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.322741108 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.473552285 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 6.326192243 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405916268 seconds)
    (64/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.325246844 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.426401273 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.973238353 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.330535195 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.877012225 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.44212927 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.045983891 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.360537515 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.787200733 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451393312 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.112789548 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.764965087 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.603842687 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.369430063 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.653760232 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.973941319 seconds)
    (80/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.711816139 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362235692 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.333870482 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.353249077 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.306213341 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.682836234 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.688157476 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115595556 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.95222869 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312627538 seconds)
    (90/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.410758955 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.30619894 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.783346854 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.724554253 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.539609811 seconds)
    (95/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.947923438 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.332867419 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.070997494 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353628177 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.051025352 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.636831794 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.860610116 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.557872871 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.844260973 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.355989772 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.520443526 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.391175442 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.433208753 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.119884614 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.270289421 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.354914967 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.31948586 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.996064075 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.751869703 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.704441581 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.327337766 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.762939594 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.691088827 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307733345 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.81356917 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.240433654 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.474554562 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.327814182 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.637257752 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.353624685 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.360674907 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.861024511 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.544674729 seconds)
    (128/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338416369 seconds)
    (129/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.546202714 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.290962268 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.324415911 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.329807836 seconds)
    (133/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447894836 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.281248763 seconds)
    (135/309) benchmarking ("sort", Float32, false)...
    done (took 5.349461824 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.463128243 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.434213735 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433713646 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378281641 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.399658476 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.824442048 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.330666497 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326508851 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390109934 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.124193706 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.712492595 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 1.847582651 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755171295 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369142599 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.608410341 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.415554281 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.120048115 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.023109714 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353706128 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.586885606 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.364645185 seconds)
    (157/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.816350431 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.011027473 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350179748 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.357351079 seconds)
    (161/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.516918777 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.398899705 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100834733 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.460293453 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340979918 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348228809 seconds)
    (167/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.54572796 seconds)
    (168/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.072346985 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331739215 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348837184 seconds)
    (171/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.428084172 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.337874335 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147905617 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.314204683 seconds)
    (175/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.35866952 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.205813532 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.056413968 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.693527688 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.358694733 seconds)
    (180/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.426574209 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359282198 seconds)
    (182/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.355191016 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.120676333 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.524579673 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.711275034 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.291909375 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.43186617 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.506217909 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.239321038 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358215546 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.215915934 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.614424003 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.353070886 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.985405968 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.755236113 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.389991756 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.005019595 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.406463647 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.41890276 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.19477379 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.671598816 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.359356784 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.334094769 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361480523 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.334150019 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.31418649 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382910599 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.696742058 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.811478991 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551504209 seconds)
    (211/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457546767 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34302793 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.340875819 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.945128237 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.33526111 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.69254669 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.809578227 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.32948775 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.39395775 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.706973642 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399499417 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.829440172 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.361347945 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.976643519 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536914598 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.496115278 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.379916655 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.250495769 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.752235645 seconds)
    (230/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.928275075 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129948559 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.241078365 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.87929935 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.564299876 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.932517718 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375361497 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.591484057 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36354184 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.728445331 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.745573091 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.895728227 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.352064438 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44321602 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.668860581 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.450355036 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376449658 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186155546 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.767144496 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.759537592 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.355076226 seconds)
    (251/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.55255234 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.459108311 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.335291114 seconds)
    (254/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.27119835 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.326309362 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.942903629 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.34919961 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.94079776 seconds)
    (259/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355954923 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.350886868 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354674685 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339290352 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.556840951 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.439694111 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.363250813 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.14174108 seconds)
    (267/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.872974783 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.462163829 seconds)
    (269/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.213601826 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.981677263 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.34791284 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.423613012 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.81699332 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365090705 seconds)
    (275/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.33900283 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.738037569 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.33878502 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460300589 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363837846 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402662429 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.339244782 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.993824712 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.351542608 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.342789115 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.217746077 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042849625 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.361189247 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.732811776 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.359796237 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422512098 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.421713206 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192477702 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.902874504 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.448924285 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366733456 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.120764768 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255916901 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.339873759 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.32196412 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38186366 seconds)
    (301/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.528206677 seconds)
    (302/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.528407965 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.307749093 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350581915 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.949639413 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.309651746 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.713915282 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363589844 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.702391547 seconds)
  done (took 929.638365556 seconds)
done (took 930.878146296 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374150461 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370436377 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350934181 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373329594 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462883255 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.381337503 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36264819 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353461828 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399333057 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400629138 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351549416 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.38066622 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353826572 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352090955 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.352411837 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367148639 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.440041989 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.353683247 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.370174149 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362201449 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.369661 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351679595 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.401925854 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.381923753 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356742206 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35681552 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356714755 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372115786 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465150788 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356166716 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.357105923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366654819 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440542608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352310464 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349610506 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.373329309 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364723971 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.36350636 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.358428083 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387094587 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.867666115 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.37180843 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355350794 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35453049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35504465 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358992251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.356500342 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361600862 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369796466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370101666 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.853128904 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.388062444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358853867 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.354170326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365592638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355907203 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.359017952 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374348511 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376122122 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373853591 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.425764452 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360698266 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.357448734 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.373020544 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363483219 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.890693647 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.369707448 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.361075287 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.86390508 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.378518044 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.887377124 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38329262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358398142 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370450874 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.388930799 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.438744807 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351618186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356928709 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.365572854 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355093171 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365640638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370449539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361296435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35777152 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37389757 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.385321504 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367389452 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358451113 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365925018 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377681787 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364671685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36884511 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359533903 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352629117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367379919 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.361872935 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362872994 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361374799 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363153763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.368123698 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.863154193 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39564456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.354886048 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355417841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.356970338 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373572998 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.864925966 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377645502 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380769187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40645341 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360275168 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.42769201 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364594503 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37636137 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.368598028 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.363310898 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354662448 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.430826248 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.856862961 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.392151357 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360158979 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358879918 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378681126 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.361905826 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357367862 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.444588822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.361054386 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374483052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.480229107 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.3704088 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392358511 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.358704884 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.363127521 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.388812018 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377972958 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.392473454 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363666954 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378320594 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.376311852 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356576193 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373030662 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371383064 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362385964 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368268441 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.355872177 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390553231 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375036438 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376939269 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381750031 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482608268 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358396849 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.43297342 seconds)
done (took 230.104954796 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420044171 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.353938113 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441930362 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357061709 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459715706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460872197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353287209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355190419 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354397601 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.776763961 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355927692 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.356007499 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352524662 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355925369 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441482535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.358491464 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357308035 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.746297735 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.359345429 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.429099121 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.359706441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.364023784 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.358789128 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744745562 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.359680307 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358965164 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.430242598 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357647307 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70582925 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.355639635 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357678814 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704868895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.448784813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376900102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369266781 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367112925 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462390796 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380134048 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441968716 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.441207559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445705582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397565949 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.355900802 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354974265 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.361030513 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35956618 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.357875673 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.38671676 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.351656511 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358220895 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.747872502 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369768126 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35990952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358501267 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.359449801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389520337 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358337583 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361318587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449826513 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.360669545 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.423896763 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.743780061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73831617 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359890893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.362273078 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.359298309 seconds)
  done (took 150.294462885 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.427307044 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433083954 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475612743 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381249313 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.410863269 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482998 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380641501 seconds)
  done (took 11.264323349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368071025 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362622695 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411325996 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411429386 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362012947 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.508227027 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362384108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.37370076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358689564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414428678 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364090597 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363349873 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370527342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358390375 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411878541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374164555 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478814795 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364216557 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363131177 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514938797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36125167 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370018524 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.416935393 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.374495088 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365083824 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36979052 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.934318471 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36281552 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361625623 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364013413 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361104285 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.402589492 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364309798 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362543972 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361545498 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479542997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364190746 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362429864 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365638003 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.363650195 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364432849 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364661016 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364687863 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362374383 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365382032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388017358 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364918481 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365908785 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366447278 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3666746 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414761741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366312556 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363795123 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364140891 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422748024 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373174926 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366588117 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.364815722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366720106 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365066922 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518033819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414231952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366507608 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414098734 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366465346 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367245048 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366225929 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365490193 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419911677 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.366453102 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413683722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.364137605 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52081581 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389435643 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367426491 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368577859 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369254868 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366055538 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.364998385 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.371983851 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365036732 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367632552 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37295178 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364588385 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364981566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470841919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476479335 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365402561 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.380470125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373883223 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.36491221 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420052427 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367840809 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365515783 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419827855 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482370086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42128606 seconds)
  done (took 156.288463444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372253806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376209839 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.369066326 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.383627501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368059509 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368092831 seconds)
  done (took 9.515602817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.371773264 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370558669 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368952652 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370606277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369960946 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369110496 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369333625 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371379785 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.372798887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369852304 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370155689 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370738514 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371156886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370559195 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.370418968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370126702 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372060068 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366924483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371328453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370554978 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466337712 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370766131 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370298119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372400414 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375124686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369744063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377932888 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370574222 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.369965298 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.37618296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390711186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370101584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372519641 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377357735 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375573232 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371675686 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375406779 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373211777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368901252 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372989338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373612376 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37153163 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.371795958 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373740934 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373624508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377146547 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.378865888 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378217259 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.372409625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37326807 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.373780931 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371942303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.373023374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374376144 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373537445 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395465344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37853696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373313253 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374311349 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374972629 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376407775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373188406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375352796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.376363373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380425267 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375712823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375301736 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377357283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373598341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373922696 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376474383 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371076097 seconds)
  done (took 101.26972781 seconds)
done (took 429.898049924 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.854467292 seconds)
  done (took 8.138756925 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.506692215 seconds)
  done (took 7.792482963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.027682457 seconds)
  done (took 23.315425155 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.464299767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.442844135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.368860644 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.396025832 seconds)
  done (took 26.956419508 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.481427252 seconds)
  done (took 7.766352361 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366802703 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.366938602 seconds)
  done (took 14.020198268 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.464036396 seconds)
  done (took 7.74914735 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.041739151 seconds)
  done (took 8.332194038 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.368078781 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390818867 seconds)
  done (took 14.314620246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.348020165 seconds)
  done (took 7.633960249 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.44886401 seconds)
  done (took 8.735141314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.376223803 seconds)
  done (took 7.662203845 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.417577468 seconds)
  done (took 7.702213003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.826815085 seconds)
  done (took 10.112102404 seconds)
done (took 161.513451525 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.369359379 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.83250039 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.369237878 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368396369 seconds)
  done (took 27.224966355 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408463543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.407951239 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410509196 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418447051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411009114 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40782761 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400870783 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.399858742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41905678 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.412076698 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409703133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41070195 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410097461 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400343324 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.410154914 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409636018 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420150319 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409432446 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401575228 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412828757 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37681001 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.420730341 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.413824466 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37650372 seconds)
  done (took 35.063671269 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897492885 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447098096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529826238 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426869542 seconds)
  done (took 7.587389964 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428131429 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430396996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441952401 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480376982 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506676762 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438642613 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.402618645 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398800014 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384019051 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430278296 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.505147144 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446740304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513687226 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.37746285 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562152301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377449283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37740424 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428868182 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.481332947 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498499218 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377794335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43021824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.432655377 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446475306 seconds)
  done (took 35.884550012 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389980843 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38326805 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.375754949 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.374668165 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.398490776 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.376101457 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378114571 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378287531 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.377064512 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381858471 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.376656281 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389274097 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376203811 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377781648 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.383127425 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377926341 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383208925 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376719469 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.378457892 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379770291 seconds)
  done (took 28.900988643 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.371041326 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.271865555 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722919981 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628883272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.371629697 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.378076022 seconds)
  done (took 29.032712396 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453401577 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612388106 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377648832 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.762874538 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.857785865 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.399066577 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.379709994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634250832 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.975968081 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976254389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442137984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451558307 seconds)
  done (took 20.614547692 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.3839308 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.378807361 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.396754783 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395511833 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.437604039 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401576574 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386187417 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.372869902 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.445589824 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459999707 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401689838 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440829365 seconds)
  done (took 38.192325844 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461810562 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419614081 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.439403699 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.151031182 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0939634 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586900999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374033549 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.809790038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380573318 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649661236 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383931537 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466690247 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631594326 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382096447 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381980856 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.405904745 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62057318 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915054226 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383610166 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524075287 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401629744 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378443872 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.707524136 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406801116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5880277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354256838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637084993 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.151959666 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683147153 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394426701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388631237 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377319657 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649912263 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065812204 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493877361 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387463904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.102234407 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918041877 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.375960164 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.638812777 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392626524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380322621 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38934297 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37792759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311851626 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378566631 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825608162 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.383983794 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.090099875 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378678407 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388931476 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472855462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.381333228 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.947571276 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418394035 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.384665795 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.375288335 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384538835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951398108 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004929738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390770789 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.321191321 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.786921578 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.628135095 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064885992 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.507642658 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383145877 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383227787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313816733 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.625686091 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395821952 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526795642 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405711489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029959189 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144942368 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406939875 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309637664 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998820074 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3876698 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322278779 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60676099 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160885018 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315352883 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.327937715 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.31524067 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142225541 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388990885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.818261983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390579209 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813638795 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391801505 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396734411 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40374404 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603980306 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.259025314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381494225 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386362188 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508969958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403045172 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817541312 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316288013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385040226 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636576385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593352387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383049058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.419913994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610464109 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39339945 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403063781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395809833 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.39804257 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999604632 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418446949 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004354422 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399654605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159800365 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180019666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384014789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.489464246 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382706571 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645343551 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.197755671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285563458 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450778878 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385543137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382826584 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.648655715 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.232908127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.541782642 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.378937474 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382358774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402317481 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.384324897 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332215555 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.390925021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395428187 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.161977375 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60606144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382443151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666539586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317971408 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530796949 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393495317 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606193298 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.637350027 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.402691541 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643517431 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384973307 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391266118 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401966343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40274336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480945215 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405809213 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.387335765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646789614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388892912 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388575733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.667226017 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163402997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386909509 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389684134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238120075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00884128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388587672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393837187 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273344738 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399718082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452570056 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391945617 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.394677141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.348364586 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.249136372 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390526 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.382412899 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615434549 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396345591 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.692369253 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46648915 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.592008492 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009054849 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42441499 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.320632307 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.097662306 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.084422672 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386480049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575801713 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386390422 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395339113 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398208495 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.935486141 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005939456 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414335575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.579870847 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393617159 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398682271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392582051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387621726 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.345409548 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063325532 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392471585 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406025819 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531564393 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401512917 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321658054 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905396052 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393999587 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387053637 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.163955865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422630081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.57264202 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871875158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64859128 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.10827127 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402054159 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.678406696 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.422396431 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.394791895 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390059058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407042381 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.416705444 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417979298 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.400875624 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.638334831 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.827572821 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960471444 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163090871 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001340399 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392593581 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.402351175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277514133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831888231 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324560775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045673978 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594252519 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860585518 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335804331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596833389 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.678552877 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245922036 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407084839 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618245541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359921977 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.393190731 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402995965 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601759851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425847744 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390381489 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343122827 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.908656228 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634616638 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406865182 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471491279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835375275 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399843382 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.168615418 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390405657 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.809016521 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591751435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93639856 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779545722 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392014431 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402929478 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874699514 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40248033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918682082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049960007 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412034859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.607753901 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329615665 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403907827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403870968 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388361913 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.866222174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.417890663 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653764973 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403746249 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32778758 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392448327 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959859151 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266698673 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398637658 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394208393 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205960103 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410170163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707901698 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.410646928 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.345680975 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421026843 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328349579 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328945072 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.08690008 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395999651 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368960519 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949519702 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.791101372 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416830524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427256959 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247322863 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649895841 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40835951 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012559433 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639568739 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.224771784 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416858118 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.495515569 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404332906 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.37654779 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.291003331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631546473 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251154455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621355034 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.477613415 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.296672937 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394275635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607654608 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302291564 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397905865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652673829 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.12660938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.416956472 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133921772 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43980561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403450498 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406795788 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.804650748 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403137799 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466414873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407552302 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.406850136 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406167689 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574982166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405191654 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398453469 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410163814 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491056972 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.060952812 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.348626066 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194633615 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020324773 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174620834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036040935 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428050687 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396870765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397617559 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331158972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546398085 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922977368 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671347998 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527897549 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.925202125 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420137531 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413188655 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399319814 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618003418 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673999193 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268645288 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401435311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063410357 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.279874925 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409634637 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609916267 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95707657 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034123544 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522157096 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399978609 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84467013 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673227291 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490681689 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400288447 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992640159 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.402842035 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.829817827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.42526537 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4018835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546796377 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410326205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087291609 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430373846 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.555859672 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172502503 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.616897651 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655505778 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95118854 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418626555 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023652542 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164937823 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662243842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470872542 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412159118 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510522804 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547282415 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.415120831 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289909875 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401091684 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24359247 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110476597 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.411448168 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02282684 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683947568 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.39882581 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400294825 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43194103 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411362235 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624789441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171194734 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626634963 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412294181 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404232325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.974291402 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024834722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435801916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336984171 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405622097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656904534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656901715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426828525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.855236099 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.113860107 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023616593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.383425953 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424147924 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404964657 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153830885 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022895614 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.381563653 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973867948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068588944 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405512404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684436997 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408471061 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417335218 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686390615 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.40744604 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410645609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422469452 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.026364482 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261462354 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.417921178 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642285045 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340553301 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629762394 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071813335 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340506381 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405068057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.590499007 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406265839 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534421838 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41683618 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.407053354 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40564169 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165287259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677560473 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410362434 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.400577896 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.409397267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417563462 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419361584 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652870207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412467864 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080854448 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755305078 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.661791067 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414105186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.394011549 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409530931 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405765357 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123088259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376234651 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.97299944 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042922062 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.428792554 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424031345 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4110184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.622753142 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618102199 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417898429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419378344 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422748816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428560962 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.305737683 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173554819 seconds)
  done (took 1621.582418882 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448380019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433867121 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.436034853 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.463885234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423647141 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440068362 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.513228497 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46035612 seconds)
  done (took 52.940339571 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.423072726 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.565057831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439644875 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.414030771 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417314361 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.418837963 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.912463106 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.443820929 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.41610998 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.417322889 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.408448682 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.41829619 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.111824239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417325334 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.423552011 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.396100645 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416037208 seconds)
  done (took 66.787055822 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.406197312 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.751601805 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.526560666 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.411908888 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.787491877 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.433870833 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.668029541 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.449459329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.426348043 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.685117869 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.085403234 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.438290189 seconds)
  done (took 81.393819555 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417042537 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416982668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.416592233 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417793773 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416294191 seconds)
  done (took 8.407586064 seconds)
done (took 2054.895555291 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.654737822 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.171426296 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081233352 seconds)
  done (took 5.576904692 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.556620939 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.606642519 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.740655098 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.73845876 seconds)
  done (took 7.965950138 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.687934434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.785212912 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599040047 seconds)
  done (took 6.394339742 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.936877582 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.444196093 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.541395264 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.409169632 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.41572848 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.415277631 seconds)
  done (took 20.563773881 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414127121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.415717576 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414182759 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.416556764 seconds)
  done (took 6.986441565 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.389309139 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.129303486 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.393608809 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416403347 seconds)
  done (took 18.652411557 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.160082271 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.172487194 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158206632 seconds)
  done (took 7.816281459 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.413815303 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.253363431 seconds)
  done (took 9.992056807 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.707929103 seconds)
  done (took 3.03267589 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.546644894 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.740706361 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.514941742 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490350969 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.546624229 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.648191949 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.231503553 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.773123106 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.476774623 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.829349386 seconds)
  done (took 30.123883922 seconds)
done (took 131.001752478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.491058554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.812335588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.616238643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.464671462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.645712185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.614555637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.688380057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.430883122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.966269805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.95721631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.506359525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.647358724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.861408802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813806016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860176127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428151092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.645564224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.529026927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.147236965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.385479015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.690258258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.097456674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.336721679 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.116760267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.64700493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.56373444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.679433965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428825192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.329002243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.694147906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.566889883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.413482 seconds)
  done (took 197.402098897 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41493229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.413044759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438836891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414206241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.427445566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412885723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413365646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413541541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.432401461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413005977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420706172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414265302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414885514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434242158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.434702039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432543302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413997733 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432335345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.414812588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413560822 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435443479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.424195092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415055424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431674261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434853151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434356881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432909119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414302656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416299038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.426459152 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.416788423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433353109 seconds)
  done (took 206.864245187 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414643979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432609119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41446585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415926147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425056137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416966859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424696071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.418996283 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416049464 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415566125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428928121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417107016 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.418400457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417394003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416280096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415587905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416623186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446840421 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416063906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440316703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417941002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.437347891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.416354057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.450110598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.430113818 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415645378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.435022114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417619281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427286764 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42270354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418164855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435781517 seconds)
  done (took 206.882783255 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613640782 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425420818 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.425199686 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364623388 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.425000996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425942004 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.423453883 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624153167 seconds)
  done (took 15.058247616 seconds)
done (took 627.53117555 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.821249351 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.517948468 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.631340977 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446305986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.249995792 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.466492857 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446627282 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.626778116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.362608779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.635035746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.725027553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.460954133 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.876902894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444241928 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.716371836 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551057344 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.369058396 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.515575109 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.798339389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.032111923 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.719756803 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.014152692 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.658756332 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.361426671 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.883720211 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992943764 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.257130718 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365380196 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463157446 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.786369313 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.162264572 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.49406242 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.518025013 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.512934409 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.57465124 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.547159102 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.469761125 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517277506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.653786613 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738619634 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.025586159 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.177174141 seconds)
  done (took 96.922195768 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410543621 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.409639731 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.408720196 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.410459433 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411831135 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.409787237 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.408595091 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408892713 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.410199035 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.411498554 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410221967 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.411222947 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.410161842 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.411986127 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.409895268 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409689135 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.410287568 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.41164599 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.410819022 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.409312398 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.410989139 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.409843701 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.412102069 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409879679 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411691945 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.411295601 seconds)
  done (took 38.007343222 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429367298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.686105726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.861537645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435998404 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42925661 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.434563642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514797937 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431348875 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433341533 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435015096 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.608665059 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433995454 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468751529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.895409853 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438636413 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431524424 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431915797 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431657878 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.695250152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440263416 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.540465152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.433795112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.514660844 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442673789 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458037832 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43255213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437960346 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.963862059 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452923185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.606093948 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.300396076 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.519397191 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.907789539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.899621239 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.310687361 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442398217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.432958002 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.610601648 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.434189419 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.432430898 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516667319 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433202133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.872622832 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066520734 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452948318 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433397858 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.985740232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630134523 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698622938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441106444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897233931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.4383857 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.435876191 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434659745 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.699382154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439829911 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434781628 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.977753046 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.460208683 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.517351914 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.434870669 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433591088 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.704801006 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.433859613 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690412113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435717445 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441326616 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.456575532 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874419369 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43679809 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.091105654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454385965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.434950882 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.606721821 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694951234 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022490312 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.460083382 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710031875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925776651 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.53566148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440396558 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.953511359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.540016249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.439190118 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438875637 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437314857 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436176607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486134734 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516847863 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.022093274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098347751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.000002335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.542112827 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449103286 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437415095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.977002907 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.457463191 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.437638033 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.870289065 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.087371696 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.456054576 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445221524 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.092915885 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459161632 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520742321 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441660986 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.882145859 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43730308 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48817571 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.436585668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444983064 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.460758291 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520455159 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.4402214 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436854504 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061132946 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.637793707 seconds)
  done (took 188.556302677 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.432717297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.430587608 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.443735175 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.431547984 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.430491855 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438624013 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.430082908 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.430333374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437264582 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.431030708 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.4319854 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.431524397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.432875506 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.434965299 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443247888 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438413824 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043861391 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431653928 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43185874 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.454750349 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245360494 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.441146452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.432956667 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.451328871 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.432880163 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.434582765 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.441853541 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.435038533 seconds)
  done (took 154.9711212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440614405 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.047862098 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459896439 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.583691048 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470250095 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.4376897 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.580423774 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501131245 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.459934323 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.4375206 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.438336769 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.764483864 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442320123 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.994274219 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.651921345 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.606883581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.994154259 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46184171 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.438410097 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.439867974 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.58408854 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.446354 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.766366535 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066240284 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469510639 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.049276316 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.425980825 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441095564 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441066721 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051267996 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.457622809 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769525543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.523257584 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50503294 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07151835 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016042744 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.015484556 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.601822363 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.440814538 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439413444 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440225077 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425116348 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.051816662 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461363044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44206914 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.043317862 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462438435 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.44292342 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450037825 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43939555 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.505376903 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525620182 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.790567135 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.079311739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.551679606 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.463524753 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.585843298 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.83434061 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.443747011 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998626637 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42649347 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089538483 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468075794 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428134842 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.443611105 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448875262 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60541196 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584508403 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.99942975 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.463520258 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.998173416 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.624419197 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.441106621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442034681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445713663 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.083721518 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027116014 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.623222379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.58818243 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.655974094 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43353146 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444897559 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428036449 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.527105911 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444191719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089893197 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02791657 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463213215 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445389608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.445577727 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.446044145 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.639225961 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108469702 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554480186 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.990313939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.808096539 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.794466307 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450184348 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508939849 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462112674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791122186 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.455217643 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507508946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900919152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.791030328 seconds)
  done (took 172.865458969 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700885656 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.704356861 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542621012 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.585622602 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.06356421 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.0275352 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.758587407 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.594778658 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561997305 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.7150595 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.662199518 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.534481804 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.628468529 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522530156 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.202035402 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538643396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559453622 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.603513446 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.565004714 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.495515436 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.11700669 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.74463932 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.625701059 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.42711591 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.544829234 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.269014907 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.036706335 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.030271341 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.622876515 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.803053431 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.019077858 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608332128 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.489141946 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.16577021 seconds)
  done (took 69.422664216 seconds)
done (took 722.07384483 seconds)
SAVING RESULT...
DONE!
