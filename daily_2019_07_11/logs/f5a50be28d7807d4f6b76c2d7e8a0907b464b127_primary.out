cset: moving following pidspec: 11036
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.276639003 seconds)
loading group "string"... done (took 0.535423417 seconds)
loading group "linalg"... done (took 6.763247884 seconds)
loading group "parallel"... done (took 0.155257467 seconds)
loading group "find"... done (took 1.178809268 seconds)
loading group "tuple"... done (took 1.683002184 seconds)
loading group "dates"... done (took 1.162845191 seconds)
loading group "micro"... done (took 0.217818009 seconds)
loading group "io"... done (took 0.977856332 seconds)
loading group "scalar"... done (took 38.095438642 seconds)
loading group "sparse"... done (took 12.617308906 seconds)
loading group "broadcast"... done (took 0.953029324 seconds)
loading group "union"... done (took 12.3662074 seconds)
loading group "simd"... done (took 4.258341611 seconds)
loading group "random"... done (took 8.572445145 seconds)
loading group "problem"... done (took 2.009556992 seconds)
loading group "array"... done (took 20.781421543 seconds)
loading group "misc"... done (took 1.726591606 seconds)
loading group "sort"... done (took 3.302847211 seconds)
loading group "collection"... done (took 17.199957381 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511588992 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123098864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132923639 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134769335 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.174343136 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1468657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126484262 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.1016644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.10884789 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163336652 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134591248 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.469588584 seconds)
done (took 5.243595415 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.250661673 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084155628 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096719534 seconds)
  done (took 1.034844863 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065611944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122235511 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065424981 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065376075 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065287808 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065003198 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085177862 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066834067 seconds)
  done (took 1.38654962 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073716228 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06796352 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085136165 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068596929 seconds)
  done (took 1.147098402 seconds)
done (took 4.745159663 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.847103047 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251641972 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184241572 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452389661 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150721683 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182964641 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725162259 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360039111 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207836728 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082208794 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121027781 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358996335 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123809195 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.71739056 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078165457 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10672118 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170353115 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.495196227 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086027538 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084864935 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105855079 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132351869 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104412217 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092936342 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157067093 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083583578 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146878648 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082661398 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083846151 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226330103 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188459646 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.743903781 seconds)
  done (took 10.824440721 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097156455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113759927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069032843 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139945234 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098627333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069072447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070704578 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065932137 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106178478 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.146816687 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088961165 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119010773 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065101731 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086823876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084706422 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222612441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082038091 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102450244 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072187573 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093451724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10820045 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078433246 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076925806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096162852 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128816381 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195719517 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100380185 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116003841 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070028539 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099575119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130447969 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127828802 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066746659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086057113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125694944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114801729 seconds)
  done (took 4.576768802 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.066638331 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156526594 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091599496 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.182247249 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067771177 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127090929 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083766462 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100709219 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.221175788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.084696964 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.476061227 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130652551 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102137005 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069077174 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084258732 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068109663 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542998181 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147625451 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112283519 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104111026 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090861552 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070784262 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.711241904 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068790342 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066770884 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085708502 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059751982 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13197727 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069223905 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161678882 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109369258 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069317372 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121444953 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189142056 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09325692 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153677054 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085814484 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067078771 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168021109 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091931967 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068374954 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083941653 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122136417 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121111181 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072509005 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08386234 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177831954 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068383077 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101510411 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.87071754 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171719209 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098445143 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066055719 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28978058 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085614433 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087712785 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06540937 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274720834 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153752461 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06913456 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085610161 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068621808 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068276439 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.720876668 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085507955 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.179794446 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071498257 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077753507 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08732528 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068529052 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109298803 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065742319 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090068945 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074098788 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08544502 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085312908 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068544442 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083950614 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068435757 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069580854 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102750968 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208804713 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067418821 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085569595 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066550023 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085933032 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115569825 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088715709 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068317966 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117036814 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072623849 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068009576 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082270083 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10231894 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085462528 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085255642 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083563156 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070369654 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132376407 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075001627 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170097703 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068976224 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114125241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073020416 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116333336 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078056751 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067610426 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.245440006 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064993599 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064365524 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066157878 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086210889 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069481578 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069857461 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098472531 seconds)
  done (took 22.412201426 seconds)
done (took 39.731577158 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294323287 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095526324 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076309873 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095461609 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094607904 seconds)
  done (took 1.579399785 seconds)
done (took 2.477538602 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120244724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118398685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064636576 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115423333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065041309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120429324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098764488 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10001773 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118001796 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065595458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096169841 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083089993 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065176511 seconds)
  done (took 2.155705379 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084652719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083438241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087291775 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082751007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063280305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100002958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081767914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107697596 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082373273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071744627 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082255421 seconds)
  done (took 1.815317884 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084077269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083689062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08864559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082689334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063769544 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099776877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081454446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104953818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082325464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091435845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065789288 seconds)
  done (took 1.822089349 seconds)
done (took 6.675935054 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080247555 seconds)
  done (took 0.970307359 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.69988802 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.145010726 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081158599 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136469029 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.203087783 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140697671 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.329887976 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088947526 seconds)
  done (took 9.912832888 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089676335 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101243295 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069857801 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089266471 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073830035 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069871237 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091382444 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073026601 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086197096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074190234 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070952312 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087824445 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069675496 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086261827 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072401358 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085766401 seconds)
  done (took 2.255263707 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092847898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110368488 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073719916 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09513235 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072639614 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092431249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074965704 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093236438 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07180084 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090409701 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076069168 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092494891 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072844822 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083758968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076081841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093562598 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072454416 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091936956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076431548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092510459 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076730458 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064705323 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091298708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07510107 seconds)
  done (took 2.994413568 seconds)
done (took 17.030794802 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114359147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091501887 seconds)
  done (took 1.096325004 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084349123 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100952971 seconds)
  done (took 1.083837666 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085661164 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084180728 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092999883 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097990597 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067577462 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084380794 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106248114 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067864111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066309222 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085290758 seconds)
  done (took 1.737058208 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071495187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096076987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074512164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10059261 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076008273 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083410058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07611234 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085932618 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079853463 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06332757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070390393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101636275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073296086 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103450512 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073873079 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087065663 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07270821 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067395049 seconds)
  done (took 2.357842599 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070011459 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067645276 seconds)
  done (took 1.045686585 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070442156 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064531337 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085656181 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067364172 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081963602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06442036 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081297778 seconds)
  done (took 1.420018262 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417156645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112023867 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334453427 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071996843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102541007 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293694376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067034416 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071542893 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0912478 seconds)
  done (took 2.504076048 seconds)
done (took 12.143731352 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082817575 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085368916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113044896 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.402921017 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09393662 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.085482775 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.134295358 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.23698438 seconds)
done (took 2.139221569 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128604109 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.62847641 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391348878 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216000573 seconds)
  done (took 2.14019125 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342577277 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110528345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06022703 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085657303 seconds)
  done (took 1.511676857 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069536216 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069777852 seconds)
  done (took 1.048294327 seconds)
done (took 5.739606873 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086964244 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066691666 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084795798 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067268807 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085510156 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.066694062 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067212322 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.083193987 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065662326 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066565848 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084131232 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06980247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066555214 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085145022 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065054202 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064395742 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084910977 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065277337 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063285927 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082870008 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06506743 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066217485 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082509371 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065266406 seconds)
  done (took 2.699752579 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086429924 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084427774 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074152712 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072118618 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093633769 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072508414 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091616916 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067465798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090449041 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069316351 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089206864 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072765998 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068630987 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090133152 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069695992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090784455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07299847 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085608464 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070527471 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087940686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074396906 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067823019 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089325391 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072853425 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090140274 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070727041 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086767166 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068080079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089405755 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072317268 seconds)
  done (took 3.300184423 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072550016 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064520788 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08245809 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072600595 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064949386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083455377 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065028927 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064701148 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08412864 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064735504 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065694444 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083537757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064226665 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08273655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066921752 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067941476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098091372 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065906523 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06443069 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084503415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06792113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064394595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08425128 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064234922 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081859264 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06529737 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065494378 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081975659 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066390008 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064309934 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08608497 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068682511 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064780574 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08941828 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068800469 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064023233 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086855875 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064448067 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065042578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082946138 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064298277 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064330372 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06374429 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06997417 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084556912 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067255608 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064530089 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084374227 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065930437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066948506 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083118083 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064604088 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083134015 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067449444 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068930001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082119204 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066869859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063662533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084563418 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065529934 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064125716 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083146641 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068305148 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065038526 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097887254 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072185109 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082233213 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067217853 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065337144 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085908151 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067539948 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077210892 seconds)
  done (took 6.152846894 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09416229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108307883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065843486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085431262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063166034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08414044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07003651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064084454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084628757 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070445292 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083721496 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06669976 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065869497 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098703095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065529785 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084232561 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071600881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062577479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083698654 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.182357516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083276892 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069735405 seconds)
  done (took 2.729590311 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.178841239 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071072894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.127544901 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093907273 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071266489 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093637421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073999211 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072036601 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092778349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070789765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089471422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073199004 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089607239 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071824675 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090291373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071580868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090640558 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072665105 seconds)
  done (took 2.519464108 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079990893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066846485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106345467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066682398 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085715126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070079747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090929945 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076567438 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087471893 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068587898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075106523 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08912225 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069731293 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084964053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070717055 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066570764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088464101 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067171644 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094799819 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072642146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092458998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075312353 seconds)
  done (took 2.670676398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082139904 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068678642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102961879 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06910186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081946275 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065682906 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08965738 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068256608 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071130608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089249453 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067729421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064610213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06936417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06588151 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091879348 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067675351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088416833 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068360591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068599391 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081939817 seconds)
  done (took 2.449549411 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089329459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086685431 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069611956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095460637 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070018284 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08671443 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07881021 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086241777 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070719583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107495666 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069703317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067906647 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074962644 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093393947 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069419581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09724584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077043656 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095871563 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068821341 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08749496 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08961126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067758056 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075406035 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090122307 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069468659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087809088 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06956706 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091925419 seconds)
  done (took 3.211596253 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06911921 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067422183 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083086099 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065702203 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065268199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083103851 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065374355 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064199726 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085682143 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064857528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0671982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085296851 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067752326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066528257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085932788 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068089427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066966494 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083271031 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065783768 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063854739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086206817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067118169 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066711941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083363053 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064440955 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084849407 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065981148 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065324159 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085199201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066245455 seconds)
  done (took 3.096295239 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077861226 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07252562 seconds)
  done (took 1.082191737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06665715 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080951322 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083959319 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071469356 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089644069 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0688517 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074823691 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069385557 seconds)
  done (took 1.540088831 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085250301 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078046417 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087894286 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081713657 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097768119 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08396819 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157476199 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08787479 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074926389 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064772154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.101300714 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06705301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09298938 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068671496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072694804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09335726 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065567886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092690779 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070711518 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065384568 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088212555 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076331151 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088505113 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063980573 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068735382 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109607466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096948712 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069113694 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071078116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094030648 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073376631 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079161495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068966387 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067332966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085287257 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077621792 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101224667 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071382955 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094927699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070153186 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096565568 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064286158 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071802063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09480592 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077585332 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086360833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069792119 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061963529 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084207669 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070608003 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06211738 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087028048 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06218773 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092404769 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071808702 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080454036 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086015831 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069518393 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088970233 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072433759 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073804537 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08913273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070600779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08681825 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078155875 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071864534 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096085906 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062424013 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082195853 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066591706 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07667749 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109712377 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073521737 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087277073 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068327938 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083995299 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071860551 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068414067 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092807678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074431385 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086624755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074127547 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094253404 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068469348 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069193784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096219535 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065988171 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0900485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065520662 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082645066 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065205399 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064701682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086926161 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078123151 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09154425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068291521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065620414 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093710043 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062288977 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086782851 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069856066 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067954219 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097372438 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072160379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093166074 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076738798 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094525848 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068395247 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088410331 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066048293 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068141685 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086132685 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075548078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061707927 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090187765 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068682131 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086217105 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076839493 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064605073 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086889038 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074836654 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092442933 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067539308 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064281172 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08980761 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068129249 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090231896 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076322805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065865995 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06112926 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061398397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093350865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068396447 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070426641 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07096816 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069308164 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.083584912 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066265744 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09197021 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077887749 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067734591 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087881641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073791622 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088714633 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067155997 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072910304 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088983332 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067170011 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09240676 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068639686 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062734444 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090327369 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069862835 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086028929 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072135867 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071116782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088802732 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068681781 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085797554 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076211534 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086056777 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067706574 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068105622 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086052371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07900215 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087984837 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06489901 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0651154 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097211319 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065949292 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085229146 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068086839 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070038483 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087766068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066540176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066822232 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068250639 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076571295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094069369 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068508363 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093810272 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078924256 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085311574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071273268 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067277415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087997443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069199923 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095744827 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074418679 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072283814 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090176197 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064502192 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092432617 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075638811 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066708999 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08631544 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067353811 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091330704 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073724016 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090901636 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06956139 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065483716 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067868669 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070206307 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090431076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068819518 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067331723 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094762036 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066342995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095048191 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069114191 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097271745 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072461855 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062358511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090977621 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067149006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092972554 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064424518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065992531 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086354896 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069324215 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066390947 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089674329 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062431991 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093505754 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076135977 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068003209 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086482121 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067850899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093289652 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070260633 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071164263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091012483 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073907718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097430261 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067367163 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070288759 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097873935 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068199619 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081221877 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074568815 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065661297 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066102602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06518208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087828349 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071762061 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09618462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075393482 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06170397 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090641055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067487587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06667165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083074731 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072179212 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089721716 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069899021 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073795225 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088178993 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068021806 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09142652 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067849646 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067775678 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088633336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070557931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088031264 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070080461 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06740954 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090690666 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067260835 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084501334 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070810095 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068517772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087646519 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072902314 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066409836 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066934499 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069074287 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090182281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068937387 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088092569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068682755 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070277175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087686354 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06817514 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070067847 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082532191 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075319216 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086259562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075891975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067710571 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084579369 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07557208 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090058031 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074778602 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087573882 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069424758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068901174 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087059273 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070033432 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093250933 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067177675 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077837371 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095393852 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068227246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089543668 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068418762 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068962894 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086860533 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068961109 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087148798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06905045 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067696706 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092004607 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070360231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086787783 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069998358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068199112 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087743204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069567096 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062276247 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065623876 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066564647 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08845604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078304232 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067447931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088507477 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067193644 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089333858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06741937 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063834063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096765375 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077523002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06735532 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073299433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089223724 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069795967 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09763955 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063553907 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065632417 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085079121 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067193879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074468664 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08815747 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077470073 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088175849 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06804783 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064604818 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088332246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067233049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081417144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067525205 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071101186 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086909788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067937628 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067523454 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089986008 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069363759 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097329325 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067740271 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068037708 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087900085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064886157 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08571468 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068121512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070342912 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088730504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066156347 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064587136 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088097297 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06850177 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088709134 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069091727 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069109082 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094424187 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067799729 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089771984 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072015958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065411589 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091532753 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067584069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086631271 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067825993 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071368171 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069737278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067614784 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097684866 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068432392 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06811665 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089016009 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066138422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08621296 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068636511 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067610007 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086973164 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06993598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094451239 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066755502 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070296727 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087760367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069038479 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093459459 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069875951 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070162625 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094222051 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068276522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089168817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076905984 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091333343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072306604 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068824074 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089932045 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073814245 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086535113 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075149637 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06841227 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067278929 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068263726 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064547781 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090423359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06751091 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06602278 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072983772 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06774271 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089729058 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067722846 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085258333 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070212676 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070618707 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074024202 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069389147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09262585 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06389852 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064437238 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089646836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066374571 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068743509 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090929137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073214452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090752284 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068845274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066207266 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09715396 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07290502 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092063629 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066603674 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090964671 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069838053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070092521 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088955065 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068455581 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069242491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070383155 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067657572 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089464531 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075313698 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071040301 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0904193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069091506 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088733796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06888324 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062165975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088462746 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069884909 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092341631 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070461062 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068190744 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098538056 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065453796 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088063196 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071961998 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066735178 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091925429 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063244034 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088529501 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070644652 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067816033 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083814838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06744486 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065286397 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090945092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066785213 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082615598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079054831 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095289834 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072303474 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066631526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086938863 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063687744 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062803329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087730626 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069270027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08981576 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079015271 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066188175 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066004579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062045916 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089554812 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071402628 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071237558 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085507011 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062892668 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066244508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091221186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073023813 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086604733 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067546772 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070067887 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090885584 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065790804 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070858425 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064304959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069753958 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103106849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068076437 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088650679 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074786531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095314662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069762576 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063432961 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088891348 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070861745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088560741 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070253692 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068354598 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103108265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070392273 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087224322 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066973702 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089340438 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068887565 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076400779 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089268346 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06832131 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092189091 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070257913 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095821549 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071721797 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076067317 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09187304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071347465 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086452095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068986943 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066050026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0870678 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06919013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068322442 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094738716 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07528932 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087868579 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07834983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097793565 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06991027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084038411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068474822 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067276816 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083397197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069919754 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065672078 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086915959 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066462037 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066294019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090400072 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072632655 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089384345 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069578581 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06732138 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082873829 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069973378 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069626205 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067480442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063310356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090101409 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06945699 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091446861 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072530135 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065845919 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090103425 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070227145 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068330645 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083759885 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073823449 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087017268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071042375 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06721941 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088081953 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069197528 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090296251 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074422821 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068261392 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090618899 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071670421 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09017489 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065693244 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064515533 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094208845 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065973308 seconds)
  done (took 47.020427377 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105053808 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086644724 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065832628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063854359 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097105817 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064078343 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084274 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064653056 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06336555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064889999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061651583 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085831008 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072871066 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10124723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075668197 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089049026 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062979237 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08441784 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064162807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063766355 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071710429 seconds)
  done (took 2.580328464 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079127168 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071432712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071921467 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100135724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069492231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092912331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074755068 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092768675 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077523604 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089450197 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077988249 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093217693 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068806013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.089118682 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068486281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093362401 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076179809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090605824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071992822 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096779645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071579493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095986324 seconds)
  done (took 2.799055231 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07166249 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06676118 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088328124 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063170609 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066462606 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082955451 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.080617762 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064165003 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069056192 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065118956 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088878176 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067325261 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068515411 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083768102 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068033922 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064177712 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131511041 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091792747 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067391788 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088429784 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063174796 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069025456 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083642909 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063760677 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066065605 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092239821 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067854245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085504968 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067720575 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065886834 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088083149 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065382497 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067641972 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088033985 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067432126 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065814448 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088409426 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067218613 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082668848 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066959773 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067087192 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084119216 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068510227 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067865643 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087098246 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065370098 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088311554 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067754115 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062149472 seconds)
  done (took 4.655191164 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084294971 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131994759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068387427 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088076444 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105805825 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074196882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093276786 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112012448 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065518098 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065082191 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10614175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106197515 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068101519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093792715 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075474995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087384033 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069034774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065814118 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092772136 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066479086 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093526961 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073600164 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10353014 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101294893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072220797 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086829788 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068020302 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071223375 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10176314 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092125698 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072928092 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093392339 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083076677 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090305755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067123205 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089934396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084497851 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088251352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070243506 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06361278 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067868936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069473897 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09691431 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103684533 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069122787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092624914 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069070144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063913021 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101563747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068574878 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095978046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102342058 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071165841 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087606222 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072439266 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102673372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067771834 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086105291 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071871115 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100443893 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065596706 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070795755 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103115021 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089308633 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076097483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102196192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073272172 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092167701 seconds)
  done (took 6.836215383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078165058 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095241611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083409685 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104038575 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073513556 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096652484 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094652882 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075826859 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094501997 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079703486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094462215 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116787214 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069859473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097482657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075414844 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094919507 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07490479 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094423215 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074186478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095240349 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074239944 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079213185 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072059899 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079255304 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12448619 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069453189 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095424377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073715129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103554234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09457893 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082652515 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095732567 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075176558 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104378234 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080980244 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071661411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065490734 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097409656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074295451 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096456677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06797257 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104200025 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094328297 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070474421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095088019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075340769 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081067848 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080141156 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100715476 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099290025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074838603 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104116593 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074773755 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095615912 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102122494 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109006768 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103572124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103655604 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07420955 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103053047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102105393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088069031 seconds)
  done (took 6.468388559 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087013285 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097263708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077770001 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084990624 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065823443 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092465663 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066472352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065047623 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097906086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075233227 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100649163 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091517113 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075655037 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099587028 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071708664 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095638968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07129714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092767832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076099705 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094149452 seconds)
  done (took 2.677543907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078448188 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083344614 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090287747 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073129901 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092880588 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07341442 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092070185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070753158 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088180381 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07186137 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077085884 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0997753 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06823182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095182112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097237935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075100895 seconds)
  done (took 2.326075881 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07911188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095770174 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08211516 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089753406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067439128 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063938237 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089799668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063788438 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063380591 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.102166094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066653183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092490641 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067115408 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087225633 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065071321 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069915942 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085517701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065049809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087494348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081018349 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098122722 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067318168 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068740113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089097031 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068178615 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094287372 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067135417 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086246536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065803893 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067458372 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090020238 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071363218 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08609264 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066602058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06577785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063516272 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065603999 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090664834 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071082813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067146745 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088212291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067289598 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08872465 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069439868 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062673661 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066401477 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062133566 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093184329 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066401843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088755647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069054205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069989364 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089529001 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074503761 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091917243 seconds)
  done (took 5.225631235 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082274136 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070104359 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085180209 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065335141 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070089521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067519188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069105711 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092957893 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070350142 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086314262 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07018751 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069528329 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091581271 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071652691 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090504671 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072353411 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062983019 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091564613 seconds)
  done (took 2.380767572 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075253291 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067533317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096059524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067601292 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067109972 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092069658 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063698315 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086979072 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067218924 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066837052 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08891795 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069714143 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085956832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070857281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06750796 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088693915 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07033417 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065310183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089832736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063603997 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090219784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067187284 seconds)
  done (took 2.670992152 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075976814 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093463819 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164109229 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106785658 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084604915 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079241174 seconds)
  done (took 1.608513243 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094545028 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101980437 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069111986 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089195724 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098212866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068018302 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091975549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068312259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10031486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099431453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070417577 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099298889 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078043677 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099531919 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09519906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077107283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090064815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07048123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06722885 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108755951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090363247 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078266332 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090901848 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069762637 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090613272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078013709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100008874 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076563729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067223803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099845337 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076447572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090677345 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079127951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100209208 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071267363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099687239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069819888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10828149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096234765 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078458898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091894978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07626963 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099091107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074574755 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100173728 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069830325 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096275824 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068050535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092064035 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11081868 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075157339 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099102719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074983686 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100660499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099661275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087949989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100397775 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098883747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076112038 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099717786 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077545369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097310984 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098042196 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078983949 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096290332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079891914 seconds)
  done (took 6.780140197 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085511186 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108817605 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069425273 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076029737 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075213814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09373587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068689892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092494226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068573877 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090471034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13145284 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098508712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078371054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092160069 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068644034 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090948748 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077524325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091232742 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109633087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070199544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098386843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077482472 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099351852 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099520496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07619031 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090559557 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069891097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090204387 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070235669 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09620951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070413827 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10024495 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069080655 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075523423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06735601 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093135536 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074563531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091962952 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074530947 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100082416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108858748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069526877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090794993 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077311155 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067863121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06829875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092510819 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069588572 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090947407 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078838266 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100458881 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099779773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079714651 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09109368 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070561117 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090334298 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069959233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090569966 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076230286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099180947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069827762 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110566328 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069113142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068161138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099694081 seconds)
  done (took 6.607985526 seconds)
done (took 133.001663586 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221160252 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.206738438 seconds)
  done (took 1.43567106 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072123553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097040153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10059626 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130274885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0902278 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102153405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099351108 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101663693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068092902 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089327033 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068762284 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069191092 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154860931 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068836241 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067663794 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091797714 seconds)
  done (took 2.489323177 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102670154 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198557129 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099820365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088923378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098980117 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098429978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06647725 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098830446 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073159946 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06590553 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097557395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072162709 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088713393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072774984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09379009 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07611055 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066268471 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096774254 seconds)
  done (took 2.670767507 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103915086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153996345 seconds)
  done (took 1.275289238 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.190761043 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141598543 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210223437 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41364174 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208180164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287784412 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181412617 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178980307 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157763151 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.177215497 seconds)
  done (took 3.162470724 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103619161 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173826629 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309204449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119352571 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.097519459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116509361 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119075405 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101473183 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080684746 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102352883 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10073773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079129499 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120232188 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076724708 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097504938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078654398 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124456834 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074635169 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099414744 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077139593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120775834 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068339494 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074989336 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07264109 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074776906 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101590038 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067058498 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088885004 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077275377 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096579723 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080145523 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115156104 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076700546 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131325135 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094633315 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132349627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078168908 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095352414 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075386269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095578558 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078326794 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09934534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074011215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076845367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067215439 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075964003 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091954398 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067706995 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10225845 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069780346 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10197375 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079460273 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107312792 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091810554 seconds)
  done (took 6.267530279 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.724862837 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.128947266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071334633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.13337616 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119600024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076117474 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.75045389 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114207862 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200601715 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094654166 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111850861 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073072391 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104298649 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086950153 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132436911 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104571165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118034326 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072834001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125169724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.124367648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069960004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117097596 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092355552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43198669 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068733198 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093857005 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069962308 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071311029 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157114001 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081743292 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07200586 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169716054 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087269006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.147974971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090727144 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07012136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069258556 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103870029 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209383521 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18487709 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154671651 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06948378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069163797 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09332721 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09140264 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090725596 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136714574 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082699156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145289378 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093240214 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072133635 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090763732 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071850091 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103239189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080439347 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104308356 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.258649328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09129672 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071438948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072270364 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231171136 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080743294 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104259795 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09412014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182188472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070285581 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745979118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088373017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06916829 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09376315 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069390825 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092882776 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07173205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142162223 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374276665 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0725978 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071053095 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092333396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200656788 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078771292 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092102387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137034273 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068758615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069356044 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069425473 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069645879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16781065 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083175511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070251336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092327373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07174363 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091747521 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069452849 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187710019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103978833 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081533209 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18494844 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092469135 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137117523 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08156654 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093517202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082095428 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091374134 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071694938 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070396668 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103627781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119772909 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082161189 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093343601 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070225296 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122103097 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081795417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092072646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080674858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450592622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103697919 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068787632 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10486974 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069422598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138184033 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093834132 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.207143733 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069797702 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104192236 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070231152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091512052 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070271222 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138013911 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093137653 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07049636 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070130729 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094278935 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081894372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.183552095 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07226795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18492221 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159328842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093321786 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146621748 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070939867 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143589153 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093231445 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072346637 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072046894 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755944656 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070044783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069864518 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09478525 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173171009 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070550637 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102666263 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081070512 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068754611 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781834908 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081792899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102067309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080872474 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094218835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069697007 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091591514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072008828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134662088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193991497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071912279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069196071 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102225708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136351579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068660085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102721122 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080375639 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102234435 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069388995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094009251 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082272097 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142712512 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.103268719 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.162534622 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.564098474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070701333 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101909149 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170869333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0691104 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109598577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069632921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10722234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138846914 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100682436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.229568128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140838762 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176448165 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081265289 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107317837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068614851 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091602922 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080835055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092082121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071697844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.102216398 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071948081 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070431134 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10955512 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069558285 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201716109 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091461965 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080361405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091260612 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07175648 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107069499 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070771232 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071353813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104927616 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070657878 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10262807 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672097954 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10244933 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070488318 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07073975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187565979 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139227838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068370411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093562765 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071981083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134901191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184893322 seconds)
  done (took 31.287475346 seconds)
done (took 49.600592321 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26215367 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17792572 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252905154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12009575 seconds)
  done (took 1.934049831 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149717964 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102779675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120531044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065603926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.128257589 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088568469 seconds)
  done (took 1.703096686 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.397244645 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.241176676 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235086581 seconds)
  done (took 1.916157955 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.225194666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239884423 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424906856 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306203378 seconds)
  done (took 2.355048518 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.170201465 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116191032 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068299848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108553335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16372048 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218638992 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127028102 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175933153 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079520039 seconds)
  done (took 2.324449933 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.170423695 seconds)
done (took 11.441585837 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099060288 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.265051175 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224928412 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.100527279 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.206393818 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197058898 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.213708009 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.211981388 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096555206 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075779934 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138617072 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.21325402 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07951835 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.136943884 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.135898002 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073875805 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.134499104 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.217435325 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072967276 seconds)
    (20/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.183384072 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116074431 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15638511 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.243237875 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114802829 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.181309962 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053433392 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073890681 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051402774 seconds)
    (29/309) benchmarking ("sort", Int8, false)...
    done (took 0.166527166 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173220094 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078249171 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099123345 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.183884549 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11206662 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130322287 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114100148 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098266705 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.209416318 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09037037 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073900876 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09102828 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065572963 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071276659 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117148091 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096903692 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200155025 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.202718112 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072110653 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.168854787 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.196837088 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117324421 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072894446 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.218233213 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115891906 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169527221 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075366912 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074399572 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.166135257 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064443827 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093472391 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083123883 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076667306 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116204614 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.13880293 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06745218 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052523905 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110050765 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075992908 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140903261 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.138409679 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062185687 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051572656 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065440448 seconds)
    (74/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.105635425 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.164399575 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164784803 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053602175 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09233006 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.154375476 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134191481 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096867666 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.135481579 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110755262 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091938642 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.137340629 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191128035 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072400661 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101577773 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07372492 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165741921 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.068197146 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114414171 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075326094 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.209016636 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09588124 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.103699729 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100676759 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093566684 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073007309 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069888586 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125945882 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053368223 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065992909 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089001515 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147477864 seconds)
    (106/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114592889 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066105698 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.2006914 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195940296 seconds)
    (110/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214736212 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07353248 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076619891 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099971216 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064292697 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093434494 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073265097 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.175891325 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.177211472 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093114863 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103895247 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053783061 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053666981 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.184258534 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170825504 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.139204583 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.336534482 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077580619 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11512441 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053806811 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051811438 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076057904 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071652438 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073102381 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104800609 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145727119 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.13757826 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091575596 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075560658 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11321068 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074635875 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106981156 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163891436 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063306019 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.095154876 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098157166 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072289158 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19749213 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072674395 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101033761 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172350769 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077711829 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07604301 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098804522 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06631183 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051831546 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090995399 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074468424 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09867035 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071083282 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136014793 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066823539 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065677822 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05282535 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.102480388 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140846779 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096311421 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075152828 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051622103 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.077654746 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052920052 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05215305 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075598756 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082570462 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052331741 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091376955 seconds)
    (176/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055730492 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055410794 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125274431 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069171672 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06292201 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122073938 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075221758 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074128971 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120755963 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074190727 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103155291 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081939363 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061960718 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098112259 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093435815 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097716924 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053321468 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073924999 seconds)
    (194/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145114157 seconds)
    (195/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054218877 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171926177 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079314845 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052230049 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099114321 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078830914 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052244613 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092162933 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149203131 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091502464 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05482467 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066850929 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200641965 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075809852 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092285359 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052659993 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074533875 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135312143 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076789924 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131039778 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093266339 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092909798 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053649047 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196809194 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.152970269 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07898393 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178121599 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101302829 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074496579 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198597929 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066981715 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16428456 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076575199 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079407863 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068725264 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065662696 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11709562 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071940569 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106520886 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067616499 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 0.152926386 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064717165 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065987487 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096454076 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141720387 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11619978 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.140915514 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096469328 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053944795 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055550378 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100285603 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068039507 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053689069 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076999239 seconds)
    (249/309) benchmarking ("sort", Float32, false)...
    done (took 0.130178022 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128237256 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089157495 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072644896 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068823532 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054750329 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097219205 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053252143 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087556601 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077467614 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053047052 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066637854 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141495112 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067260122 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114331878 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091938696 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072470308 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.077165482 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067227207 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061427508 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076535668 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07531897 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053825801 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161708909 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063000214 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138742769 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068568683 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05252163 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077863106 seconds)
    (278/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054364979 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069367597 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195536978 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054451785 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093026716 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075203458 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075437078 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091009093 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103442425 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090629722 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074811277 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079364331 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099365411 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068029577 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145674153 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053984418 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069200585 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092914487 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073185695 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052327429 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093327355 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06863216 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118624039 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068479262 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072362109 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076420239 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054804264 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091653531 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099000017 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093305865 seconds)
    (308/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052398571 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119869666 seconds)
  done (took 33.542869215 seconds)
done (took 34.594039314 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085639309 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117236928 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076505624 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092963272 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.107597988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077058023 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098946602 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.0797386 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106504878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08375049 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104468963 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056429979 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074243883 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100578074 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075140771 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117226649 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079693297 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097954213 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075167718 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065440911 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073654266 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065339407 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067158695 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.082464157 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079738749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071892178 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099837863 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075041815 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090404236 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06745788 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069888898 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098925583 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066836725 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07894797 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098299538 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074204227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099734618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078149194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068581079 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091126726 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075851483 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066107749 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098651197 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073956026 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071876311 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09770467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074441134 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104086921 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093262178 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093615652 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076120456 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077200355 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.103213821 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073453086 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094982171 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075536583 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071071688 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117424489 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074886753 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092910042 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075758661 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074408154 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0981237 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074775367 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074117908 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074903801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075124219 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09928886 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076255805 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071656357 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092172138 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074390606 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092859908 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068683656 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076992102 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102189765 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066978184 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072856802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09837376 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073201002 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065854781 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094430151 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069200811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072660214 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094569442 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055521523 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069224293 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098387224 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066709199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098896521 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074319045 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073699921 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092982331 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077741035 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06634325 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097053851 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067604917 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065794442 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093570902 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071002715 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066432083 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094064155 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075680124 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068551358 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098053132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079975257 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091854378 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073609571 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065312698 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091940453 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081080604 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100090029 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067643394 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06962866 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090465159 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074670567 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064999899 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06565642 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065923353 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065432831 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071304398 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065767879 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067489064 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.103481255 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079286283 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091058543 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071751546 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069571602 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090972435 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073138334 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067308785 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092592072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069742832 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062585427 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094004543 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067669452 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073363162 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094408707 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074743496 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067496752 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100136181 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071646647 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096460576 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074153465 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065913971 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.083730287 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070887517 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068435136 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093260643 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067860609 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067986757 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090982415 seconds)
done (took 13.416990055 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071028277 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172078751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124570502 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098266337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112143645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067630247 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076610362 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129588573 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092852719 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104619423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113507351 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085790934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.140715198 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065746641 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.092563477 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0712458 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067053758 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115111953 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126605953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088692191 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137532703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066094786 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121568614 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090763029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114640657 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.128974777 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069533833 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071360063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096163921 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093789771 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112440735 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070944779 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067041099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125761046 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119016024 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085401279 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091931691 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085083096 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066599549 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.092564298 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.089506248 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12495183 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106312539 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082393867 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098079925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07088103 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068387473 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110533396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090856399 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.106075831 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112692138 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107436477 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.095559864 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082635958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.090482745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087904123 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107085475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07016418 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067013746 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095267672 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066907854 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069838863 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114213533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115824941 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071273726 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106926935 seconds)
  done (took 7.435985933 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087845439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091001865 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109964794 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084018032 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093083631 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068136569 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066844475 seconds)
  done (took 1.715748781 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071865227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08957717 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116177086 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090928076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111317642 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088533413 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103061968 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068218843 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083135215 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095631167 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08917211 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129770231 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069789931 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100356817 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092834985 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06765133 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118854003 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067327935 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097006548 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092160824 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094949419 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088987966 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069382927 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093982215 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081898528 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09258312 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116501936 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096734257 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070391856 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070663389 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090528886 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109719704 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107108451 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076022895 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067329493 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108834807 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08244274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091466351 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085017683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098392802 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082963551 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068767977 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095124367 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066568094 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072319377 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105020625 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069658568 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068019624 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09749038 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088282148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067794324 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079986727 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066606601 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100269367 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069992438 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098622854 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079825452 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06854789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114135602 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06962853 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110304776 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085815631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081321349 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111873972 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070879389 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10763611 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082477933 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.095588816 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07118553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071690576 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110686879 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066580012 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068968648 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105415163 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069935114 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116591337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091695815 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069240201 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10498289 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068138963 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093650072 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069395888 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090095252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098495154 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068963655 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097652148 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072995418 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065658643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093153052 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072627464 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066223743 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09504519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071663888 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06792914 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096670334 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08577865 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09418599 seconds)
  done (took 9.550291179 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07297282 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069178639 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095497037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069867589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068916514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095284273 seconds)
  done (took 1.596153228 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098642112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094970976 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083084948 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073210763 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132235603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081717674 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109047648 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104577683 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087452072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080185692 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.10911194 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083192255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116083691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07357878 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108711705 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072688341 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108673975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077901866 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078803196 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073010577 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115391622 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074878494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073345178 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110476301 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072173345 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100069609 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077561449 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106179818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080030827 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106198516 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074493025 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07150093 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097889528 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07972794 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109259772 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071738685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09941026 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072686647 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102766608 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072180032 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107747739 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075772831 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074982563 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.10004292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080560022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098663912 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073516167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104026186 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082781048 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097206149 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073421022 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073018582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098910624 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072870812 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097236703 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081273913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097251806 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083248586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073501936 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069987669 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069243354 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099751041 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079791671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098120256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081931125 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098075872 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072325086 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073808401 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100721684 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073585511 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097847181 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071542788 seconds)
  done (took 7.474468518 seconds)
done (took 28.881880434 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687667764 seconds)
  done (took 1.810168299 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.759610545 seconds)
  done (took 1.884578221 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.508148721 seconds)
  done (took 17.635153121 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.615704756 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.789683601 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.835080023 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158768539 seconds)
  done (took 3.524689365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.930352381 seconds)
  done (took 2.076773178 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244110539 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228359134 seconds)
  done (took 1.602124758 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809000392 seconds)
  done (took 1.94878818 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.262193474 seconds)
  done (took 2.397092439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.298209381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181068464 seconds)
  done (took 1.622744736 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.524354172 seconds)
  done (took 1.662894934 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.247584826 seconds)
  done (took 8.390519505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21297485 seconds)
  done (took 1.36483057 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271310229 seconds)
  done (took 1.417870316 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.50860563 seconds)
  done (took 4.654043391 seconds)
done (took 53.128765227 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082611847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082450106 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108154968 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079256483 seconds)
  done (took 1.492921452 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082986959 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073266936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104447939 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073645225 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104127735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074611951 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075077251 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.105754609 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073277563 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099833689 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074583368 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072500141 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.103398811 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075211374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097322921 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07658077 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102406196 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075137558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076119283 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100057999 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072100344 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075446973 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103011829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073035597 seconds)
  done (took 3.196478067 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081134403 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073448687 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101268211 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073557873 seconds)
  done (took 1.481344159 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081830607 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09172427 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117433122 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077672937 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119807326 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113135309 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071695381 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069226793 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09738979 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079049745 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068265143 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124596919 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114754681 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078313691 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079229901 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093956517 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069452703 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11461714 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078814185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078494528 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10057427 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078672064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094236742 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090521612 seconds)
  done (took 3.336795627 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082332644 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103114022 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10591975 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088063257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11893121 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065323368 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102473283 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090618374 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151657491 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065795371 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096791716 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067908197 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073185271 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.092769922 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078189835 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132627185 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111156232 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068096646 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12410023 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066805181 seconds)
  done (took 3.042527775 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07723176 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07108906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092302065 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070849441 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078414846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099845272 seconds)
  done (took 1.649706239 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072579892 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069100797 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093550392 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069512643 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072793825 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093919714 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067852479 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068254889 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06726631 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066981044 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066479005 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095937117 seconds)
  done (took 2.058239072 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.404363713 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098454609 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070378193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094005332 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071592209 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093252104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082005927 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068963809 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1182492 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068179691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067691625 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097408288 seconds)
  done (took 2.489622282 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267879256 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078595844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297147714 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166805852 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141918934 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146554763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133625199 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142386855 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175012409 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101888146 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228570134 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199682207 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13780961 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166992991 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117546226 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100191041 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215985875 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193979557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103592169 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227142171 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175925567 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154573512 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177982233 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13095596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136137948 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153472806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072075821 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10872919 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231447275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162237308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177185062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110508985 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092676603 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239771823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229495712 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173647131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164385303 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085612339 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158990256 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163783244 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260692897 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11777401 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165676328 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13987155 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108836304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171850339 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149745976 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148953045 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136215724 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092059926 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176181036 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216260902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195783286 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088489237 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141173071 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14498468 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145016586 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131908967 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242572786 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192901295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156827199 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098758245 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100916798 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211381727 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161581734 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139184627 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157978298 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121986695 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164450763 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184973098 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148489844 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201436984 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.161867587 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114876192 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121522025 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198332904 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160903496 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200812842 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15469336 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073365095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155708456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134176762 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083135533 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171670383 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076364732 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235560143 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126825077 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108454379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143743291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138210672 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139168722 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195730875 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176619317 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104954572 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065832976 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133532171 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150533109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179587827 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116211816 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136556513 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146788505 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080507292 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168937022 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102804982 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152584265 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077192322 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152860805 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158854167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104711526 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154983777 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102315963 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129466954 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163772727 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190487402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090196103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112397706 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197129441 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151771729 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133644595 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20292843 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18804958 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127116961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131569552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182775832 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240089368 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090903196 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194365739 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138660321 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084741467 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116460823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123955261 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143413787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152436851 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083475197 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14821965 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227453965 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075216601 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125096383 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163161987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107930371 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081972818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13379729 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130716474 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123110984 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102810483 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135023592 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171088009 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179953176 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109144162 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155609333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128883477 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231506294 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118009337 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10326271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13298633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070682898 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195905306 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189731295 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107948269 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195619524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152986377 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13429008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117376447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082320918 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17092698 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080518441 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070752707 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206269127 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138408165 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138837238 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183132581 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133116496 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158164223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149724998 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165774788 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16231759 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159007508 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135893859 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115013115 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113645353 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154841212 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072453712 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122511616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081139241 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133824109 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125595746 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083727414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202645362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15580495 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128485033 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114202821 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126732803 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176951586 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105535762 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160096025 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148391133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123526193 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184496547 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182878848 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190297262 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10172748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206271337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071925685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074021485 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088913996 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154918535 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112979099 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084191419 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148854323 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205704634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160358305 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17034563 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141791228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152418709 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18643472 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097825882 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117603467 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207415733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152219726 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.130776663 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120256225 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100478495 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200156288 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112005097 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242087854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143949571 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121604554 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217802277 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127911286 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08208456 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135938744 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168023579 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135594286 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176231747 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129325202 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117870776 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140419149 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075729111 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130907266 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158300204 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151452704 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194424254 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117180377 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192273944 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078227179 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153756584 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150917672 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153231833 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092643411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150506326 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193652906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125334511 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149785417 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212955868 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082218699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155041591 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239842019 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177241332 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114159664 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140489881 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147926321 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159494975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150307932 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173197381 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141509702 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165376956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137727914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08774441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117504451 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098936373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135609686 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124969143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13942761 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144853556 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095959952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192031061 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132218982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111514304 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148112363 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126456473 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091262434 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127530295 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23490435 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12148808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20333422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130314098 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17740482 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224938765 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102787811 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082801276 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106038773 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14253741 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083247598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164390374 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12876548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135323356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155435265 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174637666 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124938426 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070262953 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139226722 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16580142 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142387513 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127817613 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134412176 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196842849 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129709105 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081507947 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144557067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134217036 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104777603 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235221541 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061645146 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097107189 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1073289 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083018124 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159718791 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213924833 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082032937 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155427769 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150422539 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141468741 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160334993 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131894415 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100888751 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113694787 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182353039 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160931833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090981023 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144307477 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188769324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190785513 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136769996 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124656784 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205220426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212207686 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194603924 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119455958 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144694298 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144366766 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109953476 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201416467 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110618354 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199874944 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111518759 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169459229 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104107455 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140382909 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164398104 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126798112 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092037561 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208327987 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148528126 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084944285 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107283276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149461798 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151965758 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137099732 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07760209 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169902862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102828721 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164956462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229722626 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084230779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135122917 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096798736 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110750833 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140080928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133689611 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088483361 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151356278 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236480742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089816759 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211592267 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172575053 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144780008 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167381348 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101849834 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668041115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10845511 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187197825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147089486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235325269 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127758033 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150269812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139310616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155851109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178970073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135557846 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205486662 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165703276 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148168458 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080975931 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133459829 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134063858 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117892435 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106811744 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143610265 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148002412 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124021444 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116426919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155336202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111986148 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097333777 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216347559 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148326093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178388667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172450477 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115312697 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148911336 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171204836 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109645603 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15436274 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184856716 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137888833 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128439931 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108875181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10515429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201609706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074267321 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225735978 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150735486 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139185203 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144739304 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145281472 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162273661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139893958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152797264 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123026241 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141703477 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143376933 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083720686 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107939451 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106829359 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143068935 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12851388 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130251526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123792259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210723639 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073372281 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126928635 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133547404 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179517852 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238494964 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08955455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113589568 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150583034 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145540916 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145357545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154446607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081585509 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112948898 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083856357 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133692373 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110474316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11128366 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138310628 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143352649 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227003414 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084709927 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253077467 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096950242 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13543949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097192917 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08227225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126262522 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127337207 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111286224 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13001698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231738712 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096294008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121463041 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122829548 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074894576 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111963503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16079445 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141773223 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150655478 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100091264 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09243291 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140996874 seconds)
  done (took 70.532036868 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149186687 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125452509 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.139952512 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.195539656 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167547635 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262532268 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202125818 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24586598 seconds)
  done (took 2.719061848 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075533496 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.128776046 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102247803 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11103013 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068526705 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098817693 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.253422319 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079502034 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.098258986 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090009356 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.109765352 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09770446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.496320881 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067172444 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095836917 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065633126 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.095778478 seconds)
  done (took 3.365719671 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444128195 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692323049 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.426993034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075674572 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.167516418 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114989928 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.777273143 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.174298905 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097022269 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465874785 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724159531 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162444039 seconds)
  done (took 18.555704288 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079377229 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070314714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112435119 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084578844 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072795218 seconds)
  done (took 1.658153171 seconds)
done (took 116.725422652 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084202878 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.334335779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053377941 seconds)
  done (took 1.662578449 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087049391 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084756287 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114394091 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083142154 seconds)
  done (took 1.616658393 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079452146 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076657957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113390708 seconds)
  done (took 1.510888129 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.290409356 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141299981 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.11855596 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08594694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078702002 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107194409 seconds)
  done (took 1.51450193 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076820363 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075780729 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101818864 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077439291 seconds)
  done (took 1.57007686 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08008855 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053255614 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055229558 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085062367 seconds)
  done (took 1.518827953 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091029328 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078979495 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108073918 seconds)
  done (took 1.516062219 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111141378 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114340344 seconds)
  done (took 1.465280236 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086212298 seconds)
  done (took 1.324372673 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104895085 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143959628 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159683923 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.140051145 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168743221 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13950741 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086327304 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118530523 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107135316 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088440231 seconds)
  done (took 2.502502736 seconds)
done (took 18.080151503 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082307487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393712993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362504375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091096493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708027336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357010732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009310405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092296416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152328249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096869154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086497242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651564292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000259507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321875138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9874754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323073643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65083056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067979742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067081933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098750991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965704851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067895116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097708546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069553143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678269185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.3739114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068681489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351837023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06869947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097450304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357709217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068913182 seconds)
  done (took 16.101064207 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074737086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146153828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076031423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083875837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07063718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069351279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101702929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070826346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155829324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068985509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114354511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06975854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072000566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068572737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086855372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06760165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068196498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068099413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101573586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070774014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087500928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067310837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067357597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100027429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070040486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080402967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099050343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069397046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069481107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100439921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071301104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097437173 seconds)
  done (took 3.940201889 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119626361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155391683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074926125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132366244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113365051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099864642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143742306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12371211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158703927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068860759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114038505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069563782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100808871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068225735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086607873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100890212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070497296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097628242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070476961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069587187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11675648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069351972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096082088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070622054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06915384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110815958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070378715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068190483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098641775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071324979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100198192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070771896 seconds)
  done (took 4.301594343 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076718219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075824125 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112349931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085018551 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069435274 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102047334 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073570302 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097887199 seconds)
  done (took 1.950670778 seconds)
done (took 27.54014524 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083126823 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06990366 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102067929 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081921822 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072689855 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.108736765 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068320659 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103506806 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074476178 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072809083 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104945587 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068789018 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072092494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097618232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074738967 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068195865 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109761191 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071469786 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109336188 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080945523 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069436518 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072385807 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073144726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.111287128 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079848943 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108226188 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07938165 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073078227 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09904966 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072096559 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.104862202 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08607607 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068792307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078525902 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067378676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067833622 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.103964368 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068567741 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109205755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078482973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070505776 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106900602 seconds)
  done (took 4.789065383 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092382124 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09103983 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114854053 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06233522 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067623703 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064198338 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087797068 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090990912 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061271814 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087929014 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.086211738 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060607846 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0633022 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053841092 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089496454 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057836248 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061963746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.085922273 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061511318 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060259553 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058094359 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.084199838 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061651474 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062799233 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085888734 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063769896 seconds)
  done (took 3.174138717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079593742 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085087526 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118564171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127341712 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135351957 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077271825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109508639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088853898 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114880475 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068407396 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072815065 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124868033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089197364 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103369221 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072560008 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08402034 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11241864 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070524423 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10268275 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093103134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084392187 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.108125744 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093888195 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.110908871 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069325524 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070357788 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10199706 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082491787 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101246598 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078940481 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072373613 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101503536 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069974175 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107603379 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074429937 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069709736 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12012109 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078138859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.107076682 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06986267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071368369 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.098083006 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091327172 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15411344 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069609623 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075436298 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10671749 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078082804 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097469162 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087849692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079289497 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097887551 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071887446 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067672021 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098545882 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081953565 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099110961 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072286272 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076769361 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10065801 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08255349 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072065743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114104221 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067678576 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104904541 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068868706 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069288867 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09673235 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095003604 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097963019 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111627797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069239361 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099515836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077375756 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105123569 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075091553 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068580217 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113791986 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079488068 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100896872 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078258795 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071590411 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101304591 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089932747 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070525483 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.100016985 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06972147 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102833082 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073055565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070178525 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110996078 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069070811 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070674088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114770812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068198514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098071623 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076014983 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072273131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098268082 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080352498 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102353039 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070786779 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076989706 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09839304 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072363682 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077984909 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105656838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067564212 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101597192 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.085194519 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068896895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068741546 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069936906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100657741 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079360188 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074738426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10375368 seconds)
  done (took 11.629702724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192863904 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156177197 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.102049202 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177063524 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078514785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079267757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179396155 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126342198 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070044787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068831836 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100985321 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115905048 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13810895 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.154171839 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08000736 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099271355 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08414301 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.148850228 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180035182 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143617848 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116127434 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077984921 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101728649 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070875193 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075508094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114078927 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093142568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107715701 seconds)
  done (took 4.502634755 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086013778 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131075012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076037681 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090445536 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122227064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068577684 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101384449 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071304523 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080219958 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.112131213 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06809014 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104255319 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075308977 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103485749 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07004033 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075120193 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.106536711 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070171297 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070545921 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.104505711 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078492202 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.112019234 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073291308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06742946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10588886 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067866293 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.095276464 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086096862 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099584051 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091189092 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066023995 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.107052973 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082533556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099689319 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069180146 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068734074 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098963778 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06970065 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070527078 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09751153 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068209981 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057906686 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098152769 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082168267 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073865295 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056637825 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072424571 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10663228 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074966552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066041383 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102510525 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071997072 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072063294 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106421621 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073631804 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103438243 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07175193 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066273807 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105948078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070282431 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065124139 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096969324 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074218172 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066597794 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107722601 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073500732 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096558392 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070211519 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070198862 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104374409 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06953125 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071680204 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096579776 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071488088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072814925 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.100970688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070068697 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094943368 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070137105 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068762098 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056313633 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099708369 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054816988 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071374985 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097823869 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068073287 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096852928 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075508554 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109707034 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071253903 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074741487 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098844454 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068904685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071034814 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.091745228 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072694122 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083640454 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114750804 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06829625 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.09764639 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083699558 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102714079 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069027021 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057555251 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105478261 seconds)
  done (took 10.051605375 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098557078 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088918101 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100982584 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084968146 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122114355 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089945438 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075129654 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108272203 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070800793 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112472747 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07577416 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077227084 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099310817 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079224362 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094606275 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108408274 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071329143 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107459942 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075115052 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102195942 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114637744 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082778252 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.105940021 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070029238 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075809774 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079403002 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089594288 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113037074 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.080643626 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075985922 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112359263 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091419736 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.10523306 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07333695 seconds)
  done (took 4.394695106 seconds)
done (took 39.793694416 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.341552587 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.602837558 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.336905196 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.392964898 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.353993137 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.349479708 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.3501655 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.342129752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.004955773 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.341249532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.607156152 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.191401458 seconds)
done (took 61.491420574 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.356614661 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.483417152 seconds)
    (2/2) benchmarking "String"...
    done (took 1.615969643 seconds)
  done (took 4.392442584 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.751201933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.310441481 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.602545013 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.343341529 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.343622263 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.648688138 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.197388623 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.292389857 seconds)
  done (took 29.01870056 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.345820616 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.754805263 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.246155049 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.254097304 seconds)
  done (took 19.882800202 seconds)
done (took 63.681711814 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.36209372 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.431918753 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.363804191 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.325377804 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.459458151 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.368160001 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.492100921 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.403608819 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.343742129 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.329285877 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.341789637 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.346227945 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.369659215 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.594713095 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.35016242 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.34315904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.344748955 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.012612347 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.77253955 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.357066219 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.351596978 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.419136424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.356518932 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.344224441 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.378816015 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.348129952 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.342903004 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.347297715 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.020924681 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.347607415 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.363789844 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.673592144 seconds)
  done (took 195.286398233 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.345721416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.217486537 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.328803566 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.360657271 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.67296832 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.544828952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.484243773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.816627115 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.366045553 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.368670101 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.512805549 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.342936961 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.574189831 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.32086449 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.353469713 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.437259356 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.567647823 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.623278432 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.361146431 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.610888091 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.372799105 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.474212093 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.387029697 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.508484597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.354557038 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.422282635 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.363170172 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.370884759 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.537239271 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.498901964 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.39263097 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.351970756 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.001749224 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.202308637 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.362518639 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.358951914 seconds)
  done (took 154.455123141 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.913799053 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.345356395 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.345863864 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346876821 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.381832628 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.344783011 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967504354 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.934939796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.895201229 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.771292472 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.411210372 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611092594 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.344965155 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.443254475 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.359699524 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.346641905 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362123143 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.373092092 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348487557 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.347829351 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.936146635 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.358537763 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.396598748 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.354282185 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.348770598 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38197944 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.74331007 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.346012249 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382606304 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.678176479 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.398994005 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.34719226 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.731355233 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.104920374 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.45995425 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.3476981 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383768145 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.348285095 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.626611101 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.347722417 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.348404858 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.352596408 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008490029 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.348955909 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.970004088 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.349642838 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.363014594 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.348660462 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.349425679 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.78745722 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.000896492 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.350505382 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.348416215 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.352112586 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.349108716 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.349656736 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.386057932 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.050914772 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.455005069 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.348766983 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.352985671 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383933645 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.349391961 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.791900559 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.351645196 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.477995975 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.404344808 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.458929107 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943748293 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348573375 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.349460501 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.349016064 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.448705797 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47181639 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.349558756 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.35137687 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.349143952 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.351664229 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.460298 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.348423268 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.798234983 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356452879 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.352441086 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.415063475 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.448024616 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.349199838 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.757968406 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.351844435 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.35140939 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.175668257 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.446597318 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.349347883 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.349336966 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.352342815 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351114164 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.797097644 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.349862557 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.941827386 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.614541663 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.353205938 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.170930098 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.354273481 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.81282672 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.935334011 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.036354872 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.353303482 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.463045269 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.353677098 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.353551453 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.350491702 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.384441966 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.354498078 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.413858625 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.348726922 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.753296062 seconds)
  done (took 365.20615928 seconds)
done (took 718.142514472 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.054061719 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.049337166 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.156231511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.037702282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.992353339 seconds)
  done (took 11.577041549 seconds)
done (took 12.865017632 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562223392 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559090093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419408724 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55883493 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383240751 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58031913 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.540076985 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.372399699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.464536673 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.443444139 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.464539477 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.411007729 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.38236589 seconds)
  done (took 20.429004942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.685309822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.682116889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419607394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.708083301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389672434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.690033008 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.554342204 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.57016606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.562401131 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.365824016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366513923 seconds)
  done (took 18.28426029 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.694670068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.696435263 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418893296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.696089681 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.391784502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.693461759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.558181851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.573833498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.550178858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.365804902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.367830095 seconds)
  done (took 18.296777453 seconds)
done (took 58.299268533 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.36125585 seconds)
  done (took 2.650535655 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.396492095 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.56984749 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.379448463 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.363786096 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.363053287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.364415275 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.364867495 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.362053408 seconds)
  done (took 12.454697975 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.359177325 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.362525297 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.360308971 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.362801462 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.363097594 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.360197588 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.363064585 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.362523233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.360475068 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.36276153 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.362933849 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.360267991 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.360868801 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.360086233 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.362966924 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.362134154 seconds)
  done (took 23.078004644 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.363098448 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.359803434 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.361004887 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.362002856 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.360029252 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.361412033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.362347853 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.361262179 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.362220429 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.361075246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.362256305 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.362496604 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.362447726 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.361224177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.361064688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.361777844 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.360661597 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.359333497 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.36591909 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.3618042 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.362156203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.36185861 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.362382366 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.361658779 seconds)
  done (took 33.975749781 seconds)
done (took 73.448867203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.579903744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.221488535 seconds)
  done (took 10.09282635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.364456494 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.364477801 seconds)
  done (took 4.024859235 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.364168186 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.365351487 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.364165036 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.364294864 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.364097002 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.364734012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.365448778 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.364526684 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.365367394 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.364882924 seconds)
  done (took 14.940792073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.365548776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.365295637 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.363291811 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.366102719 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.365621347 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.363937578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.364665966 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.366387676 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.365550299 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.363394269 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.366380216 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.363222237 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.365678469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.364030363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.366727287 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.363618972 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.36402519 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.363309781 seconds)
  done (took 25.859912377 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.366482564 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.365433684 seconds)
  done (took 4.025430201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.364339898 seconds)
    (2/7) benchmarking "second"...
    done (took 1.363113753 seconds)
    (3/7) benchmarking "month"...
    done (took 1.364485279 seconds)
    (4/7) benchmarking "year"...
    done (took 1.363496025 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.362863023 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.363581563 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.363811535 seconds)
  done (took 10.840195019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.367790825 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.552510524 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.639164309 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.06930492 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.368228194 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.370400209 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.293307588 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.369352141 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.372305696 seconds)
  done (took 15.697427245 seconds)
done (took 86.773428702 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.396740448 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.354984382 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.409908729 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.364317539 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.371539197 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.702569726 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.376011154 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.622916354 seconds)
done (took 39.896055154 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.37584135 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.186379163 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.181104349 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.35723899 seconds)
  done (took 12.02022996 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.35872232 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.3479259 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.361025606 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.489491481 seconds)
  done (took 18.854447323 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.055112925 seconds)
    (2/2) benchmarking "read"...
    done (took 1.693179716 seconds)
  done (took 5.045929026 seconds)
done (took 43.592391092 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.368311528 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.368604462 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.365857741 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.368054216 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.367990526 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.365699153 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.368610432 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.367203798 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.365862721 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.368278267 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.368410521 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.367888829 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.370158393 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369775111 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365190395 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365549599 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368640081 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.367914384 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365683248 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.365596234 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.367171389 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368261141 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.366188988 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.367436712 seconds)
  done (took 34.115237218 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.368687441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.367246815 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.369615347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.3699588 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.366443799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.369917589 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.368989972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.36682837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.370441061 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.368353897 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366759008 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.366584776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.369866147 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.366696456 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369441579 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.367006525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.369035001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367785326 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370116068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.365959143 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.369777757 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366767182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.367427321 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369991759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.367183993 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367313035 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.369543251 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.367796448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.369728735 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.367031812 seconds)
  done (took 42.345827166 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.376197399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.380274841 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.371904309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.370442583 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.371240083 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.371223716 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.370329376 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.371295343 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.371558801 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.372158145 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.370516617 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.37160386 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.371540356 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.371834909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.372927713 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.371501042 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.37237589 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.372657283 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.371940645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.374232577 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.370804477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.372220527 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.372088409 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.37102139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.372146434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.372057772 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.371551554 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.371499033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.372636769 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.370851989 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.372822329 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.372326869 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.372664439 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.372533596 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.372076999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.373353217 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.377688485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.380891441 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.371476528 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.372134432 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.372389078 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.372363724 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.372254687 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.372878798 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.372999202 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.373195624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.373415998 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.372347613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.372749182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.37203843 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.372742825 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.372079375 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.373047188 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.372619122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.373662492 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.372894259 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.372990933 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.373600686 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.372983903 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.374433922 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.372943978 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.374339374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.373787286 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.372853806 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.375110497 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.373806363 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.373578712 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.374783296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.374174425 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.376905386 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.374399248 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.373998255 seconds)
  done (took 100.153303883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.375133355 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371663949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.372280606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.372041293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372096116 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.374585041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.372476912 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374684244 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371269764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.374300388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374318752 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.372299258 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371829657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.376775575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374580108 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.371549375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37539198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371477303 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.375716252 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.375663161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37509727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.37304457 seconds)
  done (took 31.520740172 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376001879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.375498096 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.372706573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.376247875 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.372549462 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375357117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376081868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.375825229 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376232454 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373943858 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372642847 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376300209 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37313257 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373746856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37293428 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.373563658 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.376564474 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.373785951 seconds)
  done (took 26.047700205 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.37361281 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.37382384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.376557869 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.373660183 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.374101953 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.377123459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374246863 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.378436298 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.37730964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.375649303 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.378305016 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376972561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.376872734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375475727 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37687154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37633636 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.376976194 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374617715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380301832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375033237 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.376632663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377600125 seconds)
  done (took 31.582904624 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.379515511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.37897864 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37654375 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.375133538 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375829293 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.378395631 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.378295823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.374879839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.379827935 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.380737041 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376260432 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.379245171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.375777976 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.378047287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.376312498 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375378733 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377984946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378138285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380071463 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.377145654 seconds)
  done (took 28.858277803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.380685357 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380657123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.380307956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380208834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381227671 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.380585793 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380934256 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.380491661 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381356512 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383163867 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.382401686 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381812135 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382003697 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.381411398 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380922906 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381953712 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38190058 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380720937 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382056791 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381506239 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38242922 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.38134012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382680467 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.381951236 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.38195778 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381244222 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382009297 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.38063633 seconds)
  done (took 39.98853722 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381473662 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.38091961 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.378915959 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.378388263 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.378686318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.378677483 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.378055864 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.379194901 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.380649074 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378727115 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.381719639 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.382177997 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.381237191 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.38031747 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.381496457 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.38166269 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380989079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.379329347 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378382184 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378398693 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.382281202 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381870652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.381928915 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.379348134 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379666269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.382299914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.38100225 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.379597859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382842427 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380092061 seconds)
  done (took 42.719964557 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.401357086 seconds)
    (2/2) benchmarking "in"...
    done (took 1.401680551 seconds)
  done (took 4.113498746 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.380852416 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383463389 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.382921238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.379306958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.381106503 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.382309869 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.383774367 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381203814 seconds)
  done (took 12.366513091 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.385136829 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.382068456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.383509636 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.381741712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.383426194 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.385775927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.39333011 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.398610019 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.386271371 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.384751367 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.391251506 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.394785613 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.38975155 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3852696 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.386276311 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386510467 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.384448625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.384610822 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.383959691 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.385578221 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384183486 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38896038 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387466827 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.381390813 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.387742225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.399487481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.39206892 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.386219426 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386392837 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.392076081 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.385830876 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.381950904 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.38557461 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.386816497 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.385805979 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.387147921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.398259418 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.410025993 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.393590757 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385943271 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384793812 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.382170453 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.389873406 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.389952514 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.387654276 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.385742281 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.385614532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.384340832 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.387174533 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.390879584 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.392256444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385616951 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.382623428 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.394166783 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.390048479 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395014082 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.404728423 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.390391944 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.400190305 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.399775532 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.402838215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.397375309 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.389409944 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.387361191 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398382319 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.416504404 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39814625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.401668985 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.384993472 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.38763492 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.397874424 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.403896693 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.401297586 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.387805805 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388873655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.388487791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.389108547 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388628251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39787636 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.409319228 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.3861283 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387319149 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400332957 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414678744 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.388764493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.388867614 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.387772656 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.387408408 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.392255105 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402021592 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.405476089 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.388455908 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.39023503 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.389244371 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.394363489 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.389120398 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.388704492 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390512377 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.387277493 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.388676225 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389229349 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393545441 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.40134989 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388740557 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390116104 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.399569225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.389822719 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390558299 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.399274179 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.39064769 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389214595 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.39131392 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.399116602 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.387651228 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.394987929 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.402728591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.38962345 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.393619166 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.389606921 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.389983569 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.400774867 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.421099208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.390458724 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.391040446 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.398165218 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.404236468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.390426624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.395846706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.390304692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.387716541 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.388774899 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.393912897 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.391820435 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.392770782 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388961349 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.393664982 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.388878358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.390747127 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.392640923 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.394670867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.395815193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.394481743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.395611035 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.396344037 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.391885485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.395784322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.402707585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.394581108 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.393956978 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.3935727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.390385401 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392390721 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.396214693 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.392115636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.394815047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391469904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.394057969 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.392111091 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394990536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.392122887 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392803547 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.393936948 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.3983549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.393977083 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.399416607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.39336596 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.389910788 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.393253505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.393630471 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.395295676 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.394439828 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.393878629 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.396777845 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.402954592 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.394195485 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.394438502 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.399036291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393431652 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394842575 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394583859 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.398732016 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.405672573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.393121369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.404774404 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.393931113 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394810078 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.393509826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.395366934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.394649674 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394251571 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.398475853 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.403644806 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.410314208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407287057 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.396400669 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.398865425 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.397135317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39888997 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.401769076 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.395744026 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.394029876 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394504364 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396016951 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395125241 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.39833225 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.39616216 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.395777966 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.396070377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.39500873 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.395426392 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397037323 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.396748923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.398238299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.393284111 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.395342833 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393733144 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.394588711 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.392461018 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.394704295 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.39747067 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.396940445 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.397281506 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.407489949 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.393964347 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.398623811 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.398481115 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.39796815 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.395842875 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.397486916 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399349922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.397874511 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405965109 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.416309371 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.399306851 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404987976 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.417759059 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.397957482 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.400215625 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.397105958 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.394026911 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.400989046 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.405459346 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.395715569 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.397422378 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.397555602 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.398159776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397241675 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.406578731 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.395290486 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.397722043 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.398671686 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.401313431 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.396252538 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.398847557 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.400561373 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.399819017 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.400393757 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.398716172 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.397979524 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.39856618 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.396605228 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.398233621 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.397507028 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.404915516 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.407382409 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.404807187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.399595222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.403470309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.400370353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.403617266 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.401870541 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.399873694 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.399115927 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.416486763 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.409801564 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.407971894 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.403629268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.39889029 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.406302094 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.401051709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.406024051 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.399946671 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.399695672 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.401569521 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.401221285 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.39569657 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402020484 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.399165064 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400951887 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.402915052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.402997731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.399779943 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.398744731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.399361529 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.399635512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.401215461 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.401061811 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.399454333 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.405740766 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403098852 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.400533692 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.400299361 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.408992996 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.4194215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.402828919 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.401270893 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.401403647 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.400653646 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.402987006 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.400609519 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.404530659 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.409639044 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.405710319 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.414977195 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.404025794 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.41336671 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.398482255 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.405803752 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.409617936 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.397530639 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.399548096 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.402910927 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.400294954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.411783135 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.420461976 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.403697361 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.404764095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.402182121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.400945926 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.401112615 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.401021107 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.400421394 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.400468307 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.413233081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.426650282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.407212534 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404837217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.399139339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.401172061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.401367633 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.401800219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408565299 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.401816263 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.403507365 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.401377634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.403879656 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.401466318 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.402396955 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.401894582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.39947759 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.402771945 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.412254208 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.423527923 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406720074 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.402972415 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.415994283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.401307663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.412846903 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.423440675 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.405236428 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.403762334 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.403854477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.406473713 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.402233426 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.406807616 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.401265771 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.405916364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.406639726 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.402852083 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.408007681 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.404304724 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.402266783 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.403785493 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416489618 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.431389878 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.405170245 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.409047534 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.400088955 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.405701998 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.407939482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.403864889 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.404020658 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.407618899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.419200064 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.413463935 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.406393082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.403451526 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40657297 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.404357417 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.404472795 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.405543811 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.40429716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.404085983 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.40796029 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.403338189 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.411576469 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.404262523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.405421955 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.408690109 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.407304098 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.418224691 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.405108613 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.408491896 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.40503948 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.404813919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.406016075 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.408136628 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.405822481 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407802884 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.405560375 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.408300807 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.415370265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.414900289 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.40953431 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.40586161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.406372951 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.408691761 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.410062804 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.405585192 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.407504955 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406245063 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.408523384 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.405987694 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.408863157 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.405449278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.40640154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.408816017 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.407224641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41187779 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.416923112 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40914517 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.403056256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.406663373 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.40563745 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.406229068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.40846443 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.419356217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412378727 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.421040943 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.418653062 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.41037874 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.410097324 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.411982172 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.418685368 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.408202791 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.41056788 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.407535047 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.412346689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.409832094 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.413357843 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406702503 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.418627158 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.409714375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.408540371 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.420864344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.434156864 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.407315197 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.411321372 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.41475016 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.409425465 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.40569713 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.406706368 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.408807457 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.41941834 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.429358335 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407826974 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.41108306 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.407699809 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.410949528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413707758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.409458528 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.411000947 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.405319729 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.409266164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.408797174 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407568539 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.40640236 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.409208174 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.410796254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.414140695 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.419612948 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.406546601 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411013588 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.411991826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.411229881 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.408499189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.409770409 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.405603252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.406709027 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.411967221 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.408509179 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.411671038 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.413117024 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.410493578 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.411904096 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.412133703 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410011758 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415959903 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.424959814 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.420776585 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.406964996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.410421612 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.412080035 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.415224654 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409677327 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.411419257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.413183974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.413462848 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.40994118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.410444739 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.4110745 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.414517071 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.431236925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.435676655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.412235539 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.412984279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.419489353 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.411424292 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.407732974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.410266751 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.415675325 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.415851338 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.421125394 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.411398638 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.420096465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.431136431 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.414312571 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.415459721 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.414934016 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.422585264 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.416260713 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.411483469 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.412014836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.418444082 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.43537762 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.411533517 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.423408733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.448642596 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.433061189 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.415092267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.41186176 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.411866901 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.41078068 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.416166283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.412998478 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.411124826 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.411882973 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.412848613 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.415271332 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.419146696 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.414422831 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.411644166 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.412752633 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.413492573 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.41665575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.410285876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.412298085 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.411852779 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.412483297 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.411839721 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.4141931 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.414339051 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.430491512 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.427868763 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.414030289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.413925797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.411036905 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.420461489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.418056514 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.426957652 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.423215152 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.413389568 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.413830716 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.415853386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.414511409 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.411667338 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.416657684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.414868104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.414612316 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.411351534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.429810458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.424488707 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.42149464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.416213752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.413479203 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.413812531 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.418437769 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.414730759 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.4145052 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.4182018 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.416833093 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41891819 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.414218701 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.414776096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.418710087 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.424520004 seconds)
  done (took 837.595997848 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.412986711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412138683 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411255737 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412469315 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.412136002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.412943613 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.412118403 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.412737474 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.411947501 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.412243702 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.412129061 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.412479935 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.412438303 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.412596488 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.412908273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.413792824 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.41418763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.41278693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.412420585 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.412727783 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.413517441 seconds)
  done (took 31.006978921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.416120381 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.413554814 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413439653 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.416727696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.412445169 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.415458881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.413542336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.41693838 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.415728962 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413323754 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416344529 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414637748 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.41314296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.412659645 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414397771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.417747005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416532123 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.414018737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.416615285 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.414057665 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.417356335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.41500376 seconds)
  done (took 32.473732332 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.416814799 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.417223939 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.418814622 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.413976142 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.417733813 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.414105329 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.417799061 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.418052386 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.418336243 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.419380766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.418601454 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.420370655 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.428308881 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.425697155 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.421901958 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.418031713 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.562743638 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.419339441 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.418878137 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.417642486 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.416596032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.425243977 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.416282094 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.416049511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.417810377 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.418194881 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.41883319 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.418139557 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.418645042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.421477329 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.423221471 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.418333969 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.419907526 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.421853462 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.420339128 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.421557041 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.424148671 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.418827713 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.416570827 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.418471482 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.430958897 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.44382904 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.417873671 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.429573693 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.419654899 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.41918242 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.42371434 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.427918121 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.416676105 seconds)
  done (took 71.089834634 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.420535103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.420065082 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.417249601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.419598392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.419783585 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.42040519 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.419458573 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.418491441 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.418091531 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.41749231 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.420301585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.41823379 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.418326096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.419750494 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.420090624 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.417439332 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.417794955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.41809647 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.419366467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.418685616 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.419316008 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.421797045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.421756146 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.419264168 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.421057603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.419908161 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.419733042 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.420165775 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.420541319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.419602804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.422328244 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.420683618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.421043685 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.421102638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.418678004 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.421936145 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.42272877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.418252827 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.42214761 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.419119405 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.422655692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.421205705 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.422930709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.422270437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.420345485 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.41877407 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.41920542 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.420171296 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.420369439 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.422323114 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.423041301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.419483826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.422360163 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.419538104 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.421788581 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.421613536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.420233377 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.417979843 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.42227599 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.420196078 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.41939775 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.421288361 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.419358484 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.422292254 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.423226907 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.418480898 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.419565744 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.422964161 seconds)
  done (took 97.925160024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.423045222 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.422596955 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.422705272 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.422859198 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.424331799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.423073099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422760921 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.423762261 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.422057778 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.423790039 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.423422165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424798653 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.423217571 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.423210622 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.42328656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.423590154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424705098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.42353364 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.424712115 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.422870475 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.423271863 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.424178323 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.424250909 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.42438065 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.424561322 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.423679238 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.423960051 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.425666221 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423362145 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.42449641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.424504733 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.423123488 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.423942386 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.424898526 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.424709914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.425841067 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.42376995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424188885 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.424827674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.424659947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.425351571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425787365 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.425074935 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.424011931 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.424629915 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.426038493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.426958524 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.426043306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425765322 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.425825112 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.42512019 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.424960407 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.425240884 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.425481573 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.425919077 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.425161023 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.426507918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.425581247 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426965097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.42518795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.427291887 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.426957772 seconds)
  done (took 89.67293794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.42560488 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.425633023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.423729189 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.423247172 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.426081183 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.424323706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.425825127 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.425556558 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.426218022 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.427104364 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.424942417 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.424258813 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.424047761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426483565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.424092702 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424217847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.424801644 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.423981174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.425902275 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.424794344 seconds)
  done (took 29.855519697 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.425547817 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.427118515 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.425126197 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.425910451 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.426480097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.425472539 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.427351176 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427501725 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425533459 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426756859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.428451137 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428467676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425822424 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.425059032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.427850102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.427032384 seconds)
  done (took 24.180335968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.4261461 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.428211032 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.428256016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.428526496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.426421752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.427236286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.429439824 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.42574724 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.426988804 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.428681682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.428456651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.428433095 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.428150145 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.428279385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.425902925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.429567137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.426089892 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.426090943 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.431408724 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.428493607 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.426763155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.426339985 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.42934488 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.428999259 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.426298117 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.427071681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.426766983 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.426475045 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.426741073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.430304427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.427998554 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.427687617 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.427337744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.427618317 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.429554202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.429608243 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.430473324 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.430725633 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.429401304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.429798254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.431495573 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.427220492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.430270852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.430106664 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.426923003 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.429561584 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.426665259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.428735208 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.427049591 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.427503975 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.430346217 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.430716174 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.431091259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.431948049 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.43051471 seconds)
  done (took 79.919458699 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.432037836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.432288967 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.429235288 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.431053769 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.431798167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.428733775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.431301693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.427970693 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.429793505 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.432746167 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.430795446 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.43258545 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.430358287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.431882108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.430574301 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.432435713 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.429558981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.430326888 seconds)
  done (took 27.113949255 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.430803293 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.431015367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.43290433 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.430147522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.429689772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.432046654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.429935605 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.431481149 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432342863 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.429711624 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429948962 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.433071089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432422393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.433038529 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.431836019 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.429624961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.433486984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.432981877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.429638781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.429502642 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.433433652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433031812 seconds)
  done (took 32.851943528 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.433159246 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.433596002 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.453699204 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.482956754 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.468446761 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.433833465 seconds)
  done (took 10.065827501 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433462317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432842387 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.431831557 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433957383 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434329395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431938176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431214177 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431156798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434444429 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433498595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431598321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434624301 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435499533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431538958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434452822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434423762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431467555 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431651473 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432672151 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434657381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432475015 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434637689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431646757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431407701 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433769912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43280279 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435307886 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432784839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432091709 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435137819 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43596533 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433694996 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435715766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433996509 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436903575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43751103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431939225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435976864 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435338594 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433694031 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.436376764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435582866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436036084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433975555 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437011306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433153882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43374827 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433260957 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432360936 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436046147 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436698753 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434244805 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435945766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437266022 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436969126 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436803416 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433697126 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432672405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436829245 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435113153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433985306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436723518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435044711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435490031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436182582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433862409 seconds)
  done (took 96.021563435 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434256179 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.434513586 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434697032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435226612 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433747201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434595988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435048875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435304928 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434452958 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434805296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438005446 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435952976 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435343969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435486482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434871046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434787426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435389683 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435028721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435459357 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438785191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435999336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434634444 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435300083 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43648989 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435820531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43885939 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436149885 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437500498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434940071 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436813969 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43722151 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435642588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435602033 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.437205248 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436622943 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43582765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437021677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436449136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437145112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438699307 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435843083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.439922392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436021398 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43689335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437892859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436614073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436778291 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436721021 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437245827 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437106994 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437188814 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437014031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437550335 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436933456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437024998 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437106874 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437220139 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437400828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437279493 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44050341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437182659 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438295777 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440789802 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437054257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437155914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437252843 seconds)
  done (took 96.175497792 seconds)
done (took 1951.057557929 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.428939803 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.502430702 seconds)
  done (took 14.296771196 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.604708958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.557247177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.440913689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.438522151 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.438867783 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.453947184 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.435137882 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.440039252 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.441698936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.440455658 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.441773944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.630101897 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.473472332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.439048105 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.440968855 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.534747492 seconds)
  done (took 45.026220926 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.445111483 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.445233673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.485998026 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.445639061 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.444363118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491892226 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.522807729 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.445251296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.655167611 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.499718847 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.926257354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.445743505 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.445506118 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.787880347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.484956554 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492309534 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.762565813 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.92615115 seconds)
  done (took 29.520435772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.98091911 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.452521723 seconds)
  done (took 9.803884954 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.457328055 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.459629345 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.484993449 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.472302743 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.480456021 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.481298845 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.493182245 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.511193876 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.462713719 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.45299787 seconds)
  done (took 66.131044267 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.468235686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.446388962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.445825807 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.443474671 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.435836592 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.436832816 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.444312664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.454233972 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.701573823 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.594200989 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.470646805 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.451452491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.44386249 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.44678366 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.442409664 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.483793935 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.597124501 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.440766634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.439507449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.449764225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.445262406 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.54940664 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.49309212 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.442263981 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.59393344 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.728512594 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.447967394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.45162391 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.605203772 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.441697789 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.446128208 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.446181835 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.446503841 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.048476827 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.029393842 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.455411279 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.472782349 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.454124565 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.442377051 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.580843061 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.44715661 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.452072695 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.437871384 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.995012685 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.611130631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.576332703 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.982056156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.44804472 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.447493182 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.51587917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.447121242 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.447936584 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.480100686 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.276858599 seconds)
  done (took 119.497216601 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.486633493 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.930576645 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613434067 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.464596683 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014495889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953200008 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.438759177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.770057649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.445980652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970663054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.763059364 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857110846 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.439153061 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.438869453 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.44084778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.439178733 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.743062824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.8307554 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.442005593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.441994663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.496247375 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037188124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.711129543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.518076407 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.48348418 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.973990397 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.708269668 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.8597335 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.443465451 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.439431674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809562206 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.440976694 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.441218746 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.439094485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.75463011 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.867280562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840616632 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.440240395 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.4443744 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.444339497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.477460132 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970620323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.85661142 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.725097882 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.856708678 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994443935 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.441184745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.442770055 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.448095401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.65448244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.697918142 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029163456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.708290906 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.459184729 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.727625825 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.441276239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.459240318 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003958028 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.813621731 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.866796827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.441639437 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.442596651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.442080941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0577879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.442881348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845338847 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831679512 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.44232251 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.855413673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843897871 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.812191731 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003562266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.489163274 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.461013224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.501275635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019771822 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.81668336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979497999 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.494080783 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.44222145 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834490194 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.442088664 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.767111134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.062829157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993474879 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.500861307 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.465989247 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.443547879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.978833075 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978032957 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.694927876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.85983912 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.769745328 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.478721088 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.443661805 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.444775419 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.466023814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.724714159 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.461732254 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.811910107 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000031382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.21497827 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.495313092 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070422688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.727965229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.46130596 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.448558728 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.446364633 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.669846088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.528458547 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.471728089 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.445177202 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988975847 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.318789407 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751217308 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.178221508 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.818878342 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.446590322 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006811099 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.44627914 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993391115 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.484691818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053748663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.730472664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.510080106 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.679423848 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.862800485 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.464076552 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.021015811 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051966824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.716811381 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018752168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.255687683 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.445167179 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02912437 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.447508677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.460923133 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.635266141 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.469957806 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.749819181 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.469357103 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02534171 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.488983303 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.764673733 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.757391617 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.015753813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.508446887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817571713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.501948404 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600812076 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.470764675 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.479469991 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.65033359 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701028485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.447592764 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.000640816 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.450724658 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.615416389 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053994183 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.487406935 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808911063 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.446399762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.44820038 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831332757 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.49055895 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.10949525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.448912125 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.770686268 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.452448828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.901625125 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.448787655 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.049375372 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.676273291 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.473861575 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.449952468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.253176659 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.449992927 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.596267283 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.627834537 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.780215739 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.454772875 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957072316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.446436295 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.729687577 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.464753353 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.450054508 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.805478395 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.481428768 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.449589688 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.506260803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.451271717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.449892696 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969345084 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.494345258 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.171564303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.608405765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007405216 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.759627474 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.00257864 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.514693274 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.475918466 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004400896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.471925564 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.80286617 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.449329589 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.493941001 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97991301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.448758956 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01224609 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021102813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.468954021 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793512985 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.449030138 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.498838829 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.449299259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.738419691 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850384385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.449662138 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.450215212 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.71668249 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.737844912 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.676708073 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.473392987 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.457383743 seconds)
  done (took 881.64868224 seconds)
done (took 1167.291732237 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.450997103 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.450506759 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.438154954 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.449902797 seconds)
  done (took 27.173070734 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.457020264 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.45610386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.456786033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.455362687 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.456245192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.45694438 seconds)
  done (took 10.123378025 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.696626996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.450098737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.450467866 seconds)
  done (took 19.980209575 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.718731831 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.857775873 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.896641659 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.946125549 seconds)
  done (took 11.804521565 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.456117372 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.458238753 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.457356112 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.457060627 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.458598524 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.466517904 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.457889774 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.457912683 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.460214457 seconds)
  done (took 14.511514101 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.861234287 seconds)
done (took 90.837104032 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.560877898 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.089684837 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.452730807 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.497077944 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.806977452 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.698064466 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.43687885 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.916788378 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.745740843 seconds)
    (10/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.493257722 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.071478608 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.602856822 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.506925132 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.223259887 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.894307139 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.4930854 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.407823797 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.909011808 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.034809004 seconds)
    (20/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.88072926 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.471215947 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.164409032 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.437847167 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.535975619 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.452968451 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.99026877 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.034645421 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.986181644 seconds)
    (29/309) benchmarking ("sort", Int8, false)...
    done (took 4.562319983 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.802632491 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.564439805 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.551652392 seconds)
    (33/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.90670736 seconds)
    (34/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.225475465 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.471242543 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.486191921 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.41851289 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.091135567 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.318243094 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.557972811 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.538142291 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.465259895 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.306570548 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.480458584 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.154559245 seconds)
    (46/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.454482592 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.396801665 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.620346552 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.896075237 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.473673864 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.561521001 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.479122338 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.450826717 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.969683095 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.928823331 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.562007076 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.733774044 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.117338964 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.771730354 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.540531758 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.23502827 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.55225881 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.52749562 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.363296051 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.526504221 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.442724393 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.224260481 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.554399521 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.455976177 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.951017617 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.351915851 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.149285887 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.834167565 seconds)
    (74/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.478763677 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.0312365 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.608507476 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.605623419 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.573988001 seconds)
    (79/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.370446771 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.969320031 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.88384578 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.201576068 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.310042239 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.514310826 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.037225035 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.015182268 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.692725701 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.602437736 seconds)
    (89/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.543761338 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.550882387 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.755821503 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.218591087 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.334183182 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.45441134 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.146228909 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.463324214 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.455738253 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.494629473 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.993074124 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.519536789 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.505874518 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.659248083 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.046302005 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.236838787 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.447352107 seconds)
    (106/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.521755198 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.499142606 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.464320944 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.584544384 seconds)
    (110/309) benchmarking ("sort", BigInt, false)...
    done (took 6.473205285 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.653491086 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.920071759 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.441241641 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.582089725 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.308861616 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.471687489 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.036133233 seconds)
    (118/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.441459041 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.720346186 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.474100662 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.111497372 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.440623654 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.230678333 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.457868889 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.821685839 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.540528318 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.466271453 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.26686814 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.457360856 seconds)
    (130/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.399975691 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.829670294 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.543982981 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.393660353 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.980675468 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.44186585 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.982306112 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.909301721 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.498708352 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.976334945 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.745746557 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.869419915 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.638342189 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.940502113 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.626715323 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.441291641 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.332241798 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.282050832 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.717457948 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.561024083 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.816817257 seconds)
    (151/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.559801462 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.500194955 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.588996347 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.323591044 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.339893068 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.320291095 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.482296324 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.483077105 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.52145165 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.46118437 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.511620805 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.488635535 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.221655828 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.482860041 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.578066459 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.542967857 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.480041966 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.394335292 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.892112439 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.021097923 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.15409522 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.331304767 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.607247691 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.742880902 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.604444254 seconds)
    (176/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.446289974 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.471124525 seconds)
    (178/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.707245274 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.543048394 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.973866958 seconds)
    (181/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.664334869 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.482506022 seconds)
    (183/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.484787913 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.23353441 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.484317232 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.458651586 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.443631288 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.892301327 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.495606019 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.760776974 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.46706574 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.168320196 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.485371681 seconds)
    (194/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.461579221 seconds)
    (195/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.178919688 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.460774755 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.483593665 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.227765939 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.503209775 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.108919455 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.230176588 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.46714394 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.573710218 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.0024478 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.45218655 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.861798548 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.479914819 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.52935136 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.518004207 seconds)
    (210/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.659436031 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.503266606 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.209932726 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.48595135 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.861633215 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.370861277 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.581813482 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.4466959 seconds)
    (218/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.43470907 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.4469509 seconds)
    (220/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.774404184 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.470531822 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.199862558 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.661975883 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.461331482 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155499518 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.160502215 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.477838368 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.457336776 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.464650151 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.547049154 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.772862408 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.484013937 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.978892432 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.382912054 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 5.865825163 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.30924908 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.517436522 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.488821208 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.464208111 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.507678486 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.476106544 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.255690411 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.41252999 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.482356542 seconds)
    (245/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.476024831 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.464509533 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.259379987 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.669875021 seconds)
    (249/309) benchmarking ("sort", Float32, false)...
    done (took 5.511040582 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.535644727 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.247079162 seconds)
    (252/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.551180387 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.525051574 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.448451217 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.913160982 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.941376135 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.480495437 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.959515937 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.896490158 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.713935107 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.586193227 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.173150263 seconds)
    (263/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.463386873 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.371792683 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.509769364 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.02699298 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.313062113 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.875179261 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.190033076 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.853118524 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.633304585 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.46552378 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.10633297 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.563780977 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.466011881 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.871572758 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.117143318 seconds)
    (278/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.188892944 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.486876074 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.467129216 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.46800567 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.47512235 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.547678831 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.551519334 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.549540216 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.539844527 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.584226734 seconds)
    (288/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.49235978 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.023219984 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.653489983 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.467200532 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.534205022 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.438133644 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.532222493 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.469501753 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.511272518 seconds)
    (297/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.676438319 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.585702028 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.486248332 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.17146515 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.760407968 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.504511881 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.02203015 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.455535573 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.802243271 seconds)
    (306/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.509837465 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.473869755 seconds)
    (308/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.722724988 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.515209543 seconds)
  done (took 991.18147783 seconds)
done (took 992.566613876 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.499969688 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.492917181 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.478569095 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.50016251 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.590947661 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.507408137 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.487803497 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.480379206 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.524718554 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.526636277 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.478485887 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.506403145 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.481018637 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.477493504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.479039612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.49325229 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.702506337 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.479708279 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.496038811 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.487589053 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.496075568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.477965728 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.52879776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.506997087 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.481685787 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.481787052 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.480980719 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.49972644 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.590806112 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.4827128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.48118133 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.490695922 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.702504752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.477886906 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.472888076 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.497932061 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.491201874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.489911662 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.484100374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.511104986 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.197430763 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.478431785 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.479717563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.481226993 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.481891301 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.485073314 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.481449608 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.486591576 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493772509 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493045598 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.213351103 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.495601055 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.483542911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.481509847 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.492258056 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.48157248 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.485030895 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496671598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.501561156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.499338521 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.700663001 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.484955323 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.483670537 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.497812822 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.489381493 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.119671129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.475606628 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.487876174 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.093306725 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.48610684 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.11632793 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.490499917 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.482886018 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.494619802 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.512982855 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.710896596 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.476861914 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.482279215 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.489967517 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.481798829 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.494086988 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.495327516 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.48799491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.483049666 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.495680681 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.512079704 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.493206237 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.482347482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.491713243 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.501007006 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.491404926 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.494773203 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.488030976 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.478968408 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.493545598 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.485770076 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.485528703 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.484397289 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.488800874 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.494756664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.103114218 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.498762228 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.479519874 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.481415665 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.482950565 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.496646423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.09789462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.48345213 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.506698121 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.532316707 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.485293042 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.704832576 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.487850262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500149443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.494479493 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.488479088 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.480895504 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.706762693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.090627425 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.494473049 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.486174003 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.482145159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.499446904 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.487268566 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.482706671 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.666865054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.485329065 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.499277877 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.605502179 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.496651309 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.515516316 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.484509646 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.48721908 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.51788067 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.501377998 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.518024181 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.49063193 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.502963755 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.502586008 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.482634153 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.496754906 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.496126173 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.488343381 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.491534313 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.48129997 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.514324589 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.497882791 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.499296437 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.506414344 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.607350173 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.483736284 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.631421901 seconds)
done (took 251.261692979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.546476148 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.482858236 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.58128739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.485682073 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.589239617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.584509855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.481683168 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.48133615 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.48143425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.861414867 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.481261455 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.481305841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.487955292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.481898087 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.566415778 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.483702806 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.48099275 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.824185394 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.485665393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.555991655 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.484045396 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.482045013 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.48630334 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.866062006 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.485060457 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.484202896 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.557232776 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.484789854 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.83286276 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.482880121 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.483603745 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.830131146 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.575660078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.502243134 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.49534814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.493575814 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.591233905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.503622993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.568365709 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.565850864 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.583156937 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.525026153 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.48700851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.485580255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.487747103 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.486459494 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.483612148 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.512657056 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.480268317 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.484317531 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.827611912 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.496589819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.484106437 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.48316225 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.484246708 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.515089925 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.482939841 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.487359061 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.578612633 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.487300542 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.549376861 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.917023289 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.863440495 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.487643957 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.484201319 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.485332527 seconds)
  done (took 158.702301608 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.55509733 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.562134025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.614276726 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.490463501 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.540983972 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.621326302 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.489517564 seconds)
  done (took 12.287603488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.494776383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.488404986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.538258776 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.539233772 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.48822945 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.64000996 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487389288 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.501619211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.485649865 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.54415019 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487704939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.489855475 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.494205674 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.489261474 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.539489021 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.501694787 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.6056526 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.491450901 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.490475795 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.647992601 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485795432 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.494432781 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.542339002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.502393609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489076471 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.49465175 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.075936018 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.489263049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.486503301 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.489288721 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48719265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.532666201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.490668065 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.488054179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.486914591 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.606920043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.491136228 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.486424679 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.49023166 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.483431979 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.490671461 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.489932641 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.490626881 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.487257928 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.488802002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.513837839 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.490294888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.491785674 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.491032858 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.487991858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.543382836 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.492109951 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.489389144 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.490166542 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.548662657 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.496939624 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491249634 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.488617725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.490689603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.488004064 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.649537715 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.539842705 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.490077111 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.540123605 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489567209 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.491466613 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.488946212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.49004893 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.547825299 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.492229211 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.540726516 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.488671129 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.648830547 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.518177067 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491161227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.495988729 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.49467466 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49257498 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.487275642 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.499214994 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.487088701 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.493762587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.499602825 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.490647616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48826321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.598976387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.601790007 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.489097764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.506290495 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.500386964 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.489411757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.548131848 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.49303478 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.491557545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.546614934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.609000647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.54886059 seconds)
  done (took 168.657659594 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.498980502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.502535051 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.495948089 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.508914833 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.495772997 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.494273271 seconds)
  done (took 10.414447868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.495417295 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.49439382 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.493475032 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.49332418 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.491477363 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.49283123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.493862719 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.49642951 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.49906227 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.493975971 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.490848513 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.50543127 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.492799935 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.49397973 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.495153391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.492824249 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.492738513 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.493064985 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.494193256 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494168387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.598446108 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.494555231 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.495487214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.497659556 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.499333219 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.495434071 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.503252809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.49441995 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.4949455 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.503705192 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.496756543 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.492745779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.497214586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.502321118 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.497357848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.497783216 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.499231457 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.50406126 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.986242436 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.494099713 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.506301073 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.497386563 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.494596184 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.506910193 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.499335483 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.503652498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.511949253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.504636522 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.495761438 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.506136037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.505921383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.497079892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.493942954 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.506989705 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.501364827 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.502253359 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.51221245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.49640013 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.496011662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.500532272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.498491046 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.494570778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.500613678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.500328647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.493002431 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.50643547 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.498713448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.500170711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.494905816 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.498509509 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.506381249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.493681883 seconds)
  done (took 110.879982186 seconds)
done (took 462.35082787 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.85296631 seconds)
  done (took 8.273426147 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.814642454 seconds)
  done (took 8.23675364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.392533243 seconds)
  done (took 25.82001953 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.577467743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.576493221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.505919029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.493959834 seconds)
  done (took 27.577040318 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.689881207 seconds)
  done (took 8.111731734 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.488931577 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.493614611 seconds)
  done (took 14.403319608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.040754586 seconds)
  done (took 8.460146865 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.107439235 seconds)
  done (took 8.532627316 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.513136516 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.489734392 seconds)
  done (took 14.700308547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.494489431 seconds)
  done (took 7.917408139 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.391883968 seconds)
  done (took 9.81175373 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.498094194 seconds)
  done (took 7.922027229 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.565106844 seconds)
  done (took 7.985084791 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.701631927 seconds)
  done (took 11.123851396 seconds)
done (took 170.29765685 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.490872657 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.492632887 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.492151694 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.491538969 seconds)
  done (took 27.388216108 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.531370091 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.53042784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.532783114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.540605216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.535628999 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.529855849 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.522447305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.523327414 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.541685522 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.533927372 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.532659558 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.533251857 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.529951534 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.523928901 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.533310607 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.533437113 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.541919166 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.532303417 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.524020938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.535448428 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.496343234 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.542391136 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.534271967 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.499356178 seconds)
  done (took 38.139081626 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.700474792 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.574476267 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.65548138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.554802332 seconds)
  done (took 7.908307823 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.550182726 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.551601215 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.562775478 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.601447384 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.632830423 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.559965087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.523268086 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.521594734 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.507308869 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.552447514 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.628046026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.567233304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.64368963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.497660462 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.684976232 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.497904896 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.498540044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.549842354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.601849782 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.617890188 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.497989263 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.551446308 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.555264675 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.568140477 seconds)
  done (took 38.947084319 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.497638929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.505822298 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.504725691 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.496559734 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.499084801 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.496830733 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.50560842 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.498650456 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.519618332 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.499815237 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.497067411 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.497893993 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.49736966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.501793776 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.499333606 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.511905115 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.512564137 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.50013315 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.503249167 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.504992708 seconds)
  done (took 31.475820927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.492855174 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.350902924 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.846331776 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.750560314 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.493118434 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.494232527 seconds)
  done (took 28.854032405 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.584475362 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.741571238 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.501967139 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.922848955 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.007375522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.500746573 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.502450936 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.787444164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.169495285 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.17557517 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.569552083 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.564171343 seconds)
  done (took 22.454359084 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.510048503 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.496299269 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.499132324 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.512044275 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.569091444 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.507309746 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.509478423 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.494691825 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.571459467 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.574494715 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.508452107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.571740188 seconds)
  done (took 39.753392052 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584139485 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549230488 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.597152672 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481878645 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881921948 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.708148172 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.452245679 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010316917 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.499744021 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770441202 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504237972 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58552921 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.755912589 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510879708 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496296153 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.718692648 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72695252 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099080983 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496811705 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129871795 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521992532 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.500436289 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.258514305 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528053559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709127043 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.631653866 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.756921312 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496636041 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830990705 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.509893022 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507309675 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497557539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772402987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230921757 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587952407 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506598359 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476445532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.214724648 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.486112942 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.128700202 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502455385 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.499674811 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508139156 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497239182 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.432366387 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512182383 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023361129 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.5029576 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.209760708 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.497688515 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509901074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59261611 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.501352777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317774859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715064596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497013387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.497677718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506413384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072386634 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.742270882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501022687 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.437094456 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.673077455 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132358742 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243100625 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.599492141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.503495444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502364267 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434533156 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.222188689 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518103687 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.839190434 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.519720474 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162662078 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332486229 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.500062295 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450042765 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164273095 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499469117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.437825208 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728503649 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500055825 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440812163 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.446765912 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.434842009 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350010205 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50708892 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.031134229 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506784613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014771573 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513037365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518430492 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523373019 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.726904139 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.388376373 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501652946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.505313133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632741643 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521565195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020798368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437818074 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.504123108 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759369213 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.711808121 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500452908 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.718943921 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751529828 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502795129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.517306514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.513843748 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51229415 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.207966668 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.509220037 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.756958635 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519467579 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.500968912 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386545827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502358098 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.604630206 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.501739792 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781478179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.403393246 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501622441 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585685096 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512720517 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.502676625 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237824659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023737246 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.502486135 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.505883849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.517939094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513602357 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.502624996 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463077947 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.499679186 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51299316 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.50479657 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.728901224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509313964 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778707218 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439051871 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841805052 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602924026 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.726991153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.871080825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.50236233 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765808588 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502757525 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.506348549 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515666578 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523643606 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602970236 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526103422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.510309726 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.764636718 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.506405052 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.509757472 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25332099 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.506249139 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505983947 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.511002769 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497683719 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213914666 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475568755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.507959701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39816751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.518871688 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568779554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510023299 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515260972 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.624719349 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575455745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.509217287 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.51042989 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730768181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51732733 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.247073436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587395748 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.763486385 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220639788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516393208 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.44259092 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.216059439 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.1996428 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504000636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.442277618 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.505458578 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514942712 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517300109 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.840795156 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224639532 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505841481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166345657 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.513620329 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516561456 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.511538473 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505961246 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.597488404 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.764668464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.520752652 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520344983 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65139016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.52252671 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.442241001 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.511855714 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51303463 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.507949316 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.508818106 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541562683 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173216339 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052839865 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769973722 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.450920581 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520317578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.373727626 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.54116731 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.50818937 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510438641 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51921478 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.523682028 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514719255 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.519505942 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.240192064 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.18073652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077262068 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368181304 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173846139 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638306917 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.513166231 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.510899215 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013131824 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443518228 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068492521 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73301739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026973617 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467427348 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769760092 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.885860973 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384904579 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519715499 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737356281 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639214286 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.520124072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522663896 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.720408102 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543011009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.507540863 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438962845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.812866563 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811711333 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.506256 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592127063 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027880051 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51187342 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.513392876 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.510356377 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.989877295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721864464 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.223322152 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690495465 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.518333927 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.510373109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060336899 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.515295089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.742355356 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254384225 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.519479505 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.759097654 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449109191 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.521236207 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523276076 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.512054857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.10128433 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.505566047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.765883842 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520480613 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446151792 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.515469599 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180090314 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.369232903 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518367072 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511895128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368284389 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510548829 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849092846 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.515203007 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.595164977 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514690818 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.448320971 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447125757 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.203684834 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.518570002 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484958161 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11792067 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.62747686 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669233678 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.538358615 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73448725 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.770865191 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.52561272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267831389 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742817432 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564050169 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535968207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.61312514 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519684007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.500561848 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.511460679 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.750840919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506653131 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738116242 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.630572976 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.415930597 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.512456911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725130288 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.513911605 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.523296277 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794241073 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.222086447 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.514287248 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413221505 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5367153 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.528666751 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.436980549 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.685076609 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52145659 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594127191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524991915 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.52581422 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525337523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726843033 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515594842 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516467091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.526518628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608313472 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.813024083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.599783515 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.516917893 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255972341 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368914842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229776569 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522446265 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.512892338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.517777717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450698195 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662709967 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.746587395 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789707326 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636323836 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.736189776 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537705413 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.514127064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.521514623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728607856 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790244473 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.415673828 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516782241 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52955693 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.513723436 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525357026 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.727317184 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128657063 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196386452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633489856 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.520094694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040360701 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791197914 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.515922109 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.515599731 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.114821894 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.524882389 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.015852961 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.519953996 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528483705 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664408045 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527260847 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257847234 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524393934 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.675336506 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.291243689 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296745098 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776989562 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.096284916 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525336834 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248427695 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39889216 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780855622 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584795759 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529145572 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.627565706 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66476899 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.525484844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.515375658 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.518612355 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739875362 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.230121718 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.528575224 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244577846 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78193264 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.515693181 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.530854908 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540582791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.529634997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.743973682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378979493 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744192301 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527744554 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.524521562 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341176976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240728988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529681572 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455740231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.520934791 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798902692 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753269488 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538656999 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.971261247 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.229695945 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197833532 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.494869228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540736812 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.527236616 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394223316 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234841116 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.613777821 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131229619 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086648967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520115828 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795294786 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.524726808 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.533124471 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797275741 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.524197642 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.526453481 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532113388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.241047651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.405611597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.541250426 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22417604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.458071765 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.86779164 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315062729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45620373 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.528161113 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.752430898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.52043258 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639932729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53147619 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.522969436 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.535085675 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.255303254 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80863952 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.525021552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.516595672 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.507464739 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.524721368 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529991098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827286477 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.520255125 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.2368689 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.878169158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781077062 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.53814669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.501982285 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.525953457 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521710776 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521877239 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.727650042 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.85536402 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20441833 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.521912648 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.554252272 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524194071 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.739187158 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734054838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.521136143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533995874 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.536929483 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538259972 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.426998177 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.031134865 seconds)
  done (took 1704.295501645 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531342297 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.543899478 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.536034264 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.610360911 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.56136658 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.662880694 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.542344053 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.557957055 seconds)
  done (took 53.997743837 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.533507223 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.759958116 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.558141398 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.53096826 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.531663996 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.542516294 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.030049768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.534090828 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.531575499 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.534174168 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.524636266 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.536895567 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.263301805 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.532642437 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.538733886 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.510200075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.532213294 seconds)
  done (took 68.985716264 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.526105075 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.579947163 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.56938145 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.520495237 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.28897249 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.531388727 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.281568593 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.530974044 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.522690686 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.759896902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.177366305 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.530497825 seconds)
  done (took 83.275621464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.532679802 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.53111148 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.533626126 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.531213719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.53155221 seconds)
  done (took 9.115228386 seconds)
done (took 2156.014268854 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.777520618 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.410357588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.315410872 seconds)
  done (took 6.180933722 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.673369779 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.721486072 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.848687065 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.874820274 seconds)
  done (took 8.572907833 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808332758 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.911466152 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.725897933 seconds)
  done (took 6.897834511 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.216027563 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.536615403 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.614899968 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.521940577 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.521891205 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.524343334 seconds)
  done (took 21.02350265 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.528053762 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.530484499 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.527485683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.531572196 seconds)
  done (took 7.572125385 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.509234008 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.308867519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.507033691 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.523312023 seconds)
  done (took 19.300760329 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.275372804 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.288290067 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.273179357 seconds)
  done (took 8.290781288 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.527051251 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.368215268 seconds)
  done (took 10.349126537 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.86009161 seconds)
  done (took 3.314428106 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.66135179 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.793454609 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.908651285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.72171171 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.919517406 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.080181884 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.484207456 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.981334935 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.706341679 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.125847192 seconds)
  done (took 32.83832024 seconds)
done (took 138.941823911 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.903077734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.546525654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.730561786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.869798536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.767831717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.729596376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815448305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.84201843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.378603321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.366805695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.880826264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.768561684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.75945758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.547776782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.75905104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.545967769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.76129647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.935331612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.528364568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.543758158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.811322136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.508989508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.709842505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.522405849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.762077747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.683210308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.089884682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.54287006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.527148589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.11813729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.680756342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.527951328 seconds)
  done (took 203.919161588 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.528652117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.55597985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.524706108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.526321597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.525326684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.526712486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.527431572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.543056295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.542601929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.527810066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.528232068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.527306721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.527186537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.527508621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.528411002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.52824311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.530675359 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.527741767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.527775988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.528216993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.527022585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.532975011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.534450977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.535853301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.529554091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551252028 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.529925664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.526314734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.540542622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.539403663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.529599946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.528368077 seconds)
  done (took 210.473423414 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.528175987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.53050661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.531236275 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.528791265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.528091156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.529934784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.529233281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.541584256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.534232239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.527411756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.539842403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.528331685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.556289549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.542151521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.529719716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.529175807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.528723405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.535748465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.532544096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.545428358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.529997673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.529266797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.528101986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.555250287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528343952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.537985965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.536292939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.528707065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.530200917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.547431626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.53657727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.530173858 seconds)
  done (took 210.555933534 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.726490956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.537937886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.537641931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.476397206 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.538184176 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.536688236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.537404812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.737120959 seconds)
  done (took 16.088026065 seconds)
done (took 642.492115323 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.02950312 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.730687979 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.757200396 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.55588898 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.45602723 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.558346723 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.558531895 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.756420833 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.239147625 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.739447495 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.950286759 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.554333677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.115437317 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.554354014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.837157411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.667807365 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.50489296 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.618234179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.91129814 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.210995601 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.840566888 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.229602567 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.752408691 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.267755112 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.113011378 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.256883234 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.438442965 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.495310511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.55640055 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.909738427 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.429659549 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.66443232 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.633819655 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.611759981 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.668645232 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.650582285 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.6854072 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.611738177 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.763769584 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.980202602 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.219084691 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.035394838 seconds)
  done (took 105.581401824 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.528673469 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.529627587 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.527095986 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.52874761 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.530212137 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.529557352 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.530269233 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.527520481 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.529117255 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.528821049 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.52910572 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.530734915 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.529672216 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.529617368 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.529006186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.528438994 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.528467047 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.530878407 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.530037485 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.528357593 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.530233207 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.527595553 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.532371989 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.528944065 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.529620194 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.532362369 seconds)
  done (took 41.229905137 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.541002037 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.802174289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.00306641 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.548277744 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.542654856 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.548316106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.640322702 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.543533884 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.545884912 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.547251609 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.71473269 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.543867858 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.582371185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.011057918 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.545052663 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.542729534 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.54372484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.543909939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.806702214 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.552762912 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.662149106 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.543405233 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.637858428 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.551618143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.567139462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.545341726 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.549828637 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.134133759 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.544039946 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.717688102 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.507622124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.639544303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.085368523 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.01304223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.50809627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.544861788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.545173007 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.722337805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.546655395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.546043462 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.640386226 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.545798392 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.016324556 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.200066042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.564953186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.546912739 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.1617916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.717889838 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.843393588 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.553305853 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.036863097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.547186164 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.545766241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.547178392 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.841693625 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.55306585 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.545353973 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.008954739 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.548744284 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.643211319 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.545027833 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.546569582 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.816265485 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.544850109 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.808804479 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.548656523 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.554656186 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.548738063 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.014907345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547182379 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.21700816 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.565065716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.546977566 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.718533015 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.806739728 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.195523026 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.546269578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82295365 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.101003894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.640752582 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.551695254 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.131294578 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.644495735 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.552421337 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.549036678 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.547180502 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.5458232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.590879122 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.640602117 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.152176177 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.207183077 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.040904824 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.644480179 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.560287567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.549103863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.027712702 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.548104775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.546788929 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.015416882 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.220716273 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.565632245 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.55669645 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.209723608 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.567753132 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.647491637 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.556722965 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.026331331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.5507451 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.592837165 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.560654531 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.55757615 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.55479432 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.645981584 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.556091365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.551157585 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.19802463 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.746496829 seconds)
  done (took 202.388180278 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.545209627 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.543277578 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.544886332 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.542418113 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.541929165 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.549609369 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.544222229 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.545742309 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.549289544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.544115159 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.543943709 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.548883511 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.549287604 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.573560351 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.552282565 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.5513455 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.161237665 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.546211719 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.544831626 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.543384959 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.384836276 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.548810416 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.545959447 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.544666536 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.547149432 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.546063612 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.577146542 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.545121296 seconds)
  done (took 158.279025943 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.551914531 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.218492233 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.551731024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.716928999 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.575668784 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.549273431 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.715336794 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.623863918 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.553689064 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.550260952 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.549006271 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.912061019 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.550879872 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.159643548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.784184715 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.719355985 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.158799513 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.552331432 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.549426094 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.55038406 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.713727933 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.563729134 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.913701146 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.218185943 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.55247033 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.220141565 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.540049937 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.551666262 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.551927176 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.224239528 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.551316751 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.917695318 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.647251387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.624440279 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.221005225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.160212036 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.161811396 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.729840929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.551909959 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.54983639 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.55027582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.53957672 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.222332184 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.552839687 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.555928702 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.21698033 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.56976361 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.553344442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.56260581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.550746262 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.624750909 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.624921537 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.915239708 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.226263626 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.647448713 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.573595063 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.715765925 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.938014118 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.552685786 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.164385797 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.538713991 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.221276538 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.555407058 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.543287098 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.550783774 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.559180299 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.741229104 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.714025566 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.168224699 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.555622367 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.17119109 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.738822024 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.551397841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.554071922 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.554285636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.223931729 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.167661213 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.740419513 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.717727245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.788647593 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.541416941 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.555714224 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.543799248 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.650195229 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.554783239 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.223541543 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.166423069 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.555251814 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.555735906 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.555468013 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.557223986 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.767967517 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.223967146 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.650856497 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.159636843 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.929180323 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.915399423 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.552767828 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626284434 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.553797009 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.917612514 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.554501965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.623920658 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.005480174 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.913452417 seconds)
  done (took 185.805029386 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.830004542 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.871966143 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.653680692 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.685600277 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.145498035 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.179780389 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.747853693 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.639482306 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.657985425 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.683848064 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.32034846 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.640265143 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.768420058 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.641066322 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.302162402 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.634964988 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.658943697 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.680790726 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.680990732 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.699848153 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.208578597 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.86613592 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.731057336 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.689695295 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.623564654 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.401939027 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.394390148 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.086972401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.747591924 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.839089064 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.110635853 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.843204171 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.387606303 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.268585533 seconds)
  done (took 72.802226121 seconds)
done (took 767.546561712 seconds)
SAVING RESULT...
DONE!
