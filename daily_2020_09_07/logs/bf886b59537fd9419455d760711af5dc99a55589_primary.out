cset: moving following pidspec: 24811
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.611172733 seconds)
loading group "shootout"... done (took 1.266720342 seconds)
loading group "string"... done (took 0.414175275 seconds)
loading group "linalg"... done (took 7.817940948 seconds)
loading group "parallel"... done (took 0.15865832 seconds)
loading group "find"... done (took 1.393347023 seconds)
loading group "tuple"... done (took 1.950076643 seconds)
loading group "union"... done (took 12.568646824 seconds)
loading group "dates"... done (took 1.34476749 seconds)
loading group "micro"... done (took 0.201824726 seconds)
loading group "simd"... done (took 4.37957888 seconds)
loading group "io"... done (took 1.006324348 seconds)
loading group "random"... done (took 8.773302274 seconds)
loading group "problem"... done (took 1.529655044 seconds)
loading group "array"... done (took 19.454810553 seconds)
loading group "misc"... done (took 1.5019831 seconds)
loading group "scalar"... done (took 39.749128454 seconds)
loading group "sort"... done (took 3.134517849 seconds)
loading group "sparse"... done (took 11.839368223 seconds)
loading group "collection"... done (took 17.575969531 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510915752 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122212933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126311543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116848778 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146657442 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115872231 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124400872 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083955333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.803246033 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136300375 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110729541 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410716354 seconds)
done (took 5.134060924 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163801041 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090972083 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084886541 seconds)
  done (took 1.2686034 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063034584 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13081684 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064997978 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064629459 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064947204 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064551661 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063837374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064522278 seconds)
  done (took 1.6116477 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069020775 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066212823 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06393021 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065729149 seconds)
  done (took 1.361766048 seconds)
done (took 5.580552243 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.235946095 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099842599 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281716575 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.438601044 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.59552562 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090061215 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073096062 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068371777 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126161714 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32482128 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.09983212 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180567729 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089414288 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.172509568 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.997793826 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118770829 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084430057 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120165237 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091587567 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128587839 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.387284264 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076310366 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072863597 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068436542 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068531097 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643067446 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663805751 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125295274 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081599117 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160424392 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113724099 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646530557 seconds)
  done (took 10.654139816 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089539654 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088751776 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067060884 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122647612 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092623866 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068131677 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072787858 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065494028 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08702433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123382738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088673961 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096530803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064811622 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067294147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073333596 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195597168 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076587822 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078206839 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066793671 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078300239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105019155 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077110132 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076734207 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076471461 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127824089 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16877728 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093774118 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098651338 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063174608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077649355 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116361639 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125346476 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064043762 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063291585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118928218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093519206 seconds)
  done (took 4.455963878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.947203329 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089682601 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097758246 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.606779172 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064140353 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149656859 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242059643 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071383981 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.389037748 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144645832 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136819501 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143877932 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115266085 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067994934 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.185406264 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11361919 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.472836923 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066115516 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065286718 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064108314 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066621783 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065714347 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062016894 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068331012 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093148788 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081881005 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085744009 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.148817427 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.903618093 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.232048865 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064276516 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159635558 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082232419 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353348857 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067083184 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079347216 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.405122568 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06181649 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.119226555 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062524845 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161494626 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113181589 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061617961 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113054337 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075218923 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066029147 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065754342 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065548598 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068225036 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075220398 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09826047 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06466793 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061756226 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159635991 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061729841 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063262654 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064338808 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146520729 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061628105 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060649971 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136730076 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061589661 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065734056 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097762 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065321403 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084882438 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061559903 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094102766 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328197847 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.041614626 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06442893 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.042460272 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076305748 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064583233 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069125926 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064750732 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066454908 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066012509 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071499134 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068492041 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066067132 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107403651 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063218207 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06686341 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063433554 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068734455 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094683706 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062254538 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.470172382 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094116777 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06311412 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073186473 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102416328 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063863506 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068138517 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065306894 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065589427 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064378088 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064933498 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067615667 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093245273 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067782228 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.218761705 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.024684135 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066458999 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063552135 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069644882 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067937899 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071194582 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065542335 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067711376 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066330935 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063228245 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108540521 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065632556 seconds)
  done (took 21.283030316 seconds)
done (took 38.435262057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252653835 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078458896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078205534 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078902091 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078452921 seconds)
  done (took 1.764054948 seconds)
done (took 2.950632506 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105337423 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06182153 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097992676 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097551966 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062241251 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062323428 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095082239 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060989519 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094187895 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095704222 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096793332 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096837543 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061946571 seconds)
  done (took 2.283715256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06697799 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079547673 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081073615 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059963206 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069671036 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079606326 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060521961 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08158721 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085612976 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07973115 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079731404 seconds)
  done (took 2.005409096 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066007769 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077537281 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08295835 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060030569 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071172272 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079298977 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060250669 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078900113 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081824243 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079074808 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079264581 seconds)
  done (took 1.989850026 seconds)
done (took 7.454924428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063817447 seconds)
  done (took 1.221382738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.510493915 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.27414813 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06519985 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08533339 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192359219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093729597 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.21066216 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071051823 seconds)
  done (took 7.837901472 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092684919 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066932833 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069820415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066306811 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068004097 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066396395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067252074 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066438498 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066136829 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067932151 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067293965 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066139629 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067343496 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068317292 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066899881 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065818599 seconds)
  done (took 2.372447926 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095133474 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095168367 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070900327 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071774638 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069514669 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068948075 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07158646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071340463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067777931 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069328071 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071123804 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069730932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069460071 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060904209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07115614 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071684562 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067791806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070758784 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07115424 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07317063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071657864 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060885119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069429421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070669055 seconds)
  done (took 3.00910876 seconds)
done (took 15.614611555 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109831983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073327476 seconds)
  done (took 1.354134962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065590148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06793036 seconds)
  done (took 1.317258462 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071835917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059447273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079789889 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070032318 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059753506 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059925826 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077496878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059522119 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059582286 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059966832 seconds)
  done (took 1.843166863 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060514553 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067981535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06614688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06796581 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066104131 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06031588 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06365786 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061057247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068581455 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060122998 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064700754 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080075803 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063887222 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081610001 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06415427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064884099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067325758 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063884343 seconds)
  done (took 2.382921215 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058597751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060294756 seconds)
  done (took 1.315064942 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062762908 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060378442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063953829 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063615639 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060301791 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060118193 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060399631 seconds)
  done (took 1.618620357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408111699 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118797667 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333596226 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06694403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076324808 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24855409 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061677612 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067047444 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066784274 seconds)
  done (took 2.676002193 seconds)
done (took 13.706275848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078118887 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082300806 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087455387 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410002245 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090212198 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065070039 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111191768 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171144788 seconds)
done (took 2.305578121 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214242972 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.338977814 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.902534544 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066816536 seconds)
  done (took 3.504449383 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322993034 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07695162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076725063 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066195452 seconds)
  done (took 1.749533058 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062566902 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069316635 seconds)
  done (took 1.333273292 seconds)
done (took 8.010342144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06124942 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08882041 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061457473 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062018833 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062351224 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061861004 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06216166 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.061698739 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062155268 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061236261 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061469144 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061904374 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061607131 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061557178 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061862064 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062227317 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061316035 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062068139 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061726058 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06224146 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061841188 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061486322 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061963703 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061833369 seconds)
  done (took 2.741424728 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077310674 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064578204 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065824684 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065328966 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066478526 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065132523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065205654 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063719004 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065340992 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063844387 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065566411 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065539769 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063577943 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065744517 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063954482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065963913 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065400882 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063958978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064260302 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066014906 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06501116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064212186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066095514 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064832023 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065725777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065740709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063656613 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064301113 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065312985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066071641 seconds)
  done (took 3.176694908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062049652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058231829 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058878691 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067928577 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058638316 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058878965 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059380332 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058065253 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058735148 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059954043 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058924436 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058439852 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059178625 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05820412 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058654652 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05875068 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06254214 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075881389 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058209029 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058099904 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062708584 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058756292 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058444359 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05809429 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05874726 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058842146 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057806354 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058669771 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058406806 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059585384 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058558437 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071508528 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06331671 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058705819 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067770624 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062907669 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.05863546 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062269451 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059812552 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058163433 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058147318 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058001813 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058660781 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058189705 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067586522 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058846034 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059384526 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058982578 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058568958 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057959475 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058286706 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060729124 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063367995 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060198095 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058082871 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059783374 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057929462 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059200907 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057986338 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058023669 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057926995 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061244721 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.05997403 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059203773 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076494511 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060026501 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067836795 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06103403 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059241553 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061951681 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059244784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07435304 seconds)
  done (took 5.58121237 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080910764 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084025721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064049859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063903821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059194364 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058779662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066735243 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058796461 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063029066 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077998551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058726472 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06307916 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06268161 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062454514 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05904088 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063286463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067749213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058954249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058950078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062923421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05896153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066319356 seconds)
  done (took 2.651079153 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134105292 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064433961 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101034327 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07403721 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067235889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073732339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06280225 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064141426 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064974142 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065201235 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06524168 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064559336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067116001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064915164 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064797545 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065062696 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064600974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064941444 seconds)
  done (took 2.514238503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074016296 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063906268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08655564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063876837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064160723 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063466315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067878026 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069078558 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063936296 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064153453 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068849917 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064153615 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064085921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064026422 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0635951 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064664781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063482308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063933103 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068502806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068015362 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068414767 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068893718 seconds)
  done (took 2.694139097 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071886406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061997947 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076188978 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065131733 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059032413 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05905563 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064170739 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063253655 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064121685 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063112553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063545009 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058659704 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065044358 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063549621 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065329387 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063400545 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063470305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063612718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062974344 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059272135 seconds)
  done (took 2.500282295 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082783249 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060527339 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062390851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080507198 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061531077 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06184821 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080106039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061537771 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062225489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082753433 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061627969 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061737356 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079909807 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080430287 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061525303 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080084785 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080128595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079970288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061535338 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061879362 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082825732 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061769921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080516826 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062289622 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06136371 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061513051 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061324426 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080065765 seconds)
  done (took 3.181929417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060991041 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06115612 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062165548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061739169 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062040276 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062288027 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061837267 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062209263 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061617593 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061920703 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061679743 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061773919 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061575481 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061375765 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061672161 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061310401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061050206 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061781168 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061576051 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061700335 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061723691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062000518 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061746697 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061785045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061687485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06167896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061548226 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061827245 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061020993 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061802683 seconds)
  done (took 3.081431655 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071003411 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069093523 seconds)
  done (took 1.371970794 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059961762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074970527 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058046936 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069211224 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067659745 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062059467 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067951912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067662612 seconds)
  done (took 1.752683994 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064467991 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085703053 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060023594 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061002926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063024498 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116042316 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074838083 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074056826 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073257016 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062362735 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061416593 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072697459 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060223368 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072474793 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062101657 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068840544 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066573183 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071563284 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072193965 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059048095 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071980604 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061294892 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059379221 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061403891 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060497138 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067283681 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075680157 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071770456 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068273166 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058296079 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078433395 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059643004 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060580158 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068733797 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064253425 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059188203 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094708043 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059923611 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065342115 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059272443 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071378701 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079042592 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072928945 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076593197 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060795713 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061953672 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059063239 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061176746 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062406437 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067939702 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059211467 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066344151 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058644772 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060839455 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069134317 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059580105 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065357339 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068151393 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071992084 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068713586 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071033277 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073473765 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067145605 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067577848 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060041138 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07765954 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060862809 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071238388 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072753219 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060204101 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072284832 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058655252 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058325335 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059070688 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091104734 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06114977 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060466021 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059040994 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05958293 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060942877 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068644158 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064714537 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066157866 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062835115 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074133195 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068037147 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059183305 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06615491 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076228983 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06248631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058984926 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075381907 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062101603 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058691834 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07617976 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067943722 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060668903 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05995279 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061921241 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072015201 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060882295 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058198378 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066676794 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060914224 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061390525 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062713774 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065725335 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058025477 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067982229 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06326915 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059890719 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057364346 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062252044 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059223693 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057264429 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067186427 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05827549 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072174367 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064397417 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071594356 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071690246 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068382279 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072944633 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057992208 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057512958 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074900477 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066782895 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059210145 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074921793 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.190518165 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071185077 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060560435 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062224671 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069282706 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059263657 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062405246 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06007636 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065516258 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061454652 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062059541 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064325882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067546205 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071421144 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061479721 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067753504 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059841095 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074404973 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068936333 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064402924 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0639685 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.06074587 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071513529 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065889015 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068549637 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059192507 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06017743 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059819178 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069731799 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068615234 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061152988 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067460704 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063452811 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060188035 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060016023 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060555826 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062998584 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063769299 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060819303 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067089926 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06799494 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076457637 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067843041 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068174053 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058499795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059294385 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06156054 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059493525 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063586618 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068325791 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073992073 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070668015 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079144105 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059821274 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068227623 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061030146 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075593191 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071697078 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060577349 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064685903 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058316764 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0612709 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067977573 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07038309 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07326796 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073686863 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063492613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063929357 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059359235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072992305 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059885262 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067200885 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068803467 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06438963 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059207172 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060856089 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068082903 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063691156 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059805211 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074117809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06606554 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058970118 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072762146 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059797985 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069882272 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059408739 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062804712 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064338275 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061833732 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068503951 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074059203 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058337198 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05988745 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074245125 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061816084 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060930985 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067284799 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073249526 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063296764 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066914419 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069125625 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068271721 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063498155 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067907555 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059809062 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067895577 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062190537 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070421466 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058639206 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075880402 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05773438 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072545991 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059146072 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068855491 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058931399 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067309524 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059078768 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074004503 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060468159 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059256012 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069755506 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057759989 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066985621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058118282 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062975687 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064771932 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067032624 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059871155 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06669439 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059662682 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066103551 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062619349 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065885115 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066769303 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.200497606 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060343397 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069458577 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07178362 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068356319 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062279642 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061753337 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060610136 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068763657 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061452619 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061139002 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067256644 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064476235 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065075054 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061427916 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061912031 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061717407 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067632336 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068742508 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0775685 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067844887 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066492127 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068417149 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058999053 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074562125 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059139166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066728324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058556748 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066133855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068262706 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059684724 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077885563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061676811 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066832388 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071812237 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068141412 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06293155 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076575347 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063948571 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067785798 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067128872 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06404398 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0656677 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061771207 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067621452 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069268642 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069572835 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06086553 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066113693 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067586818 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061734081 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06777315 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061339772 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066906359 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061296002 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058241082 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063585086 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070298141 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063736244 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064205571 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059730101 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058017223 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059329794 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066652832 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063774346 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067327736 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074141799 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058482811 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060677595 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059008025 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06579765 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076631642 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068751421 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067084494 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064028395 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059046591 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061363801 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061256753 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059476806 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063213501 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058396717 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05908749 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069499956 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061599775 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063662359 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059604553 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060396214 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067978845 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064477813 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.05962871 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065793923 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059320584 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064137818 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05873448 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06119119 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063708144 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058901859 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062796818 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069508526 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075115604 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065334305 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067622741 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060349196 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066899652 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07373534 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067170865 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060497658 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0677309 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05836748 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076800008 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067669113 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066651996 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068103078 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059663171 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074429789 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063101183 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068132567 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073383918 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059595029 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065284627 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057897585 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07313507 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062870933 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058341013 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066023368 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066173912 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064283691 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069619078 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059802516 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066188548 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064200458 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061827583 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060167577 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059807575 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.208024303 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077065557 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.06237506 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065356696 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068525493 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068345088 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064561977 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07229474 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067477037 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061937717 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061577263 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063582686 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060851455 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07122606 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060500154 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064026363 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06370662 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059759762 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066026529 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075423924 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069471265 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068633424 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059277512 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058998571 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076766531 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063511283 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06382339 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067226985 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068932189 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071988073 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068657604 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076671564 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060239996 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06473653 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071780735 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06092922 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059734625 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062873545 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061284051 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06817902 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069437333 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066358102 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06192904 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066136949 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072206556 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061313867 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064386422 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064575849 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060764003 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069707826 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066786592 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067457373 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061319256 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059499616 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062692195 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067969114 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066526561 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06861692 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060302269 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067268455 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072943693 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066541242 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06340882 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059063266 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06321612 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068022036 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064644129 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059076782 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064049504 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062536538 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067552367 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068603146 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063708948 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059269641 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075949917 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067833009 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068533255 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061640042 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062118423 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060055288 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059247013 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07046113 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059644629 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061338901 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064162515 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061790065 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07635705 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067326749 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074651665 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060999864 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063570162 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059336503 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068674449 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063576412 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059570283 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069644054 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058765821 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07431263 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071192876 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068690466 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0593313 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064367091 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067474163 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073963529 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069014628 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067954886 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063507709 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068573266 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061581443 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069998075 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059336132 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058127588 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069026905 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067390465 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071024969 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057962714 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068432004 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060993392 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066942798 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066710835 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060843473 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060555808 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060475432 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067417369 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063198436 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067489926 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063081829 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075002266 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060022607 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069235867 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067400188 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069579234 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072130415 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070739685 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.206487863 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062210565 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068350811 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069244178 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062399257 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065720008 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064782299 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081835749 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06250852 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061701706 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074241113 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067318477 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060129244 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06746401 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06404984 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069902893 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061114307 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069677677 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064037634 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060714031 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064419697 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064110011 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058806569 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059786704 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060356391 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069634255 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063839637 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0601783 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078310216 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061455127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067953916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071283566 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06639767 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061962257 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058952367 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060422309 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071707512 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074270776 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063557532 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068019233 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061726643 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068737509 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058401164 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068098505 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085183172 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068406456 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059582296 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060177031 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073757882 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074286413 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063675376 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068190262 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070365997 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061889345 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081013755 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067831154 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060833113 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070351553 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062465236 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059674586 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058969857 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061317684 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071058918 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059508572 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062617521 seconds)
  done (took 40.870704983 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096457574 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059881809 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058778835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059685547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071230368 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060551828 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059580873 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060631128 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060859691 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062789346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059528272 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059394417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070958008 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073045144 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070103679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064047934 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059832629 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060571327 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059841796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060348248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070251018 seconds)
  done (took 2.704024645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065166839 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073627581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070616344 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075354361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066315791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064410682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071162767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064532908 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072090678 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069257934 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071612237 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063953915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069527322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069420917 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069419834 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064255901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071631663 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068109342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063891842 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071152564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064020958 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071093653 seconds)
  done (took 2.83471816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059947079 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058730485 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066855358 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05899535 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059297076 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063042865 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058794593 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06285536 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062885136 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063336987 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067220248 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059724969 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058778546 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06490237 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059464351 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060190297 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10158195 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060141476 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06080803 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059221079 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064946263 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067984067 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059119316 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059337089 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063092037 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062789955 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059220691 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061755102 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059676197 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063102144 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060166263 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058850134 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06749604 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066986056 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063159881 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063322031 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060815471 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060553011 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059423431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059559867 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06714284 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060628369 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059346121 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060533067 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067674996 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059410667 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05873649 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067725716 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059128514 seconds)
  done (took 4.396404551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.06979156 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110319111 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065214508 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090404534 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07291999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065915276 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065508738 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091147889 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060696324 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061182689 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074303441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074222782 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063217714 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064315569 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066232391 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062128518 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063147251 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061603049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065294227 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06208678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065681062 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066535959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072701308 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073146174 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063767062 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061753561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062409147 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064552428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07297307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066044213 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064320061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064660646 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073241035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065729709 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062237586 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061789192 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074032734 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063129489 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062600632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060538863 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062088096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064103308 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066427084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074313717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062561655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067020474 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062700982 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060638168 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07337344 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06224727 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066878165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074561922 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063580243 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06284748 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064324021 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073463647 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062905336 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061152901 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062778033 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073067974 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061068821 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063374038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073956496 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062019266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066175824 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074780017 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067430452 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063916844 seconds)
  done (took 6.052046388 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067960368 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091061895 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070934146 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07127918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070673557 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07016924 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070697383 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069813545 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07008292 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070959092 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070864943 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108427462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066259862 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075145799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070341572 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070474447 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069893705 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070418278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070507568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069967832 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070316482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070963732 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070310252 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071272207 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073100396 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066566841 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070219177 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070151259 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070984057 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070209121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07310204 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07006523 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070095801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070637258 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073203296 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070252239 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060273848 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070473311 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070426529 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070234886 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066017975 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071199411 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070145968 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066272756 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070331317 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070416459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070784576 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073558002 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078497745 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070721176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070435342 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070975584 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070416856 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070319848 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071152948 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078274411 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070913992 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071133651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07032009 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07104131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07107821 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079092084 seconds)
  done (took 5.806193242 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073396804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067760966 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079409482 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063192994 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059559781 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068955202 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059179455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059518034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067549106 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067077585 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068722303 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06939954 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071237046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068941751 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069055281 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07114633 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068827901 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068653146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066958797 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069284624 seconds)
  done (took 2.714480798 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070550398 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077245419 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064977768 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069176802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06539524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069186176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064034454 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065173265 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06570466 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065050258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070225288 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070603281 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065485918 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068839652 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070489565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068951499 seconds)
  done (took 2.434768361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064895056 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067482413 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067440954 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061162518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063955387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060103628 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060668785 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059015252 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059924671 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07348278 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060509256 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072066136 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060643945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059736657 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060133513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066012753 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059298322 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060430709 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060234837 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065654282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067462358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061256446 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064327669 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060665409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065714397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067702502 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062161655 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064115014 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060757339 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060855108 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065792738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066965386 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060359358 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061015031 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059611073 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060604288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060552459 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061092422 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066180664 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060484465 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058907192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065411076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060689551 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061404447 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060154841 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061054572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059490481 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066317712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060724247 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066171868 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060691152 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062454858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061138649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067722963 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062887357 seconds)
  done (took 4.802105202 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072789548 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064483159 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059609996 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059412755 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064541318 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065574305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065189469 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064442788 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065136034 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059027577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065047404 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064025014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064929005 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064379689 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064738466 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066467289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058970087 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064294076 seconds)
  done (took 2.511963381 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069160434 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064331311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06898717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06441888 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064390452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063453305 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059219793 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059183635 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059246506 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064189716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064011989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063570399 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059324936 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063825171 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06408352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064399303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063831535 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059451874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064047128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059451307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063607881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05942552 seconds)
  done (took 2.737660806 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085431421 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08331782 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122952809 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078041015 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086136652 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070616882 seconds)
  done (took 1.878240327 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088354913 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101436992 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064442933 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064317226 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074085227 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067577754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067306307 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068014271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07386267 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07222753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06762864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074408508 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074290233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070195045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074050286 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076553186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067791712 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067952047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064191741 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076853607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067847504 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073644902 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068545438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068028278 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067962475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069737842 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077012695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072403649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07023939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074151952 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076669798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067875481 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074040622 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072538251 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064244095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073675353 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067688837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076876471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074327952 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070148266 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064654109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074305961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074364713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069896317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077221629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068814152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069830788 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068452097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068717101 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079463318 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074411365 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070784238 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074735518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077434762 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077508617 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079455342 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072740783 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070067846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074382383 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072670538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070059681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074486883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070293643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07274391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077448469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070101984 seconds)
  done (took 6.134566404 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095862837 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063488613 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068760286 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073192433 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070380891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068571825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068185532 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068469434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068535195 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064855586 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101761367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068874166 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069972779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070378921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068427083 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068432783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06817585 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070350151 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065160148 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079627793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068258038 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070268669 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070155827 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070188953 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072196386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077033151 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068066929 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0686319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068104591 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068064396 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070093516 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068279816 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070243073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065712283 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069955021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068214414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067786407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069934848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067987315 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074511963 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070551414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077451219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068363366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068314107 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073005751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068134799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068154639 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064956668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068055759 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065070846 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07288391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072927717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073040186 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070606736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068443937 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068666128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068309033 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068049352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06849853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077512412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07004576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068119626 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079353887 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068020741 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068402469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069981596 seconds)
  done (took 6.038263775 seconds)
done (took 124.371558655 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206426045 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18188608 seconds)
  done (took 1.727786418 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071363853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09597134 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074223013 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133071188 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068773576 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104040396 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10203768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072147509 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069323076 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069996643 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070264675 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072550936 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136146788 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06851248 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068690934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073067959 seconds)
  done (took 2.708084962 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102975676 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180471434 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110394462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068291943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105200872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075433869 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068113507 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078724991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071845253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071298238 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07550491 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073904128 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071116954 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073535234 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071701994 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075362394 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071201519 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074925879 seconds)
  done (took 2.886318629 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091528102 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085963846 seconds)
  done (took 1.547086793 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152268015 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102940378 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142218398 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.316322555 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.134106177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127247342 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132067339 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127130881 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111824377 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120762293 seconds)
  done (took 2.82994306 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099684296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174562201 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308653938 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118844846 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074939297 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100767155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121018333 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080542659 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079328369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079000435 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08169836 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076048381 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09680976 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074767322 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074992777 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075946408 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099927054 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074124761 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074043018 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074683217 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09993463 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068886392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074923937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074901065 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076776627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076823785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070072565 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069067022 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07483654 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073789934 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077466983 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097774756 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076868233 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100196486 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073428401 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101386323 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073986647 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072752017 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073532405 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073041337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075993777 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076069677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077337628 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075600929 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069840026 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07338726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069872765 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068599385 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07804496 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069610691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078014273 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076785291 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099894993 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069476912 seconds)
  done (took 6.069078089 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104383622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102890118 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068133811 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111916415 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103419178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068828407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103343478 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098295701 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108110898 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069031951 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068048076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067784286 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076033865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080164227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111970721 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103489828 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069153769 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067013429 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105912788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10628788 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067586882 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098960374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098002793 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105201133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065236956 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067586849 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066959101 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067665868 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07383858 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074752184 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06736284 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075840159 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084201353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073497269 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066707535 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067029946 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067107903 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075369909 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076437393 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075826996 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074625127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067010898 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067568204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067790104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068279962 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066669548 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074252221 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07529391 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074691208 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067266437 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067865739 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067150363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067494595 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075595434 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07403765 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076570458 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075988526 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067201362 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067278872 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068946819 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076812359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076664058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076268545 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068237225 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07662335 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066768227 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078193981 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082397511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067306504 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067691532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067349659 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066947702 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067709867 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073809328 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073977266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067781282 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066695373 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066732503 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076219631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073895657 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066965984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073431812 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066413555 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067109651 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06757776 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067426801 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07384648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075719799 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068490176 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066936991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067122235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067821611 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066543359 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074309824 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074858238 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07528096 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074063594 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067631504 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073820473 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074270488 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067150364 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073370767 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066558923 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067308304 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067116761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073487191 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073242647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075224889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066690279 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066074443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072976337 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075238791 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066382979 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.206742486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079386162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07738404 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068566601 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082007443 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068510516 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078289236 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068305597 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077773848 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068883194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075288511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068191799 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066862672 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067741831 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075186025 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068367043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067587753 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068354188 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067768601 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07592238 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078982119 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068974196 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075030291 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075459743 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068354526 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075030655 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068052809 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075980273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06799386 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067627691 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067126788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077814828 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067858548 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06793361 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06762371 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077237637 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068064887 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077714929 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074165835 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066962969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08153683 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077399598 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074319647 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078199689 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068748289 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067741987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067378055 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067447573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073790137 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075545359 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068349171 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067644206 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074225082 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07777551 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067273101 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074992184 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075029973 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074692875 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06794925 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067502085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078007885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077761228 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07511461 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07451618 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075903734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068191314 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074663354 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074795116 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067820847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082193607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068133668 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078727033 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075909156 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074234951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075103887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076281661 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07730955 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077488859 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080332149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06732458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067350775 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074870446 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06720047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067502213 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074274045 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068076705 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067898469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081474187 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066512285 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07773762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067323635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07603776 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067677849 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067976349 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080224171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068125376 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068138503 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0746473 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067283306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074337705 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076183511 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071397834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065011531 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067297716 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073916571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074289003 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066647964 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065981546 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066883446 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072349053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072220845 seconds)
  done (took 18.041119515 seconds)
done (took 37.189599988 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201560698 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160013786 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.192826868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111738861 seconds)
  done (took 2.13886707 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092034052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09479906 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076209772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063276345 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082167358 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064941648 seconds)
  done (took 1.887437313 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266361424 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190461852 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173605358 seconds)
  done (took 2.037643198 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21664221 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195483738 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474142779 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295092683 seconds)
  done (took 2.692913094 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130987612 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078221057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063157934 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073007828 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.107691423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.137745939 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086853202 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110429502 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074122228 seconds)
  done (took 2.332567573 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130009821 seconds)
done (took 12.661615395 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.210715819 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.194278919 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.269649515 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097777495 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.185407118 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.199200681 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.170185129 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066945134 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098653755 seconds)
    (10/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.171807217 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.179767748 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074989167 seconds)
    (13/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.177986418 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170216128 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220771707 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076625386 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.172405457 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.172920537 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076048962 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.36857356 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.142939774 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073161477 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180894087 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230731919 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.232801448 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218956945 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07680731 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097245352 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.216433859 seconds)
    (30/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.188950339 seconds)
    (31/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.18743628 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075862178 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117617091 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.142161836 seconds)
    (35/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.213150682 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090021542 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187992197 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199487346 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072791598 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132355283 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072264594 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077043828 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087733648 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124534225 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063002679 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149268424 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155110685 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086918709 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087241182 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064920043 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171543699 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071298668 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094020613 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10608772 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076402753 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.147654823 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145697255 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085019371 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06723165 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.06538993 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087117841 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162880191 seconds)
    (63/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076265284 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075557891 seconds)
    (65/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078902144 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089687283 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093411681 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063583354 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072407105 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073217531 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14850773 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062886812 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076077727 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089985605 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061632257 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070850461 seconds)
    (77/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064577799 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074545891 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064115823 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.29694186 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066625614 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078091807 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06568908 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174850096 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173986596 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07693299 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.076018299 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159778834 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092327312 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066215425 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075911131 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063686627 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087885914 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088643202 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073325412 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161189439 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073667326 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152386649 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063919801 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.226666065 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148245243 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071961181 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084694926 seconds)
    (104/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149155739 seconds)
    (105/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064223373 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199486169 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208648823 seconds)
    (108/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071041236 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075613738 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07623286 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065566558 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091480447 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186336241 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065174901 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090549724 seconds)
    (116/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.160594488 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15676411 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076919958 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074295069 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073644805 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06939808 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186662233 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.12192565 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063726519 seconds)
    (125/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066178042 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088052585 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063637136 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065726161 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141396781 seconds)
    (130/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065518202 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071839976 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073643602 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123652195 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071317093 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063462345 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073897621 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067020082 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074606586 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064098692 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063655394 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177270538 seconds)
    (142/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076212462 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076127654 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072828728 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147414941 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076561894 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064681052 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063646687 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12946515 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063823862 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071744421 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072269883 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197289605 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063944914 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063696154 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06334049 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064843547 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124943814 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089168437 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092931656 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063368334 seconds)
    (162/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204063578 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082296812 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065686621 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075986538 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065236935 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067245918 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073483942 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064103508 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149092607 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064778364 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064390089 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063283183 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080699122 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086444095 seconds)
    (176/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082289164 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182549515 seconds)
    (178/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061747093 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065896003 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065930917 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062842683 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143793666 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074260144 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111546972 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086773498 seconds)
    (186/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071451316 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085393498 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064488233 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063590999 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0637602 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064145159 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07005927 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.3869041 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063693634 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062617061 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065668552 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063492123 seconds)
    (198/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066033101 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092010318 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063244102 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065431725 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166424428 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07022154 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156304029 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088031115 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075476443 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076841742 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064713904 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 0.135134577 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064597513 seconds)
    (211/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069425211 seconds)
    (212/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093355391 seconds)
    (213/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068893064 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143030253 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127787285 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06272534 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070224119 seconds)
    (218/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.06287508 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13824943 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083650894 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063938418 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064269091 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07078742 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069865575 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144782248 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063558808 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088536593 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067731164 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066685451 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064992029 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181159383 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073651589 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072165017 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065379449 seconds)
    (235/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064759502 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129814167 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066667965 seconds)
    (238/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064212621 seconds)
    (239/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.06412038 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109789682 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065683378 seconds)
    (242/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072751677 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168317547 seconds)
    (244/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.064906544 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063524433 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142765716 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065984583 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072301231 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071838922 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06533967 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065705557 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065589413 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066733218 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072311729 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.250657647 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065988407 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064295433 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063818464 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065536162 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066035261 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07225697 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063969729 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06428307 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065502643 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076408463 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120648698 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07622831 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07172587 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 0.133591107 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064308548 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123041921 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066482031 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064648612 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064509811 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.166804767 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065377772 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065704226 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071655194 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064473266 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063674298 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064573571 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.146271444 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12963229 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065737715 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069244788 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064441494 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072494611 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066586542 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065448019 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065420246 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075517643 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065334662 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072198339 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066280639 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063165592 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144606917 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083322951 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070193841 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087947557 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064275078 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065384822 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065222157 seconds)
    (303/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065099455 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064607536 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063936969 seconds)
    (306/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064036533 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064049901 seconds)
    (308/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064079435 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063360716 seconds)
  done (took 32.80710259 seconds)
done (took 34.237298208 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084214297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088559099 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072122306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08339324 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079010697 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098389359 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071858434 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076543585 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078716251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077015993 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076647039 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069818939 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072810352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07259752 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070718598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085750222 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07795219 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071098926 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07150362 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062295554 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07182887 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063171002 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062070061 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069507608 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074611084 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069604237 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07202573 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072357471 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063384156 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063555222 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067746021 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071976226 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065490629 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074972509 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070899151 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071414806 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072580352 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077504529 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064120838 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06510298 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075024106 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06507504 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073215098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071318081 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069969818 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07196832 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073647164 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076900785 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088752936 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070003866 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076138191 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076013845 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07665219 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070786374 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070220152 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073554085 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071178414 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088587061 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073692429 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069925204 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07511749 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074606742 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071959632 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073394552 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073149867 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076207467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076757614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072275025 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075733989 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07276526 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064478833 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073211844 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069622781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064706854 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076789912 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078817621 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06340574 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068826358 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073093426 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07308508 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064312699 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069319634 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063337067 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069639738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06918799 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071305453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069999234 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071951833 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063749293 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073639683 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072360006 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073263738 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063774471 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077533888 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064317331 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071071603 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064807408 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064939178 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063576201 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069808567 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064719888 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069911396 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072854812 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06378853 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069648506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078463925 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064452891 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072333951 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063631578 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063945485 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075282299 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075583736 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06489483 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06973041 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064583216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070182727 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063809792 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064588784 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064886752 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064791045 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069633831 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065368246 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069440944 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070468116 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076989613 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064392748 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069357136 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068964557 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064420558 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070439963 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064064037 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06438166 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063005717 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077118326 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068878893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064081374 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069392065 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068583261 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072658685 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063002774 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072711129 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069586547 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068373328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070120062 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062864815 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.217976978 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068176707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070988613 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064962076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065802956 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064285172 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065143253 seconds)
done (took 12.497095572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064293492 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.091252472 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.073806243 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081308224 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077298261 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066233184 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06909676 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081892043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06791148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084565004 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087699056 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086123665 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091688304 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064411182 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065408605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06621666 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064027068 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072355836 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079793555 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087255904 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094737989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065115079 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074731621 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081042233 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076016892 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081669209 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066226758 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065798485 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067876618 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082764216 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090022847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066000523 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066554514 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079435603 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079372357 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072175014 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065814561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069356382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066102857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064892172 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067202821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079555201 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0720069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069178688 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06610555 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066442172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065939377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068780852 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078610857 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06855701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074074076 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077198473 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067165557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065438762 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063496988 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069513924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065424429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065930915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065752169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065062537 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065270604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067467361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066497786 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065954166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068560802 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068205029 seconds)
  done (took 6.27141751 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081484982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093716848 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081867256 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082172869 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064629751 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066443474 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066004607 seconds)
  done (took 2.076687435 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064613582 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078458191 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081715423 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081764493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074642334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084223908 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066205198 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095867736 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064842854 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077931432 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.11114187 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083105777 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068419937 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07744611 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066223258 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073316091 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065919089 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074152344 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0736396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081708542 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069477856 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093213951 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079462262 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065975846 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085932251 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069955779 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064879918 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065978877 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066933225 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066746343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066400233 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104854488 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06980405 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077444357 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067207245 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065164129 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071811311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068937263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069139798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074510017 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070883694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066616208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064093893 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066683844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068216194 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069719901 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064202295 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066850584 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066561694 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077762861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064547183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069919548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068697302 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070423812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071698952 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069898001 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074312632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066931743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077671553 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073825155 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066636804 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109266162 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073806146 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071094873 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07332019 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070138059 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069955538 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07097282 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066670812 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067580348 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067016164 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073738691 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065170654 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067875915 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068971053 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067189757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069578269 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082813316 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082122816 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078487002 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067496501 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06677103 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069378039 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082374054 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070166007 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066488283 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069284812 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065004888 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070486115 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06722802 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072161394 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067183119 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073733567 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067777636 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068164858 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071864321 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063529685 seconds)
  done (took 8.567045212 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068025602 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066059577 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068293208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068041909 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066595343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066796341 seconds)
  done (took 1.974106318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0886689 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065951916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080947245 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066153306 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10136948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073284602 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073092481 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074865637 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07946153 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078509879 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072677891 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073749968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070599286 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065864407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070627589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065549063 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070389474 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066984733 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076260619 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066029852 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077119742 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06602269 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066067954 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075323968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066808293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064928147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065364707 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078917049 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080829722 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075014528 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068466323 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069107743 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074408345 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074296637 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072942619 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074336768 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066739795 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071589697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068518315 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068901483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075156705 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068216638 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068872558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071493671 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074890859 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074268779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071574185 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070497138 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072739575 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071957572 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071727178 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067126462 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068796901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071831426 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074044751 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074716855 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07165801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072718452 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067610937 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074165652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065933397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069250345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074408461 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068636484 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069660336 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071507939 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074320349 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068428059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068255659 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066444494 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071892452 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066065258 seconds)
  done (took 6.714362879 seconds)
done (took 27.126276667 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.56424063 seconds)
  done (took 2.080112804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.557513399 seconds)
  done (took 2.11219431 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.66092644 seconds)
  done (took 8.210515541 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.288854109 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.319057698 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716661139 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130366944 seconds)
  done (took 3.037266357 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720171087 seconds)
  done (took 2.281821249 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230394046 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219988702 seconds)
  done (took 2.023850371 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343454342 seconds)
  done (took 1.896741156 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.12027959 seconds)
  done (took 2.669605645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220038611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155638443 seconds)
  done (took 1.937035001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483044397 seconds)
  done (took 2.03789051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.059977171 seconds)
  done (took 5.619055155 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229659874 seconds)
  done (took 1.823669975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232848687 seconds)
  done (took 1.794528982 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.718681506 seconds)
  done (took 3.27219139 seconds)
done (took 42.361000154 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080609183 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082795101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08315553 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078314539 seconds)
  done (took 1.85739206 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071014002 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06760089 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071686288 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071803643 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069031964 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069830567 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069827243 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066858099 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069993572 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068926071 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067496384 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06876644 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071647552 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069037247 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071913192 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073201192 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068638399 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068500974 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072021111 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068752877 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071609121 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068801875 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067189688 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068882226 seconds)
  done (took 3.231420493 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075389613 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069459178 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074006304 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070491532 seconds)
  done (took 1.852778733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072861948 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080857868 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08320447 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09024254 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073521732 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072966523 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079428068 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081181691 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063367941 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083115595 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065546319 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063725085 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06410932 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083469488 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079409015 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060325788 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061675551 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073239308 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072184788 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074477164 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065337709 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062374217 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072925232 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072058309 seconds)
  done (took 3.316602882 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07642682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063000309 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076195679 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089451081 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091536924 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062961426 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076295341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091254865 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123560077 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063305898 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068659199 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062295262 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10318815 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063022815 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077254309 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104618547 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10726302 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066500203 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095154216 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062569598 seconds)
  done (took 3.196520789 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073914024 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066777942 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067300423 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063872576 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074791114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070373505 seconds)
  done (took 1.989661439 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067020818 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067060108 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066997225 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06610088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071687109 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066626272 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065441918 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066954931 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066704837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066257967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065572952 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065292247 seconds)
  done (took 2.367539521 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16630982 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069678003 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069282751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066731301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069270387 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064634825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079597253 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067767212 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084451005 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066514669 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065886437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068162456 seconds)
  done (took 2.508046485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093297092 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093161472 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13039878 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110443006 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091814921 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093123932 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.14379437 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131572026 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108710611 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069061335 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08243315 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102128269 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097499546 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13443173 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106691503 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069474435 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096511211 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07880869 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101189653 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108163923 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105544983 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108532928 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085718846 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097996133 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100152041 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109533448 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068603417 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067772038 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132324245 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094945147 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086444994 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090104336 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106540306 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06825017 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08604236 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09792287 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082154884 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099032522 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084674595 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092454916 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074206624 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122896014 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099767687 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10606203 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120126362 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09287666 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104988417 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099218937 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082900123 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113594693 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092311163 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088515639 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073652253 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15071436 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088254338 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.101159077 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10643903 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079505509 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084541029 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089871012 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.117565622 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093515325 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.253064696 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103502235 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087890226 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092492624 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132375635 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085084817 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103182363 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127940713 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08923506 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073491752 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088265454 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067308655 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09612179 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097906199 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091885841 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106610872 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075037774 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122455113 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104246944 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069819376 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108720463 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089527831 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152152059 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095361143 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099100817 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08899727 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.142722515 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083038806 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077366501 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091220617 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130809931 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089198619 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094551322 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122626188 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088694691 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081458362 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072996131 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082789149 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092161057 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106169066 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095837213 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08666264 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080054412 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086820486 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073263091 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078198562 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094345463 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085869405 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115218344 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100984053 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110681772 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075465196 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10503678 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091535644 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133236218 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118003919 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084022361 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109382532 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13436846 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10443975 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081853283 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097808464 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113664542 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103783878 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08807905 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13113245 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108348586 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.237449719 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088852096 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090384899 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.103574719 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150105258 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08825267 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103867315 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134204483 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.103140114 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09120245 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080670444 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08832089 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105659659 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136288128 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089657722 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068180831 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091773844 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126022392 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074114672 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093185845 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088131224 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083591379 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079984064 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065772009 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099754267 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132337684 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112104796 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098208223 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092493511 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066913279 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097478136 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094984923 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14486304 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113934768 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098873177 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092851969 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100443565 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079300367 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131857592 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.130551004 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092638001 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091005081 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124928182 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087957108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100236356 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107558785 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104485052 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095510143 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.142265645 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123546092 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.116409195 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103512326 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122871729 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078350731 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104720225 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071146644 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100566627 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073621956 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099245448 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075504168 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107310592 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.233176577 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099912218 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068169322 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074076025 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10312072 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086727821 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084167025 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130309903 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120590989 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079685046 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092043893 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100301546 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098986893 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107395342 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08728601 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093437743 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078459795 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081462369 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091924188 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094906814 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102340828 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077728871 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074590205 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140695624 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104570713 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092405026 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092135401 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.117120172 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083753794 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082908121 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106087493 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137083713 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119354626 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080266972 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09224635 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069476236 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08402468 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075172605 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110989211 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074547385 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113718906 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068126901 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.131194502 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08631097 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099550212 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091570405 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121835693 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083293787 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122732714 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085822787 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106712785 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09315242 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088680294 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104166982 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089991054 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096781734 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102598752 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084029176 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08771768 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120728409 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105889679 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113651298 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106865874 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133493154 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108793207 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074028366 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103332757 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091587301 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147459158 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.250285904 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0864769 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090615483 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107096968 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085108371 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143078361 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087116511 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082934483 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115540111 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091963547 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089367206 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07679675 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103350362 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087068405 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110818748 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097121499 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.093841402 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105748743 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107143513 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08336072 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084729266 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123477957 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.128671727 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102633405 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086440899 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086611202 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097323854 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093068724 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108755877 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07922892 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073516974 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.065646891 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069254996 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116116641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103347088 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095624263 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095117591 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102873227 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070753487 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087828697 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09244445 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083822246 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090130693 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114655187 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103683669 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127479215 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100504433 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090915308 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13655019 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12702252 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088350382 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09292441 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095132781 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075349967 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146807381 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113207645 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076004516 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081118128 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07638468 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086106037 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070900836 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107035055 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105301725 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074386263 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097657461 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092645547 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115074092 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088936858 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073718074 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076860619 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070893881 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07097157 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09441864 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.073336214 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073571875 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120132479 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099006196 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099842203 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076619404 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071520823 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127140008 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065187043 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127748498 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079570876 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105549484 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.076565516 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073783379 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.082963208 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097605845 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101601852 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105998987 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066550005 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096244742 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141658231 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0727106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070794838 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069853135 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104020803 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080883633 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134257292 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084366163 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083162191 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07200018 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116236679 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097233705 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077680166 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116012006 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07548311 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.066440397 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076950563 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102179614 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068065707 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069608344 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105610134 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.617026065 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085644256 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072222342 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078990588 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112326923 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077605253 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101768272 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.110892489 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099575549 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.173003109 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069001388 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084715197 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.097677915 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093463286 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086468157 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074994536 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.080476085 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082854718 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07507255 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099543787 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077012332 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080876433 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074542222 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.09630659 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122323419 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080091135 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096398626 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.350824223 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087140123 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099707347 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108651598 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104477298 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087578114 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089176828 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107148905 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083772443 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080109554 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10053906 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076716774 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078484676 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114350467 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084342667 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093412793 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104863615 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084210212 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111148561 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119288763 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113905903 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098471749 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079266931 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087471763 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087848248 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073276499 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080262742 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077111107 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071236232 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11109929 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08769541 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083112817 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102269141 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109168546 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102768659 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111847596 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091547587 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095270306 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100669842 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127850304 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154116659 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099388843 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.118334403 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132487118 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076778794 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074157066 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078712646 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13191424 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.078976582 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090556724 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.229289109 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075855705 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079116453 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090530599 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107022278 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080672414 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079289531 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096977267 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111126507 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08285247 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080377968 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092458931 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103259644 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128658506 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088670496 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07402107 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109528157 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102237437 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123761426 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.07180562 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081476612 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127072992 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084771531 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.255836436 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077976833 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119009688 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131626216 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073551046 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088706751 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068582542 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086189466 seconds)
  done (took 49.713303888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.149702046 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148950028 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079660943 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094721969 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.189984762 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.20722435 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.11659271 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092033669 seconds)
  done (took 2.799277791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065278302 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079278947 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099886932 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081293925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063806005 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065260479 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.193693564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079756397 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063450136 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103276392 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072918349 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065888256 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.354877764 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063385652 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064353192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071720242 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064398266 seconds)
  done (took 3.356951968 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.351683752 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60852934 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321829252 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071469318 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.994068406 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08557069 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191578019 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133793136 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078367931 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534573064 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36696664 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132058076 seconds)
  done (took 18.591790831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074906939 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073480357 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07666947 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076203561 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071306814 seconds)
  done (took 2.083803243 seconds)
done (took 98.467919105 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080228361 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.16876377 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067100272 seconds)
  done (took 1.98456629 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08093623 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077939596 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078321004 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076237096 seconds)
  done (took 2.03338005 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073141844 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073401804 seconds)
  done (took 1.858349879 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236357383 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160144489 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087877631 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080678915 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075963306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076680169 seconds)
  done (took 1.956965756 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070183403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068910244 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.06885343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069526744 seconds)
  done (took 1.988194903 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066495074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063813697 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066250816 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068872058 seconds)
  done (took 1.980145245 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081487458 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080141789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074914585 seconds)
  done (took 1.950306982 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110861766 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096344316 seconds)
  done (took 1.920091741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07743842 seconds)
  done (took 1.793574099 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08574989 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.091429215 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143889524 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10674719 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143058885 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127683871 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074907582 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075676587 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070998048 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07004844 seconds)
  done (took 2.702559871 seconds)
done (took 22.444063171 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07649159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364732974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35703491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083308123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666406123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353497035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038571642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086972099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095417009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065508263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081672778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647132906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028686132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330722362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01438199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328263359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648044807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065851106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064902863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065679076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019696643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065464185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065528094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065798762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646613356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371653833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068914801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330355974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067499975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069919847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355486953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069552849 seconds)
  done (took 16.351071514 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06786705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11806868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07165313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083043409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070552451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069742974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07176361 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067809082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105492056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065851856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081846646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065171154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070090393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067263257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085661581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066273129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067462707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068242034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070531411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068241115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083858025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06586935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066562339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066825348 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066557582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079339327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067290832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065871372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066327151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068382025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069753757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069729956 seconds)
  done (took 4.074618314 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11974035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122778068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0710395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109267454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117075413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067629595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147659851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088379898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110879965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065809533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082079502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065970428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101037418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067719095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088430154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069447777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07014101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066492449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066435219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067297375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084721326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066136443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066630301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067001362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067616784 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080955259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067561763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066651528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066437832 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068845299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070339273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067788158 seconds)
  done (took 4.343616939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068032542 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069223628 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077311064 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079188499 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065034992 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067516678 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067681478 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064417607 seconds)
  done (took 2.304454998 seconds)
done (took 28.805867088 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077073266 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067939354 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071073967 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086810322 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073443218 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070655303 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064041368 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073767071 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070773817 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070867907 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072828718 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066399862 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070220099 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064932038 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072124478 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065742486 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072843596 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070152745 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071624186 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.072483898 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068377578 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071679531 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074738403 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.071471418 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.071132787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.071191076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075849691 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072272781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066809433 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068713447 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06732448 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077964367 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070761497 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070860141 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064083924 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064211143 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067676703 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066261751 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071417314 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072697088 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066258472 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072908795 seconds)
  done (took 4.679791271 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087268326 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090713011 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083246195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07959451 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101956837 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080106047 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087580704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076288283 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074403288 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086439817 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071044947 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075591176 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076837644 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06936116 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075308653 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072108038 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076893688 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071146236 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076498366 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075883535 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088282693 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069375789 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076657811 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077434719 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071712783 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077916891 seconds)
  done (took 3.800618271 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071435633 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084267608 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089590986 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152387455 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107627423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079098022 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07925652 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098115529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096633416 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065435089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069503019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091728531 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092625646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072568781 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104561706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083467905 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077897326 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068252467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073813776 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100503283 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090519958 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08607783 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098048336 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085856336 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066157783 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075571369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074285643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082245264 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074758235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079227056 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071645915 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070497615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068012361 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079285808 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070615521 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065160431 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088168648 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078427134 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080444096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.109020406 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074831012 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066656405 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093750702 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126796053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065777444 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067906444 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068173633 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076856432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06647934 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094824657 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085747404 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066835146 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085506801 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067916904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067705382 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080320361 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066535386 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067513584 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077790522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071778853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084886427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069579193 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084030952 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064721621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075547904 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066301436 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067067944 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063833713 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098752648 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071585622 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114243772 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066058426 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062911419 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077971673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075688928 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07111244 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064963326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082885214 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077036345 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070891506 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078324563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070164648 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070687901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102177781 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065260909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064182216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06466199 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069430799 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069236391 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065502933 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077770901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064782188 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068429542 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079521502 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06505311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067291083 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070096827 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068891657 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066698763 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078429524 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069722309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067569396 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078397643 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067341609 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069246831 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081496646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076218662 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066297388 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068551736 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06946969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068967873 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071838731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070349242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069123398 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072866701 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073639052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071467612 seconds)
  done (took 10.796117746 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166303382 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160358665 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070128313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154056568 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076916688 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073544738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156817356 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088700699 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069052102 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070629718 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067923687 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09715098 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092431935 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107007993 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073187492 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067680657 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089449645 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099191604 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154562799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147993385 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090947061 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076077707 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071155016 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070126896 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070476947 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077420251 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087723612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076094062 seconds)
  done (took 4.573904881 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075892301 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091672603 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070333679 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077417051 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085529408 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066648849 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068211158 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067616381 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080519182 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0740372 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066285091 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070751135 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069955935 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069222365 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067474892 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074938755 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075323351 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067618234 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071902272 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073109239 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078365844 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094777741 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072731454 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068539152 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070781935 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068554099 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076658252 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07968333 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068170839 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.082682259 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065751231 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073402627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082739723 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069694768 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068404388 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069076388 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068746469 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068948456 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068852977 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0671095 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066736415 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073630837 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067507889 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075509207 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08066212 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073653451 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067687974 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068991372 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069434761 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065778086 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071301325 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070278327 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070661464 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076443035 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072328124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071197556 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072775358 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09784169 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073500849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067386928 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067944939 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067134749 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069672419 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077544503 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084221012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067536171 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064878594 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066686375 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071478667 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080359398 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066027687 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071216242 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063323437 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067482833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07110864 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071662494 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069741297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067242251 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068590168 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069041128 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068649151 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068106875 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067772756 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069719926 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065985691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067065561 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069248359 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069788617 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076260453 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06749535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071082979 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069836698 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067281217 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071479108 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073853424 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071286532 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082629994 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07670401 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066647143 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064352046 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080181406 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067997097 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065463919 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072166555 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070442454 seconds)
  done (took 9.332432034 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088137706 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067808767 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085491049 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091139838 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078197334 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073440188 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081348801 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06830686 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083247845 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066154821 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075887638 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065789354 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0807945 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077859602 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070164629 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078935603 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071366753 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088368851 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083109323 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067793985 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077949428 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081081126 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081190824 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084734262 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084347316 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083738445 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078059922 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069020083 seconds)
  done (took 3.98110012 seconds)
done (took 38.899702677 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.820674356 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.997629219 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.821815302 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.0457754 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.880444392 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.036529353 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.907758641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.818366496 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.878438275 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.841566963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.080792643 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.270778118 seconds)
done (took 67.221742022 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.877875879 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.983467861 seconds)
    (2/2) benchmarking "String"...
    done (took 2.0512313 seconds)
  done (took 5.783935614 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.962055488 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.578423185 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.091167607 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.828553773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.831485461 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.227379688 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.613941052 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268768597 seconds)
  done (took 31.189379725 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.986910562 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.054799248 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.517199368 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.554711715 seconds)
  done (took 15.906266758 seconds)
done (took 64.566485281 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.850231383 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.821788197 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.861197989 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.854893995 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.827052371 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.826333332 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.82600738 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.826100813 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.849557524 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.84919748 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.82435816 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.819348502 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.817770736 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.819067965 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.321852029 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.865611531 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.826811132 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.82515905 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.837399198 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.86891049 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.824453895 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.966699667 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.317749054 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.016120229 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.444656144 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.023160172 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.139690623 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.245096364 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.823415382 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.816057741 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.885181678 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.975569285 seconds)
  done (took 205.445875983 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.832205016 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.006331045 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.056483957 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.854074968 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.500292643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.000948118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.92581032 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.521967636 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.832284103 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.827578611 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.089612964 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.828534749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.131526486 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.759063234 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.857173429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.930899777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.078924566 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.128181221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.858168676 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.980565235 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.834855553 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.89371486 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.844231547 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.084401097 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.858377668 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.923727967 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.845014837 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.853747754 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.009285087 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.061555105 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.832258263 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.848141487 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.999993106 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.687401301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.852279016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.856071432 seconds)
  done (took 173.038796039 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.008830641 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.841499783 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.830078574 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.87945445 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.956503062 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833951032 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.5006603 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.828758079 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.507143136 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.82770963 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.833453706 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.832710092 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.831992816 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.848631832 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.905554064 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823723621 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.850793229 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.835980955 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.863141566 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.828975467 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.833077385 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.835463502 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.833058516 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.833265002 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834400526 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.833276041 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.834323687 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.96835893 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.077211148 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.832056433 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.835678443 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.338673541 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.841605262 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.914862978 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.828907403 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.928448785 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.87772542 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.834947821 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.944496335 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.83738755 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.052486802 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.902882108 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.834127804 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.837052316 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.899890356 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.844204763 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.829976554 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.828449306 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843160083 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.900927305 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.067916639 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.836986005 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.960832213 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.309135752 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.834310649 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.836584949 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.838318147 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.40617014 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.837616351 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.837996476 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.837748115 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.841433187 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.838442419 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.832067525 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.835179887 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.214155884 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.833484669 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.907566564 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.013965477 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.943960735 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.837389265 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.008921066 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.021220259 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.834762342 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.837029277 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835212695 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.83783557 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.840909977 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.83858047 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.95595264 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.844007517 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.95260062 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.917958188 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.957577949 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.837880482 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836728293 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.660902541 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.90655771 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.860653841 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.650877494 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.834821372 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.207753632 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.597490623 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.837887342 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.83818291 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.851318608 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835881959 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.839023363 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.83786214 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.919199001 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.836279962 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.964412411 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54813337 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.016892678 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.837237657 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.837366545 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.841305544 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.922391954 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.957800625 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.841097121 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.904889949 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842939654 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.841711294 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.914225292 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836523565 seconds)
  done (took 406.586848177 seconds)
done (took 788.899967939 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40300511 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.370041182 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.463963186 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391577038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.363999184 seconds)
  done (took 13.75101804 seconds)
done (took 15.517850119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.858842388 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.847296757 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.897645659 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.920579942 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.85647046 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.863070503 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.920168291 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.86001647 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.888202473 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.895031073 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.924224059 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.926726351 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.867240167 seconds)
  done (took 26.285848703 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.841097414 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.992765638 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.050669683 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.872741447 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.842964844 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.048201577 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.897017908 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.970769998 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.974591632 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.05415296 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.055992553 seconds)
  done (took 23.365155157 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.840733023 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.98490794 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.059689754 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.875061056 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.844910142 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.061769552 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.904282869 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.974520023 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.976347765 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.055767642 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.065263809 seconds)
  done (took 23.413671857 seconds)
done (took 74.832391989 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.834547786 seconds)
  done (took 3.597439129 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.847535141 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.982867914 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.83639076 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.836105159 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.833963314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.83362665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.833572681 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.833380638 seconds)
  done (took 16.600818496 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.833068579 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.832786359 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.830724076 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.83297431 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.833541117 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834293363 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.832562148 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.832422427 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.834501272 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.838567974 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.834403588 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.834914497 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.832684418 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.835602429 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.83448913 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.833305328 seconds)
  done (took 31.104103719 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.833424779 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.833388615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.833893235 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.835833288 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.834780691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.835514078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.835356465 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.834580247 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.836269891 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.838073965 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.834670484 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.836138533 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.835644382 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.833556478 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.834027647 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.835065356 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.834610932 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.834895087 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.840501657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83531135 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.835676784 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.836738323 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.837065854 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.835981318 seconds)
  done (took 45.814772473 seconds)
done (took 98.89429958 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.525993003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.824692596 seconds)
  done (took 10.119351617 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.836419625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.837070873 seconds)
  done (took 5.441884456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.837182985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.838128588 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.837132885 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.836945885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.838530302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.837543651 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.838235605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.842105209 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.838369059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.834917065 seconds)
  done (took 20.144525332 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.83765023 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.836073547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.837559797 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.835948732 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.836998657 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.837960526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.835469509 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.839297146 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.836886746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.835329008 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.837923878 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.836679623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840054188 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.838577622 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.839026842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.841136414 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.836454006 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839697918 seconds)
  done (took 34.842383682 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.837011561 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837244073 seconds)
  done (took 5.439418557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.838683276 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839646823 seconds)
    (3/7) benchmarking "month"...
    done (took 1.839827918 seconds)
    (4/7) benchmarking "year"...
    done (took 1.839448653 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.840102285 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841475545 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.839861765 seconds)
  done (took 14.645094317 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.840262967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.985639092 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.041557613 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.648531964 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.841043024 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.84304832 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.324920522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.8433013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.843077916 seconds)
  done (took 20.981562971 seconds)
done (took 113.387058975 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.64788269 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.838582752 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.098283666 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.992892638 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.856976235 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.178238343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.864906261 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.50200573 seconds)
done (took 42.756010437 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.882223891 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.840543414 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.884615549 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.887669575 seconds)
  done (took 22.38077329 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.8404928 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.178975581 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.86819068 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.743346688 seconds)
  done (took 22.417177744 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.231748548 seconds)
    (2/2) benchmarking "read"...
    done (took 2.183268661 seconds)
  done (took 6.187371956 seconds)
done (took 59.646267733 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842715251 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.840368757 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.838688404 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.839631796 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.841507505 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.839832862 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.839959831 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.840540414 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.841952297 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.842562282 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.842741124 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.84310209 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.842689685 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840967717 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841022621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840883521 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841591806 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.841588042 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.841349763 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84287624 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841487807 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841696616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.840821687 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.842309353 seconds)
  done (took 45.964729287 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.840767513 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.841264797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.842133268 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845193564 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.845150738 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.841720183 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.843621449 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841259337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.842106378 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841303707 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84163864 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.842979664 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.841618175 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.840469848 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841085981 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.840817029 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.842845442 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843391083 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842587014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.841242698 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.845448903 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843323105 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.843124012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841971421 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.843604113 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843962985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.841743673 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.843160777 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843354358 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.84168816 seconds)
  done (took 57.045655347 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.841343043 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.844559283 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.84173365 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.843146123 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.843022866 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.844458103 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.841976767 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.844173298 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.844520001 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.844547741 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.844832562 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.842992516 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.845517712 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.845830793 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.845127176 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.844567845 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.845492802 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.843689709 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846258012 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.844644285 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846386846 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.845074498 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.848507896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.845662848 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.846067097 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847149965 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.845594459 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.845928571 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.844527245 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.845389596 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.846162499 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.844458206 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846579575 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.847302188 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.841576961 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.84045067 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.841389818 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.843386528 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.841807768 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.842374406 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.844780837 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.843511182 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.841567977 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.84154586 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.841319323 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.844269576 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.841341698 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.843453489 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.841204408 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.843193781 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.841393557 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.84259261 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.842370881 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.842884991 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.844276577 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.842824396 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.841822477 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.841230114 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.841091239 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.842761844 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.844028347 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.842146069 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.840498672 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.843678679 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.840183773 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.843961929 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844277795 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.841389709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.842974036 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.843651213 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.844647605 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.84290656 seconds)
  done (took 134.515990563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.842984281 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.844920699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843322748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.840929158 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845034667 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843587759 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.844862095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841974238 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843938159 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842683664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84317285 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843542767 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844816456 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843442376 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846570491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.844343592 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843498238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843249311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.844975255 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84423469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845119564 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845023424 seconds)
  done (took 42.338037295 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845947985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842880218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.842863314 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844192654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84355479 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.844004826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.844832866 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845816275 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842396311 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845279722 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844409044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845166418 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843324521 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844851787 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843960898 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845043019 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845191435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843205839 seconds)
  done (took 34.970379288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.845326501 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.844379941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.844250419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843868401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.844760921 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.844209083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844810736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.845847032 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.844550365 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.844988629 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.844490112 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844159166 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.843793796 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845113384 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844988082 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.845052616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.844840412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846030026 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844073046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844186491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84602841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846948034 seconds)
  done (took 42.364592381 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845065893 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845822942 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.844599682 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846300664 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846764016 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.846234262 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.84629911 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.845434958 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.843781323 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.84640408 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845574621 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.845452461 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.847162841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846807099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.846867791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84771515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846894331 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848283458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845989266 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.845788332 seconds)
  done (took 38.701973858 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849241166 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847547303 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847805493 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849899616 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848689259 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.849404741 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847710308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.848554514 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849636533 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850349557 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.847826539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.849586503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849332555 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849139793 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849090325 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849541409 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848918252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850841096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850190103 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850630083 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850797063 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849729941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850030891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850835907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.850158773 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852680129 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851668369 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85082831 seconds)
  done (took 53.570239459 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848701426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848530281 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.848676584 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.847706365 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.847259098 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.848716836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.849390882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.848532394 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848279077 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847814444 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.850533076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.848999144 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848908536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.852801167 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849411941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.84885598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848926715 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.849985961 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84803172 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849057004 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.848576735 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850353437 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.849514311 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848330915 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84878433 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.848254363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849069481 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850613558 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850074562 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850827556 seconds)
  done (took 57.25480558 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.870154966 seconds)
    (2/2) benchmarking "in"...
    done (took 1.871333307 seconds)
  done (took 5.521858495 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.848367361 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84847137 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.849593446 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850753738 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.850559372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.849052082 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850069069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851900995 seconds)
  done (took 16.580526207 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.85019529 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.860164601 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.850758382 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.85213983 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.853212998 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86572346 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.861978139 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.85831779 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.860155679 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.862259959 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.856110508 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.862238266 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.860905179 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.862969417 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.850992471 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.863088835 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85923874 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860382865 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.858508312 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.851628065 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861576355 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.853744243 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.851057049 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.853740625 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.849532359 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.859269398 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.868793333 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.858933291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.860274885 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.850772749 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.866455172 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.854041477 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.853453053 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.859101411 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.854979317 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.855295087 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.866622363 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.855718651 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.855482806 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.851660907 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.860653997 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862254729 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.863017246 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.869189619 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.856356507 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.852156825 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.852767484 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.855331063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.865891336 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.862960951 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.861280647 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864867599 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.852530884 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.8513928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.863231265 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.855562977 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.856093183 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.861621967 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867448177 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.868016935 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.864614287 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.882158102 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.869665056 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.855351762 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.855040207 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869956056 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.87952768 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.867031373 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.863870931 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.85379072 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.868838867 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.853687011 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.854577079 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.853854001 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873726747 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.864930079 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.856935664 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.853845671 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.85537673 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.857801681 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863548546 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.857918684 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863024149 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.861610846 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.873944983 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.886004995 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.859326784 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.857703844 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.864916449 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.868695828 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.860908868 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.865210398 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.867364051 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.855179234 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.864191262 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.870327242 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.858549041 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.857981581 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.867242667 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.87467931 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.857821058 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.854659293 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866091053 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.866050045 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.856223723 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.857822097 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863776041 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.859596758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.873162177 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.858852567 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.860492961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.855213046 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.86942332 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.86238754 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.856204486 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867105692 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.870106608 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872207959 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.871818386 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.866979626 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868336319 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.866494898 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873665318 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.883947551 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.859144488 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.869747742 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.869747769 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.872346705 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.869446565 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.858846662 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.867614858 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.857184574 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.860466196 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.866089962 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.856882229 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.860337856 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.85715421 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.861430193 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.857851949 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.860101683 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.872875959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.865877308 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.867550805 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.860110407 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.868488682 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.859781054 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.867373105 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.874137628 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.872721745 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86042088 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.858413763 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.867724137 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.87238529 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.867210067 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.858748356 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.857926299 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.861949722 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.872278471 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.867741519 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.862001478 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.859611126 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.870516942 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.863140738 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.862093253 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.864634942 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.870104258 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86389276 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.862427317 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.86698532 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.867346842 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.869731822 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8626636 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871144413 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.859923379 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.859913664 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.862750101 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.859537631 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.871463567 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.870379124 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.878258094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.87476354 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.876899421 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.860262743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.875338867 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.861638185 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.868117588 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.867776425 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.864900267 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.863930693 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.86168653 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.860812173 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.871040304 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88905929 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.878243074 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.8709719 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.874753658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.881902371 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.864000401 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.872442662 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.862119738 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869851695 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.871166593 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.863972926 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.864753499 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.861950467 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.871493785 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.873462537 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.860608667 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.871771944 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.865728172 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.861690345 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.87050673 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.864715937 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.871140053 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.860724647 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.872632651 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.875694673 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.86371358 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.877604274 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871722096 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.863892713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.865598541 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871460499 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.8671956 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.862693774 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.870735681 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.872608533 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.872700384 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.871876598 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876924264 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.875824742 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.875925662 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.874463342 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.865225493 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.873801631 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.864552478 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.874527965 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.872280002 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.872188616 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.863306202 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.876659042 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.862988297 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.872985749 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.866142836 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871877194 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.86688937 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.87260828 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.867054895 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.863404447 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.880287395 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.865252376 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.871934618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.864269704 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.878290807 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.879318263 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.872947612 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.867086346 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874649866 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.874720165 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.878764199 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.87945917 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.880667315 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.874173832 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.878270529 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.867770838 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.873605935 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885672207 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.882089175 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8648377 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.864594706 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.868135603 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.874395147 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.866129357 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.867392371 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880047421 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.877976026 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.879275508 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.869353599 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.867969884 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.868290516 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879055951 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875653329 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876837344 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873949563 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.874352119 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.873921381 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.865869185 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874820835 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.868902705 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875858353 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.869788065 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.866889658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.876589681 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.86811281 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.884453292 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.869388556 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.875234462 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883022731 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87577396 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.879415799 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.876223272 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.866711272 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.874615611 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.874607125 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.881363546 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.879897621 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.870075412 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.878349335 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.885290426 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.878729363 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.879904804 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.877050305 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887212126 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.871099372 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.867473709 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.871798422 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.877132153 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.878442717 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.867475869 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.880587698 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.884238543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.880224519 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.881882096 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.876343474 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.868511964 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.872292007 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.870870742 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.882523061 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.880706851 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.879833157 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.867366733 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.871437823 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.869062415 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.879855426 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.878974739 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.877410474 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.877915388 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.881256546 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.868505414 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.872012158 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.874743253 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.872243224 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.872680133 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.868946723 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.869442159 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.886671425 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.874813994 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.884734592 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.876259823 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.869959486 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.887452164 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.873285705 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.872390834 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.884417904 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.871648239 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.886600726 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.872135034 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.874933705 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.883421642 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.871220029 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.883922412 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.889389242 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.885847613 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.886253758 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.879679545 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.872732428 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.879667509 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88830315 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.89421242 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873772327 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.880772566 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.875982574 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.887462189 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.88157847 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882952377 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881686938 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.883045457 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.880250951 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.883384902 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.88239361 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.891359378 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875924412 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.872995066 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.871968341 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.8838819 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.888307387 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.873167136 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.886873517 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88442583 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.886410447 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.892135135 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.874987139 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.885601254 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875261693 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.873782572 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.874056095 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.874237703 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.879692605 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.88100266 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.87441529 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.875800621 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.882994498 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885623688 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.885375825 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884469411 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.891083498 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.87479541 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.875816869 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.886561583 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.874889552 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.883877828 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877721823 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.885579859 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.887647922 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.87396273 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.885992789 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884073462 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.888730447 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.883325855 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.875967453 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.875488024 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.884881545 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.887600048 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.878465909 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.880768802 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.891566515 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884125586 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.892186917 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.888980771 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.876821997 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88728868 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889657068 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.885993661 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.877535453 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.887535173 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.879793307 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.88750846 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.885993444 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.882808305 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.878395583 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.888319581 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.88750465 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.876035327 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.886211938 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.880626762 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.877384538 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.885418575 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.88418185 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.889584018 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.875883537 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.876400212 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.888981882 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.884475014 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.886126483 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.887163437 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878925883 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.877469876 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.886806381 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.887342 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.88261214 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.876817715 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.878111355 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.887582958 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.877537022 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.877886995 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.889045491 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.890606616 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877155494 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.888985253 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.898305775 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.877208143 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.885984562 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.891849054 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.888054006 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.879907395 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.878034142 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881837762 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.87817532 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.892859612 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.880323022 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.87961968 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.890475699 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.877506851 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.892354922 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.888991993 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.890887809 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881322215 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.888968445 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.876590972 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88908726 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.899999392 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.88531122 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.890367969 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.889661382 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.89062011 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.887808619 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.879027349 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.880030374 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.892387418 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.893980735 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.893485874 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887750105 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.8896532 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.882444816 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.889040388 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.884150413 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.889103878 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.879794385 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.879640863 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.890500905 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.895190508 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.89636508 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.881322815 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.889240688 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.883306604 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.891448916 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.905685396 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.882936787 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.883088872 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.882652286 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.889642741 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.894078476 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.896353747 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.902458003 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.891636433 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.883955687 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.89195276 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.906627712 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.891058184 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897054671 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.921256934 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.89691448 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.883650861 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.890549536 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.894644632 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.885391132 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.896309213 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.885137391 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.896023581 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.885239261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.882990644 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.898535539 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.882213212 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.883345241 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.88509032 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.895233977 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.895510022 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.885714158 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.900732145 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.88574802 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.882606702 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.896232546 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.896776838 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.882345353 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.883665104 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.882852313 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891340443 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.882425344 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.886559162 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.901595148 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.886458332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.889930157 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.904192885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.906578382 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.889094163 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.883661969 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.886311467 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894501384 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.89365149 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.884183859 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.892587729 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.891544731 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.892870173 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.891504534 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.892532799 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.890311817 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890531856 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.884223217 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887653389 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.903798085 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901712738 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.895592127 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.898356757 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.895980041 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.884183764 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898544069 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.899182349 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887489313 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.893295578 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887917488 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.884361952 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.884884868 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.885457987 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.895871743 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.896184265 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.889956051 seconds)
  done (took 1119.408296255 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.885310314 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884367169 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88776996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.884402426 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885014042 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885422071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884259307 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.88608705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.884992076 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.884475997 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.884807361 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886344889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.884713818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884817848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885399696 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.890699501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885294126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.884838581 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.885460252 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.886148177 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.886089647 seconds)
  done (took 41.417645146 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.88534107 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.88466523 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886976778 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.88305795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.883629289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.882319665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.884025836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884204809 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884586455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886279176 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.883754583 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884405969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88370239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.883850822 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882113383 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883481104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.882846667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885173523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.884717728 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880254712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882421533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.880922172 seconds)
  done (took 43.261223912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.888250954 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.885132775 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.890433897 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.883181981 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.88277396 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.88523864 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.880358156 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.896018768 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.89306201 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.893303947 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.899339755 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.888662518 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.880197625 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.893284501 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.879456425 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.882079929 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.028738375 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.88378177 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.881853078 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.87891045 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.880586078 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.894977239 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.878895471 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.879738513 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.889952241 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.881689049 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.880250544 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.879711137 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.879540202 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.89245834 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.887252369 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.880147943 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.888738749 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.892933937 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.891085454 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.892597984 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.887383822 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.881934192 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.880621579 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.879021665 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.898311994 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.907219831 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.881656817 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882113094 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.894918999 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.881685262 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.88026762 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.890419392 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.888777506 seconds)
  done (took 94.394134761 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.881477158 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.880330615 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.883076455 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878499307 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.877958485 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.878161954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.879219783 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880103534 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880454719 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.875769226 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.876218353 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.87703964 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.87818298 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877771188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.878014792 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877627822 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879312251 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877651002 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.876334314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879753447 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.877736387 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.875998585 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.876254772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.875192345 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876015871 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876903128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.878197984 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.877205036 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.877027821 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87899888 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.876610279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878964208 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.878021941 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.877609994 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876890562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.878210684 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.877031777 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.876455174 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.876926819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.877909339 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.877838225 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876471251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.87615727 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.878259849 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87644312 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.875342939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.876978651 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.876581131 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.879125432 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.879258808 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.876144976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.87744506 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877367201 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.876745182 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.879038422 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.876637085 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.880927344 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87751124 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.876617659 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.878488582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.877412062 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877532875 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.878625254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.880110614 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.87722436 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.87718473 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.877581439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877903311 seconds)
  done (took 129.506444717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881529253 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.878994864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880386578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88469638 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880409918 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.879504128 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.882129067 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.880209799 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.879379722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.883898864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.883833235 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.87851102 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.878926011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.877849579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.882371008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.880457567 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880860777 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.880268029 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.880594771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882875189 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.880199207 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.881442614 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881812879 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.882313648 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.879303822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.880370399 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.883511768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.879155585 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.88119632 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.882178171 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877830698 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.873468113 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.87353417 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874357682 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.873744834 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.873738058 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872985481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872715975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.872236257 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.872675655 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875641392 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.872169855 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.874120188 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.872460461 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.871918122 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.871819306 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.872661854 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.872584637 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.869194141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.871219645 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.871431869 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.873189862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871265179 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871185611 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.871001365 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.86825307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870883872 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872651006 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872900861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871734774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.870825266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.868386557 seconds)
  done (took 118.154111669 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867080893 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.866159976 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.866356789 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.86676106 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.866772401 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866166008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.866818086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.86644712 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.866249754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.867476352 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866840833 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866899145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867561561 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86654011 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866086386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86725123 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866214129 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.865513396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8664639 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866039512 seconds)
  done (took 39.132885692 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.865741019 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866101126 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.86651734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866142328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.866246898 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.865806217 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.86517557 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86818646 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865934275 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86638019 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866684264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.864638784 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864912371 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865030446 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86492033 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.86533965 seconds)
  done (took 31.652088885 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.865146454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.865240584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.867659313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.867658722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865283928 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.864940038 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.865738382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.865206007 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.865145084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.866208649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.865151919 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.864727144 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.865033898 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.867453172 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.864684529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.865907392 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.865568254 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.865214279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.864867607 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.867847247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.86630404 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.864659431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.866212886 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.865672913 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.864767716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.8667077 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.865482054 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.864474374 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.864260184 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.864738187 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.864919415 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.865869871 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.864728224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.864846194 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867760065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.865409561 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.865578587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8649502 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.865200078 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.864457234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.864789614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.865990363 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.866556237 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864163993 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864033739 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864347052 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.864527777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.864916162 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863522698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.863514939 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864856225 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.866202634 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.86524202 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.86380122 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.866295807 seconds)
  done (took 104.393466033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864010988 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863355977 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863285506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.863362683 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864272176 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.863244145 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863668483 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.863904844 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863481162 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863183448 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863613146 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862978532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864349707 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862947215 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864376311 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863453772 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.86432894 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863844649 seconds)
  done (took 35.34063641 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864536214 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.863866556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.862987118 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.862983269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.864836753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.86359921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863169447 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863219218 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864392537 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8650666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864065681 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.865112827 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863061607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.863874191 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8636465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864667119 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863967995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863513563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.863161026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863189064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.865025402 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864061081 seconds)
  done (took 42.8026425 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.871664179 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.871940797 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.885872117 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.889780639 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.89058177 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.904375743 seconds)
  done (took 13.108647643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863297407 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86514158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864013709 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862464531 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862718714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863844664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864688857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862854688 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862924856 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863221632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863544199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862841279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86328243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863260191 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864255757 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863786033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863911042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863821581 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863077553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862817371 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863092812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864112615 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862833159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862887482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862879241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862312659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863217817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864011408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863333923 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86347998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862528841 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862835839 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865457977 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862557738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863027188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863109016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862213837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863068028 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862139041 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861698994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862114583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862538221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862209136 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862886755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862261625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863696984 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862532697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863182465 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864322129 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863213451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863430504 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86293571 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862923588 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863753965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863318708 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863354738 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863153911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863777263 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863513818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864157083 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864203315 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86393281 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86423122 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864386598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864999161 seconds)
  done (took 124.777606222 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864284027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863794551 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863578545 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864381007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864738627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864416868 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863657131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864596928 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864109134 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864328129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864624212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865758384 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864350294 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864597184 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865406567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864956617 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864713341 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86441471 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865097905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865126173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866522868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865839503 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864716162 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86504943 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866260645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866263133 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864873077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865673956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865163535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864373476 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866119859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864854768 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864701165 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865372862 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864608178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865302749 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867355252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864745795 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864822122 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864666492 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865700337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866406178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865663558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865894739 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865520558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865286243 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866179465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865890811 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865101653 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864851218 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868326978 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866215241 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866878793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865940556 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865733388 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866353762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866516718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866961429 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865944266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866676692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867130475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866343532 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866683549 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867991239 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866858003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867219097 seconds)
  done (took 124.920936657 seconds)
done (took 2592.88420786 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.909361415 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894284549 seconds)
  done (took 15.600581589 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.035170247 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.985027319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.870691452 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.896741711 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.870369877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.88752528 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.89207636 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874866322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.870738855 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.870286813 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.872552639 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.055388874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.889384 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.871061472 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.871265233 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.964101098 seconds)
  done (took 52.382645835 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.876021242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.876020727 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.886414272 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.876727624 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.877729786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.887949686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.905820864 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.882500685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.912746736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.889548478 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.945089657 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.887261917 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.876367736 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.931192289 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.890197247 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.891110613 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.970595775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.953828679 seconds)
  done (took 36.017447137 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955118184 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.887951078 seconds)
  done (took 10.649193598 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.898727366 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879929195 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.915693117 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.887716452 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.904861741 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.885646282 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.912746216 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.914425426 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.912873626 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.91438794 seconds)
  done (took 70.830632468 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.879899421 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.87695089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.879402302 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.874183974 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.872288248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878672155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.875054364 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.877243144 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.565728973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.915104688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.883827346 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.883382159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.87561503 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.877103371 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.873777054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.900443973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.986476854 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.873561493 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.874271165 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.880675475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.875863808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.928796698 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.889112497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.876839693 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.908290188 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.559362268 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.887891805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.88077431 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.98605208 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.873894213 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.875472053 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.090180831 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.880525957 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338302489 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152932298 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.8805107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.886701004 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.882480818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.877730075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.995170277 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.876958734 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.882939161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.785212703 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.128774325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.967691172 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.922589766 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221819582 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.879663385 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.877071422 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.911757107 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.880203017 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.878817953 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.893578463 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.37788183 seconds)
  done (took 133.220863083 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883587355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.233294182 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048017024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884544732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165796812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089210894 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885406413 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927475061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887056903 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.112584106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.136219867 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986180502 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.884218439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.884114435 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881181618 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.881660137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028021897 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950378632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884454786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.882445013 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909279716 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121219911 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.002496541 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88632477 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.909281286 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087866909 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.004190263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.984731472 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.666174919 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.884737576 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94416899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.885542453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.883916716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.883308374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.038953253 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97886297 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963708553 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.887683857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.882842689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.883096058 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542493683 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08121497 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.979384655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.008329392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.135692377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087671524 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.660320373 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.884449609 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616077304 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046745132 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.110120512 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.117240999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.002294275 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.886501389 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.424431875 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.883303163 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884288837 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.12932718 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103678095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982490287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886993313 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.885662903 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.885511566 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120448654 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.890166472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97918714 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.888816772 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.886502563 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.981285915 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98390472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.11617809 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095951549 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917495985 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.212858169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.384701267 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.132070736 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.950532328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137645955 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.888517302 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887104883 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964771592 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.720859831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142020278 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129228416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.129409092 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919912982 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.605654199 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.88648958 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.111888046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.106070766 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.13630431 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134238039 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.125623445 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.219023608 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.890667687 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.887833672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.159751275 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006716362 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.898501366 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23115369 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121481587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.427986092 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915578955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.191686627 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018896884 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.896029535 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.517347861 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.888872053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.110986087 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.931792409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.890943964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892607412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106703861 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.860934787 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890416671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.536594736 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.949989104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.895764293 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121690817 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.89378405 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151170241 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893062727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121120534 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.337956021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921710369 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.120399663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.135962946 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.896968839 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132180845 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.128322672 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005234319 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114214401 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.607527191 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891582835 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175895718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894356335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.891730297 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061478846 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.893374009 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033450139 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.901049777 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172712825 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914212696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.122338394 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.898601311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.14873842 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.922899074 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941046678 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.895338699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019287145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895400885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723969448 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050008888 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895877615 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.893160375 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.69439582 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.895413704 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040551517 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117603159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915170208 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966092249 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.555169942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894547504 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974920584 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915731321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.284330755 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.896075204 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.144757924 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.901384215 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895333497 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.896703581 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126652999 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078554546 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.895232601 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.894831241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.791227594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.895522171 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.894448347 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.074312061 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.250964521 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.89621498 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093232016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897360234 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020417045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.900592783 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.959768342 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23113209 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.894251938 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.893071307 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.895154879 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.896349956 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.89434091 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154242254 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.917530482 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.40947066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030592909 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160625414 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.202788924 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.132943734 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.937250236 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.896908818 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.147021537 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89829597 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.955528823 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.897566598 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91456121 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123293448 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.89965768 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100048864 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.163304754 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.742265786 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942119678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.898627354 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895881757 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.895933085 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038716529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982034534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899109917 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.895566471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.009759551 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.018258233 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.106621922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.898385691 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.977993198 seconds)
  done (took 907.47701268 seconds)
done (took 1227.985270488 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.895964522 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.89691463 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.891242773 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.901538119 seconds)
  done (took 29.404730717 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.890155553 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.89700567 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.891331197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.896975095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.889334639 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.898113594 seconds)
  done (took 13.181296634 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.890857195 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.902162848 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.900798807 seconds)
  done (took 21.513109213 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.964674846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.304495872 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.028490582 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317387039 seconds)
  done (took 10.433570656 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.894275261 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.893637067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.893879314 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.891930838 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.890873518 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.891798193 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.891293608 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.892254001 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.892162342 seconds)
  done (took 18.852772621 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.589595725 seconds)
done (took 99.802028 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.898121078 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.133788456 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.278899024 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.955502499 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.975268119 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.068057401 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.021239824 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.989094906 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.901663415 seconds)
    (10/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.353324131 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.044922372 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911856026 seconds)
    (13/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.09528187 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073181679 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.192268498 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.050974804 seconds)
    (17/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.125186365 seconds)
    (18/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.890621318 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 4.11621032 seconds)
    (20/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132184362 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.989707271 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.916275517 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.899272279 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.193430632 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.896712974 seconds)
    (26/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211043364 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.322498823 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.009301641 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.901537983 seconds)
    (30/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.64350649 seconds)
    (31/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.344537005 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.98753933 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.754089432 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05506565 seconds)
    (35/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.213564113 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.638899271 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.215661146 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.30363588 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.91591742 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.018618026 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.036561918 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.969258673 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.206625409 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.587608166 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.082123103 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.90116223 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.990084648 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.75432195 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.224170787 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.971242488 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.097497901 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.986978825 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.50303295 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448768477 seconds)
    (55/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.911935502 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.192329245 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.893454512 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.320375893 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.952702216 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.511723109 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.789042329 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.004304472 seconds)
    (63/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.027757541 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.144629876 seconds)
    (65/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.38054242 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.194261373 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.905066924 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.145025236 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.911710345 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.917553265 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.993270313 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201200775 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.907540972 seconds)
    (74/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.988027153 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.971669191 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.974250209 seconds)
    (77/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.094086246 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370711109 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.071441445 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.322399756 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.2489845 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.914471985 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.108884766 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.905609774 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.09968659 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.913757833 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.292532202 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.150288794 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.232983455 seconds)
    (90/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.15193286 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.901046344 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.032905918 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.910413256 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.219405092 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.919782306 seconds)
    (96/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.0050592 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.919781869 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.904667892 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039365752 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.202540448 seconds)
    (101/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.001118743 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.914937561 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.675233577 seconds)
    (104/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.026519082 seconds)
    (105/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.972682162 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.216326912 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.898899641 seconds)
    (108/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.049004513 seconds)
    (109/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.903765932 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.615080497 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.552153577 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.73496045 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20691404 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.160447673 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.553284905 seconds)
    (116/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.33793993 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150234149 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.194164905 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.898446012 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.918624928 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.030472493 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.284669616 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.027761579 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.00121266 seconds)
    (125/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.204682907 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246431548 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.998228207 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.898696622 seconds)
    (129/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.378336161 seconds)
    (130/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.657384292 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.04188173 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.563701256 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.741318526 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.064595989 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.994015448 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.907554526 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.956324085 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.924916622 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.061567045 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.077527271 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.907761837 seconds)
    (142/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.032236504 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.149728941 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.00899038 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.905307747 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.196595089 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.249839085 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287362314 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.001581374 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.062660653 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.983241121 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.919437005 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.184667083 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.210342422 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.27961259 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.915175931 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.287485305 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.91197632 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.909114893 seconds)
    (160/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.685879112 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.049761323 seconds)
    (162/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.253167363 seconds)
    (163/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.636460393 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.907505702 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.5671659 seconds)
    (166/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308545749 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.531117296 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.043150565 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.27685301 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.908959153 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.308724707 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.9117811 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.154687065 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.718431497 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.80169011 seconds)
    (176/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.788840461 seconds)
    (177/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.856478935 seconds)
    (178/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.491563692 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.26638262 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.265513636 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.144081892 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.939708056 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.910908682 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.097839912 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773614894 seconds)
    (186/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.062225775 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.999377178 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117032324 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.222417493 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.914131138 seconds)
    (191/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.217294394 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.969952005 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.871336567 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.392953314 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.04230438 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.900280475 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.35869922 seconds)
    (198/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.99108527 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.881429899 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.30137759 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.951755431 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.233480605 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147344099 seconds)
    (204/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.004794102 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.511722728 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.593479112 seconds)
    (207/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.205491765 seconds)
    (208/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.901790391 seconds)
    (209/309) benchmarking ("sort", Float32, false)...
    done (took 5.653324578 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.09751054 seconds)
    (211/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.036522732 seconds)
    (212/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.94153871 seconds)
    (213/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.917003458 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.911736546 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.009305687 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.998449548 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.21290342 seconds)
    (218/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.038404048 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.057436413 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.812730678 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.097283056 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.916910891 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.929486227 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.912441762 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.911680343 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.090794757 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.910942994 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.96934815 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.981147437 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.231510161 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.915802423 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.925758599 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.905178416 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.007159223 seconds)
    (235/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.288373869 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.031480686 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.130327578 seconds)
    (238/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.691012551 seconds)
    (239/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.067300171 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.030257872 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.911332784 seconds)
    (242/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.00754319 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.912399389 seconds)
    (244/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.351203406 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.006920471 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.034177183 seconds)
    (247/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.199096876 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.935312431 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.181185334 seconds)
    (250/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.6499272 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.277056713 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.189709118 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.90681826 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.057785708 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.913297238 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.908405409 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.030309496 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.989668058 seconds)
    (259/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.154617709 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917488465 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.931022679 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.164539942 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.165122997 seconds)
    (264/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.021707522 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.585509159 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.921052345 seconds)
    (267/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.464166224 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.931029897 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 5.623226666 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159125621 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.913053922 seconds)
    (272/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.988632089 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.943866605 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.311388932 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.880343846 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986345592 seconds)
    (277/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98595222 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.911297405 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.1626067 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.911704956 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.607347637 seconds)
    (282/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.085487665 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.015663137 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.210921361 seconds)
    (285/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.005980627 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221374865 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.657760825 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.072267452 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.100387689 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.14618144 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.819020961 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.660951 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.020864285 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.906775949 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.011086906 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.932204117 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.008804913 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.93877977 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.769233191 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.008054389 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.069120768 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.989393194 seconds)
    (303/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 4.580494938 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.907237602 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.604850795 seconds)
    (306/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.317092422 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.127624462 seconds)
    (308/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.611047572 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.195621841 seconds)
  done (took 1021.120277092 seconds)
done (took 1023.024717446 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.935431691 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.929113199 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.912311938 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.933299386 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.025982506 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.956464593 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.925896421 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.915415184 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.962517711 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.961936474 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.911889964 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.95188371 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.914169824 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.913460442 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.911749827 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929049176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.216819082 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.938615246 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.930839172 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.924479202 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.932297701 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.911420416 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.963471037 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.952417985 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.917266257 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.918261083 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.916508877 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.93407652 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.026902207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.918348205 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.918114057 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.927539797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.217102285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.937612421 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.91210797 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.935100362 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.93040719 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.926690312 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.918148219 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.947510858 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351550063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.918778269 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.915974688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.914706423 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.914804765 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.921727925 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.915960365 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.923008735 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929535281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931825824 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348211344 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.936350115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.918898514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.915212562 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.928384437 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.916933416 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.920012983 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931403053 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.935198927 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.931888175 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.207259549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.947344655 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.918925338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.933766121 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.925005299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.384007986 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.921491848 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.922451174 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.352654671 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.92913442 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.385449118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.930977469 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.918002901 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.931297647 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.949484618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.220541678 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.939267201 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.915461533 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.926652559 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.917587871 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.929527494 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.93446949 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.923132994 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.919711125 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932999321 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.960418776 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.929703484 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.917908455 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.928542664 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.936701239 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.926641531 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.9293185 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.920981209 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.915866659 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.929378679 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.92184341 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.920273338 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.92235289 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.922211507 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.930785013 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.351758631 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940115475 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.91396071 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.914962196 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.917966004 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.93331569 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351647622 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.92405671 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.941059281 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.967647126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.91979405 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.209125859 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.94746155 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935473285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.929900658 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.921170107 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.915537028 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210520099 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376920496 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.940187382 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.919406475 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.916946033 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935453511 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.920393231 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.916226999 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.223591476 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.945781838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936133 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.041316347 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.932556046 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.95268773 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.917861919 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.924295209 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.964723088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936909581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.953090617 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.922542371 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936594269 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.938460602 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.918067342 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.932616598 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.933740012 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.923384281 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.929275224 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.917589953 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.96458573 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.934353353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933698548 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.941043524 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.042502838 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.91824033 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.211019198 seconds)
done (took 301.270491113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.002710619 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.926244424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.05571402 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.917400407 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.014282289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.998481775 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.918709088 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.918495679 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.917822246 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.435470669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.918250876 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.924156888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.92586447 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.917821078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.997172439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.918866166 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.918821216 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.208025711 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.92185329 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.006665585 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.926754682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.920162008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.919761448 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.433548778 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.930320144 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.929305981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.010109392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.919847994 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217480655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.927584474 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.926612166 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.217955241 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.00983184 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.93160695 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.927306152 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.926473021 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.016450011 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.927762232 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.995108779 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.999099739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.048953174 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.954672973 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.928715015 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.929118022 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.922776307 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.922486816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.920638596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.952316042 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.930159976 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.924774358 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212190839 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.926276409 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.928564647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.921068536 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.92247437 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.935835154 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.921875971 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.923170257 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.008811105 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.923613751 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.999968297 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.437112898 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.427588415 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.922303835 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.928930076 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.921394074 seconds)
  done (took 188.321396099 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.997984206 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.002252238 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.996047244 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.934905749 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.979578465 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.9981176 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.93386753 seconds)
  done (took 15.692210265 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.937649935 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.922330214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.979832541 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.979729642 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.92408248 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.11515117 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.942366007 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.928491789 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.958389257 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92343584 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.579479524 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.98053039 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.926671476 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.930681581 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.94427471 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.986454489 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.933705064 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925157887 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.03988025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.082060583 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927734358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.929147125 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.958345314 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.944184519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.923716968 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924739151 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.92556249 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.939757426 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.924059329 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.923429287 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.923443413 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.984399424 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923770051 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.931938737 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.923192474 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.924656153 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.924959034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.923265369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.923560299 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.933351684 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.924002167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.923882869 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.923393937 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.923427645 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.923642359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.957010537 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.923524842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.923815511 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.924508144 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.924140617 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.959089106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.923714823 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.924095329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.929636987 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.980273021 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.931916358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.927197034 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92366794 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925088779 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.924764437 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.924370842 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.084288135 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.982967002 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.924231154 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.983352309 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.08487932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925364321 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.92587943 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.925380288 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.022437054 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.92543452 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.983745281 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.925640406 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.048263754 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.92508538 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.119294778 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.959942517 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.938198018 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.939588614 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.934224061 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.942511299 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.925956139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.937257564 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.941904945 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.930980694 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.92518895 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.925760099 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.936725257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.942339331 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.928757705 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.9857226 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.926398637 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.929161244 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.068639306 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.926350197 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.044919565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.962903133 seconds)
  done (took 211.718762894 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.942255893 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.943263005 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.937831222 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.951003888 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.936941902 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.936362832 seconds)
  done (took 13.50343931 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.937998175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.931658851 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.927273257 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.92746201 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.929528295 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.930110746 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.927172242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.938223404 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.933610306 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.927786196 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.930284788 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.929511338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.930816539 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.931082195 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.928815587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.93135685 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.929121891 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928547622 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.92794502 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.931078334 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.074366281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.931365469 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.930939684 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.933487829 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.935056293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.928501178 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.949375951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.928291452 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.928385123 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.945157368 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.936936311 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.931193185 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.933424468 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.943931529 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.931867686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.93297718 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932006843 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.929717202 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.929068078 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.931420145 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930275342 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.931523473 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.929247117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.930547726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.940558557 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.936748265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.936793354 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.951072584 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.929997383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.93009834 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.931532098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.929387927 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.932137367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.931586722 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.934937171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.944155702 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.934834979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.930387245 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.931780667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.933866127 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.93305671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.937456288 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941322608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.93360614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.938083577 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.932249127 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.935061507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.935933362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933410141 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.931284219 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.931889756 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.930770966 seconds)
  done (took 142.182609762 seconds)
done (took 573.288049575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.337857054 seconds)
  done (took 9.196220761 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.126568104 seconds)
  done (took 9.071844419 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.55539248 seconds)
  done (took 10.417326099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.952773428 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.989363269 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.943836473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.943634387 seconds)
  done (took 29.69839359 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.169518191 seconds)
  done (took 9.028663255 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.944603786 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.933030724 seconds)
  done (took 15.807946531 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.069074752 seconds)
  done (took 8.930336718 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.02975331 seconds)
  done (took 8.910179745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.944673986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.949817766 seconds)
  done (took 15.774037581 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.938078456 seconds)
  done (took 8.79779775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.662637778 seconds)
  done (took 9.590670672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.936379727 seconds)
  done (took 8.815273744 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.991274116 seconds)
  done (took 8.852178231 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.173314399 seconds)
  done (took 10.032338885 seconds)
done (took 164.790679846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.945223155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.941533161 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.941630803 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.943231274 seconds)
  done (took 29.632159704 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.968711565 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.968555098 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.976905966 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.967094716 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.959089308 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.958814545 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.968030975 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.968063726 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.95852568 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.966453979 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.967773942 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.967230094 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.967919458 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.976716309 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.976823807 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.965814662 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.96805865 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.969025342 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.958909719 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.978208574 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.966969579 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.968053788 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.935334624 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.934271225 seconds)
  done (took 49.022617543 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.129369268 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.011109496 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.097156304 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.989056137 seconds)
  done (took 10.088284564 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.934357219 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.998171736 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.986371557 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.980940494 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.028531506 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.036740119 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.987310447 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.14542103 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.051401635 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.061356723 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.942620521 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.95984484 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.960202881 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.990969513 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.038288107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.936753743 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.936091646 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.055583116 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.997133585 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.147013603 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.936272444 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.990583358 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.021164771 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.989197471 seconds)
  done (took 49.9756374 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.936984349 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.945778421 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.944145826 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.93811853 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.937574353 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.938066753 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.94324771 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.938312734 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.959119658 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.938606698 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.936752637 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.937732712 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.944101768 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.938104226 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.937601893 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.950425728 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.952787767 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.939727843 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.942406917 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.947028835 seconds)
  done (took 40.711738623 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.944253665 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.790444715 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.289504749 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.19724654 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.946315757 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.94501726 seconds)
  done (took 31.976915138 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.95780735 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.951650307 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.946445541 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.002092014 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.086432326 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.955948322 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.947512807 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.957275617 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990601008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01564077 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.966490523 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.975104247 seconds)
  done (took 25.617089305 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.947163184 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.94898011 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.949298446 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.96145338 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.956671388 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.955102117 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954303519 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.945218234 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.960619832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.962546118 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.953529167 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.957695228 seconds)
  done (took 45.320986882 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.150266161 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.163484551 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155903985 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.363559677 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.922933366 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.83966093 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.647343962 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.61290054 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.237748261 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.914325633 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.902451876 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.843886668 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.179390762 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.949174753 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.196393872 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.864069651 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.937896151 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209107377 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939621926 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.938938987 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230315602 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.997674494 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.151848296 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985177502 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.151982223 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.259207569 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.184179132 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.201730095 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.276130467 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.989434014 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.955991758 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.984599834 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.947152516 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.949151687 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.94503767 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.955511225 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210551786 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.940743443 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.943896856 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.932673351 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8653023 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.221047907 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.046917083 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.367555996 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.070247811 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.180904931 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.944644649 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.950192107 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000112159 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.160320333 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.03854614 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152827195 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865439753 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.27611817 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057594329 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.94286691 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.945022097 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.640021221 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.179831993 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.021358964 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.226739515 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.045442185 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.942591935 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.026997876 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.940872402 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.053337304 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.14026742 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.946951537 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.949730984 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947681889 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.038371024 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.154638707 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.943119411 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942804303 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.958339475 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944532918 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.294130186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.33224258 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.929097528 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.501503082 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.318812142 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.907472661 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.273517455 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984882186 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220656073 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.153347396 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.031211221 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.186094497 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.828384175 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946819559 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.747710702 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.023031991 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.005921741 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.94118765 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.95750346 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.209081669 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.051121447 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.942693387 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.868089954 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.953668519 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.145792164 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266306027 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.997277018 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.942780106 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.942319178 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.945406061 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.947211874 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.958947242 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.959343449 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.861059047 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.229895712 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056361089 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.205691887 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.936436319 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.637592709 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.213197075 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.068818114 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.542525023 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.073294264 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.87242317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08757818 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.957366172 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.94629911 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.143027054 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.366279226 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.962912743 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.184501682 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.973119382 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.976480772 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.948461222 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.025807055 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170358677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.946909885 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.192402911 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.188081883 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.584550352 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.970896633 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.020616785 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953202651 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.158118413 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.026454526 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.48716038 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.163911134 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.359637264 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.941149994 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.541336114 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.167232956 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320560087 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.960559708 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.963927819 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.976938566 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.645944506 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.87070508 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95083551 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.27546832 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.980976987 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.046659938 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.94818825 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.947213964 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955684357 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.02606131 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020296182 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019410352 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093754754 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.948581241 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948512241 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.94689682 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.485044748 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.599730621 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.239502889 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.947039399 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020125916 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.948116748 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535457954 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.950659397 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.983328958 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.961121196 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.667884281 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.985373994 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.171278249 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.347043707 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06659093 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.947766511 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952089505 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.647695498 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.956909268 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.647642045 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.235873583 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.994720711 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.393621039 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.01023324 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.041161214 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.961961898 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.948898076 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.949077128 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950862369 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.150583855 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.461519454 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.246826012 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.287816439 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.031164866 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.222353714 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.137354517 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.331178883 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.63291984 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461561757 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.174100979 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.949911426 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95072424 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.410988104 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.958812835 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.164404916 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.151933033 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.223653705 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.251078048 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.36057726 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954788206 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.969384047 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.191290799 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.949478854 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.395218791 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.976635853 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.270462308 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.753026265 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.219143983 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.012483699 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.961780028 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.59876467 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077822116 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.911484285 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078949383 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.876023162 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.644767439 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241911551 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.227064274 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928048786 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.296639309 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.243700774 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.176009657 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.574066981 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.895584995 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.005635327 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.031767279 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.959301647 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.338531464 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993099464 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.008100332 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.956576458 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.952263462 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.963432657 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.640460996 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.028936033 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.082589263 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.660825959 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.306208859 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.861317901 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224316525 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.005444344 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.399754498 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.995179973 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.16566548 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.957141519 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.354701577 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.000519876 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.224870121 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.908994909 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.165810573 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157576075 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.971096193 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.957300211 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878005738 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.823286833 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.95556641 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.97278264 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.840754018 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.955402429 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249723371 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.40035646 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989812508 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955626076 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.252105017 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.320575785 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.131756311 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.961050075 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.167026113 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.10197815 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.875169014 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.434885999 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.533056595 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.65367338 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.964502691 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.156427146 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.236477052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.074427602 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.991483671 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.036643888 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.221961894 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.93075059 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953909805 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.473638063 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.051545191 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.19437362 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.272017865 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.31550937 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.321950516 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.197799921 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.944166607 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168715601 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.315274898 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.196907945 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.886445964 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.045797346 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.171539859 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.236719075 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.834409842 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.66431724 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.196460576 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.960583429 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.88164495 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.164772565 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.468339529 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.327216629 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.486797908 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.980590021 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.985191565 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437811212 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.97133287 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891106476 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.957122768 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.904818531 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.17194985 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.981019472 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.995859575 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.51327277 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.177683999 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.349588811 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.037266493 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.996785007 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.886127143 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.676938978 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.906063192 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.98068288 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996932004 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029127972 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.960152438 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.159793797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.397215301 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.012720378 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.506610272 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161001827 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257674713 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.229645174 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.252789838 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.914198891 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229208929 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.908799775 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.323734572 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.043937947 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034394176 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.957374535 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.961325851 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228907774 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.261261922 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.385108442 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.996681283 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.244639363 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.05096784 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.960998893 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.96323665 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.301311766 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.195225945 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.17315477 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.036096773 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.1616649 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.031272672 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.473090662 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.963669518 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.962299061 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.095652398 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.893037753 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.64290694 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.252811878 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.7091963 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.161516629 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.479665112 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.862256948 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.991493862 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.006667646 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.958513886 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.967371173 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973059504 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.201120961 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.227032849 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.714156831 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.965298013 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.96080616 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.821377564 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.586339824 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.19477112 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.973298109 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.025637 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.965591661 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.078653288 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960955574 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.224004602 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.005949292 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960816048 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.968473945 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.180061498 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.476179692 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977673363 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.6607834 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.163653425 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.969139645 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442900886 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.405917192 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.046923796 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.008415071 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.992131427 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.205396521 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.493866975 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.996963906 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.956166161 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.18824465 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.963358322 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232131082 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236245031 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.963387346 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.176884107 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.29788286 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25100753 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.971999484 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.826605237 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.969276677 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.227867329 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.020513422 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.962699119 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.97120787 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.970547587 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.649060972 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4487588 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114656489 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.233944939 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.67837256 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.719179433 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.964977936 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.965601583 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.592207216 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.687183592 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.176681113 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.253685642 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.912353698 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.165878338 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.669877662 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.919990724 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.234865093 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891029054 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.965959228 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.322911052 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.235900203 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.907396136 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.968910785 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.522198103 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.973081081 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.04769448 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.96507038 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.096770206 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.227786592 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.253639644 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.067474006 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.606174564 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.648848794 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.904744461 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.020112073 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.774046552 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.530620988 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.592016295 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987683992 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985666759 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.893720264 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.970971006 seconds)
  done (took 1671.805914994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.993139315 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.001619372 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.019616055 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.017400842 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.05845581 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.036003575 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.003589422 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.043834658 seconds)
  done (took 58.068890756 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.975525141 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.991442831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.980819387 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.978107945 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.993755109 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.977488409 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.139319594 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.985669459 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.010310862 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.982442259 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.977529092 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.987141167 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.236651026 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.994617852 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.97782821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.969673206 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.980473838 seconds)
  done (took 76.039570086 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.970365951 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.185332462 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028120153 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.972314877 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.933924759 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.990073403 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.939949863 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.029666695 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.974330061 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.197009865 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.271036909 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.982980456 seconds)
  done (took 91.372260019 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.982021248 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.980096016 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.978914893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.982268684 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.979317871 seconds)
  done (took 11.802304547 seconds)
done (took 2193.336988515 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.210563312 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026345104 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.065808602 seconds)
  done (took 5.988234935 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.125177754 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.172216737 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.285713234 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.049004016 seconds)
  done (took 10.533835639 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.24004556 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.37083122 seconds)
  done (took 6.507274192 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.324418353 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.986685057 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.333633906 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.971068033 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.976183092 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.979018759 seconds)
  done (took 22.82772238 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.972518774 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.970865928 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.971837208 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.972238378 seconds)
  done (took 9.782980482 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.969531435 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.683166806 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.974088888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.981615496 seconds)
  done (took 21.506067047 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.116124058 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084031552 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.110176145 seconds)
  done (took 8.208119828 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.130552699 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820397201 seconds)
  done (took 6.848366083 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.11177559 seconds)
  done (took 4.008890268 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.000756079 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.244295178 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.470549739 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.943843107 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.648015532 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.072170167 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.360939315 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.24794537 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.409718216 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.455338297 seconds)
  done (took 26.752172687 seconds)
done (took 138.723864125 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.534979952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.031366178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.201632665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.401693362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.227480742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.201533198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.200484918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.391496988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.084091805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.063215915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.367594854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.225168895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.15294586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.024189443 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.153720994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.022391359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.225582392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.395740286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.054997145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.273588004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.211569541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.032448397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.271040465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.110333376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.230673667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.150601735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.560999918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025542004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.22692735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.586033789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.151463394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.422883818 seconds)
  done (took 173.128938792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.999067031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998720299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004000284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.999320839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.318741883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.002755469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.003978295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.999937808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.217991496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.198318756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.00037104 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.242340364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.001363883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.999530379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.001381078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.999803114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.384087923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.000051824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.999790981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.002457563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001816075 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.097875237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.000197105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.117421805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.354657161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.001349964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.001276117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.00240306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.000545854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.000053603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.003545312 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.000459648 seconds)
  done (took 211.871808281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.999814973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002065765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.005950237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.000827553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.001896736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.003030696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.003459471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.000811957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.770013504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.742940555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.002614474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.001473562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.004321268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.001519653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.000532549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.00106417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.001062259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.00209377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.002962088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.009712516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.002962746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.6822241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.002339276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.712489309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.004667808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011490446 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.002677034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.002395988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.003861233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.004978956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.004207691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.002105559 seconds)
  done (took 224.913379544 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.233145026 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.993080578 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.994596438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.003428303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.996050857 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.99277297 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.995627088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.239649194 seconds)
  done (took 20.373965368 seconds)
done (took 632.22447925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.356991362 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.741784007 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.144107023 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.021355712 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230766478 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.07027125 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.021241505 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.081639993 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.855236221 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.091528053 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.404943095 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.03458746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.77219119 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.045726926 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.135828534 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.078384499 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.380139166 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.714750864 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.164895935 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.679716946 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.185706101 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.970525857 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.095065368 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.907035776 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.436703291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.994187753 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.049894354 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.379768322 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.022020349 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.188061033 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.623978444 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.280268532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.040275077 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.025142182 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.070601518 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.048511118 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.226072337 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.038253431 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.145650344 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.763498434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.65951259 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.73577088 seconds)
  done (took 105.832544012 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.008214973 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.00370099 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.005274406 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.004780896 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.013084773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.004267367 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.005053859 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.004706059 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.00731771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.005553312 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.008903332 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.014333119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.005156449 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.014577587 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.005993768 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.007691912 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.00579557 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.014742915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.005549424 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.005595986 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.007102337 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.005628823 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.000638581 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.007509806 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.005496025 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.010046337 seconds)
  done (took 54.123030691 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.996451619 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.20267731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.252935942 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031036853 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.008720181 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.01175087 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.037607298 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.00512453 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.013190012 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.010173015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.107889687 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.004251392 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.02106924 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.255461263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.025214672 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.998266702 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.997934041 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.009032332 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.215387757 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.024944834 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.039361138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.007004798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.037884794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.025673187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.010756716 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009275203 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.013258534 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.483596089 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.02029347 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.109577998 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.080177543 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.042632955 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.360870146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.264739599 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.064177554 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.007545431 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.999834053 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.113602567 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.015409172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.010337659 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.040781127 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.018065471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.255658991 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.5501803 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.024170127 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.000746776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.480896957 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.126295173 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.052718932 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021371123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.264568948 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.028580872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.999655781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.012159024 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050216008 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.023888811 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.011539073 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299108478 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.027581143 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.040080566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.008858883 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.013097252 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.221709817 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.02115533 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.207467123 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.021779022 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.017910847 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.013517447 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.259071798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.027674233 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.561194297 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.025569621 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.002879848 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.112152767 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.215155039 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.509765868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.026006084 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.223531469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.377800667 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.048933241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.023452353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.470583305 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.05496541 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.022425487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.002554194 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.003362198 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.003700429 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.049251592 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.039599916 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.472289006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.562221369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.319495963 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.053307141 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.026217122 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.014666552 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.302010659 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.014921931 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.003494139 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.251177101 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.573001301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.030249676 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.021604064 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.545601501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.03051672 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.043238343 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.026501083 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269943941 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.032206549 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.051262345 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.005360394 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.022697812 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.018621563 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.04510465 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.025639823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.005388004 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.535302954 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.133200713 seconds)
  done (took 249.222463456 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.015033305 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.013677689 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.016471582 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.014328887 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.013724759 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.014435819 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.01354227 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.01501387 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.015727365 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.014370722 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.014390595 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.016466427 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.016771139 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.02287015 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.078167938 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.016973622 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.50225303 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.015854284 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.01945691 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.018228112 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.583521695 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.020394481 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.016875292 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.01875688 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.015627999 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.0166092 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.024069629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.058858823 seconds)
  done (took 171.5557161 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.008455701 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.071538741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.02166625 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.063234077 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.021030905 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.007077042 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.113037207 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.033916228 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.022934223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.0078063 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.008200417 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.0498571 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.015586734 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.103416915 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.047315528 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.111714377 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.118051475 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.014245789 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.008058448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.007809084 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.064398045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.021891551 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.048521298 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.078811076 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.021106352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.072007379 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.022110316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.009224874 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.017611973 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130297579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.023698224 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.039211301 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.052428962 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.03793918 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134055098 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.128362087 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.110380789 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.109526878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.023214578 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.009306163 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.009450702 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.010030856 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.074210479 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.02249886 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.020163407 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.123868204 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.024861556 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.010404442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.010055895 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.010007724 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.033386919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.037089316 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.054320367 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.142901473 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.053266727 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.037375441 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.115401764 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.131664399 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.013746879 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.115546272 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.017058686 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.121100906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.027152652 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.011565884 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.011829638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.013643817 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.057145269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.119943196 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.12205444 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.027996322 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.115243816 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.065014454 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.024776371 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.011187435 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.012089535 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.073737454 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.136669292 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.065825266 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.081020649 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.057285413 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.01963623 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.024395412 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.013011558 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.048502566 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.021764582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.124606052 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.137079522 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.020150177 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.011522193 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.012032902 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.011955687 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.04905656 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082831439 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.063152157 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.11798448 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.068687707 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.06013234 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.020554172 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.026212297 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.018633565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.05947823 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.020092353 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.024300141 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290636012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.054157775 seconds)
  done (took 217.570896729 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.391433874 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.065271561 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.095266892 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.28699135 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.415368936 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.941110046 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.064510335 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.069775225 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.097850679 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.193932869 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.138823178 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110212366 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.066109517 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.044443079 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.061484413 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.095094119 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.09379496 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.374393675 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.278164373 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.584596346 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.065147356 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.340743784 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.417082207 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.443033223 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.127030737 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.445513668 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668795071 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.161916265 seconds)
  done (took 67.086380207 seconds)
done (took 867.32403708 seconds)
SAVING RESULT...
DONE!
